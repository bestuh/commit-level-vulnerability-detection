cve_id,cve_cwe_id,cve_numbers_of_exploits,cve_vulnerability_types,cve_publish_date,cve_update_date,cve_score,cve_gained_access_level,cve_access,cve_complexity,cve_authentication,cve_confidentiality,cve_integrity,cve_availability,cve_description,cve_url,cve_date_entry_created,cve_fixed,cve_solution,cve_vulnerability_in_the_future,cve_reported_to_security_team,cve_public_date,cve_update_date,fix_commit_id,fix_file,fix_commit_message,fix_commit_link,fix_commit_author_name,fix_commit_author_username,fix_commit_author_site,fix_commit_author_organization,fix_commit_date,number_days_commit,fix_time,fix_commit_modified_lines,fix_commit_added_lines,fix_commit_deleted_lines,global_or_local_change_commit,percentage,ownership_author_changes,ownership_file_changes,ownership_file_owner
CVE-2011-0534,399,NA,DoS,2011-2-10,2018-8-13,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 7.0.0 through 7.0.6 and 6.0.0 through 6.0.30 does not enforce the maxHttpHeaderSize limit for requests involving the NIO HTTP connector, which allows remote attackers to cause a denial of service (OutOfMemoryError) via a crafted request.",https://www.cvedetails.com/cve/CVE-2011-0534/,20110120,"Yes. Fixed in Apache Tomcat 6.0.32, 7.0.8: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Remote Denial Of Service CVE-2011-0534
The NIO connector expands its buffer endlessly during request line processing. That behaviour can be used for a denial of service attack using a carefully crafted request.
This was fixed in revision 1066313.
This was identified by the Tomcat security team on 27 Jan 2011 and made public on 5 Feb 2011.
Affects: 6.0.0-6.0.30
This was fixed in revision 1065939.
This was identified by the Tomcat security team on 27 Jan 2011 and made public on 5 Feb 2011.
Affects: 7.0.0-7.0.6",No,2011-1-27,2011-2-5,2011-3-11,008447095ce8c3a8f713093d5e618f3f06f94ea8,java/org/apache/coyote/http11/InternalNioInputBuffer.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50631
InternalNioInputBuffer should honor maxHttpHeadSize
This addresses CVE-2011-0534",https://github.com/apache/tomcat/commit/008447095ce8c3a8f713093d5e618f3f06f94ea8,Konstatin Kolinko,,,,2011-2-1,1,60,88,64,28,Global,0.023160762942779,102,4404,Filip Hanik
CVE-2011-0534,399,NA,DoS,2011-2-10,2018-8-13,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 7.0.0 through 7.0.6 and 6.0.0 through 6.0.30 does not enforce the maxHttpHeaderSize limit for requests involving the NIO HTTP connector, which allows remote attackers to cause a denial of service (OutOfMemoryError) via a crafted request.",https://www.cvedetails.com/cve/CVE-2011-0534/,20110120,"Yes. Fixed in Apache Tomcat 6.0.32, 7.0.8: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Remote Denial Of Service CVE-2011-0534
The NIO connector expands its buffer endlessly during request line processing. That behaviour can be used for a denial of service attack using a carefully crafted request.
This was fixed in revision 1066313.
This was identified by the Tomcat security team on 27 Jan 2011 and made public on 5 Feb 2011.
Affects: 6.0.0-6.0.30
This was fixed in revision 1065939.
This was identified by the Tomcat security team on 27 Jan 2011 and made public on 5 Feb 2011.
Affects: 7.0.0-7.0.6",No,2011-1-27,2011-2-5,2011-3-11,008447095ce8c3a8f713093d5e618f3f06f94ea8,webapps/docs/changelog.xml,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50631
InternalNioInputBuffer should honor maxHttpHeadSize
This addresses CVE-2011-0534",https://github.com/apache/tomcat/commit/008447095ce8c3a8f713093d5e618f3f06f94ea8,Konstatin Kolinko,,,,2011-2-1,1,4,4,64,28,Global,0.016164074041888,186,11507,Mark Emlyn David Thomas
CVE-2007-0450,22,NA,Directory Traversal,2007-3-16,2017-10-10,5,None,Remote,Low,Not required,Partial,None,None,"Directory traversal vulnerability in Apache HTTP Server and Tomcat 5.x before 5.5.22 and 6.x before 6.0.10, when using certain proxy modules (mod_proxy, mod_rewrite, mod_jk), allows remote attackers to read arbitrary files via a .. (dot dot) sequence with combinations of (1) ""/"" (slash), (2) ""\"" (backslash), and (3) URL-encoded backslash (%5C) characters in the URL, which are valid separators in Tomcat but not in Apache.",https://www.cvedetails.com/cve/CVE-2007-0450/,20070123,"Yes. Fixed in Apache Tomcat 4.1.36, 5.5.22, 5.0.SVN, 6.0.10:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Tomcat permits '\', '%2F' and '%5C' as path delimiters. When Tomcat is used behind a proxy (including, but not limited to, Apache HTTP server with mod_proxy and mod_jk) configured to only proxy some contexts, a HTTP request containing strings like ""/\../"" may allow attackers to work around the context restriction of the proxy, and access the non-proxied contexts.
The following Java system properties have been added to Tomcat to provide additional control of the handling of path delimiters in URLs (both options default to false):
org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH: true|false
org.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH: true|false
Due to the impossibility to guarantee that all URLs are handled by Tomcat as they are in proxy servers, Tomcat should always be secured as if no proxy restricting context access was used.",No,,,2007-2-28,009e52c8d368a6121533cd2a1341c3f70c528503,java/org/apache/tomcat/util/buf/UDecoder.java,Correct typo in a comment,https://github.com/apache/tomcat/commit/009e52c8d368a6121533cd2a1341c3f70c528503,Konstatin Kolinko,,,Apache,2011-11-17,1,2,3,2,1,Local,0.231275720164609,281,1215,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,01cce30a11fffe288b31883e64ad63392949b4d1,java/org/apache/tomcat/util/http/Parameters.java,"Remove unused dependency on o.a.t.util.collections.MultiMap.
An indication here is that MultiMap$Field.name and .value fields are never assigned.",https://github.com/apache/tomcat/commit/01cce30a11fffe288b31883e64ad63392949b4d1,Konstatin Kolinko,,,,2010-4-16,561,1,8,1,7,Local,0.002589834898025,8,3089,Mladen Turk
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,01cef2d86d25fb41d4cb3933351aff856a7e51e1,webapps/docs/changelog.xml,Mention the attribute name that configures the swallow limit added in 8.0.9.,https://github.com/apache/tomcat/commit/01cef2d86d25fb41d4cb3933351aff856a7e51e1,Konstatin Kolinko,,,,2014-8-29,239,2,3,2,1,Local,0.054307209406607,1090,20071,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,0286e5f088076566e3f75946139300432a4c90ea,java/org/apache/tomcat/util/http/Parameters.java,"Followup to r1195943
Simplify code. Move toString() call out of urlDecode() method.
No functional change.",https://github.com/apache/tomcat/commit/0286e5f088076566e3f75946139300432a4c90ea,Konstatin Kolinko,,,,2011-11-1,561,7,18,7,11,Local,0.014118924789574,52,3683,Mark Emlyn David Thomas
CVE-2015-5346,NA,NA,,2016-2-24,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"Session fixation vulnerability in Apache Tomcat 7.x before 7.0.66, 8.x before 8.0.30, and 9.x before 9.0.0.M2, when different session settings are used for deployments of multiple versions of the same web application, might allow remote attackers to hijack web sessions by leveraging use of a requestedSessionSSL field for an unintended request, related to CoyoteAdapter.java and Request.java.",https://www.cvedetails.com/cve/CVE-2015-5346/,20150701,"Yes. Fixed in Apache Tomcat 7.0.67, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Session Fixation CVE-2015-5346
When recycling the Request object to use for a new request, the requestedSessionSSL field was not recycled. This meant that a session ID provided in the next request to be processed using the recycled Request object could be used when it should not have been. This gave the client the ability to control the session ID. In theory, this could have been used as part of a session fixation attack but it would have been hard to achieve as the attacker would not have been able to force the victim to use the 'correct' Request object. It was also necessary for at least one web application to be configured to use the SSL session ID as the HTTP session ID. This is not a common configuration.
This was fixed in revision 1713187.
This issue was identified by the Tomcat security team on 22 June 2014 and made public on 22 February 2016.
Affects: 7.0.5 to 7.0.65
This was fixed in revisions 1713185 and 1723506.
This issue was identified by the Tomcat security team on 22 June 2014 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1713184 and 1723414.
This issue was identified by the Tomcat security team on 22 June 2014 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2014-6-22,2016-2-22,2016-2-8,04164c1f01b973e548d95511d417f414ca723cb8,java/org/apache/catalina/connector/CoyoteAdapter.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58809
Correctly recycle the cookies when mapping requests for parallel deployment",https://github.com/apache/tomcat/commit/04164c1f01b973e548d95511d417f414ca723cb8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-6,61,1,2,12,4,Global,0.060455896927651,366,6054,Mark Emlyn David Thomas
CVE-2015-5346,NA,NA,,2016-2-24,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"Session fixation vulnerability in Apache Tomcat 7.x before 7.0.66, 8.x before 8.0.30, and 9.x before 9.0.0.M2, when different session settings are used for deployments of multiple versions of the same web application, might allow remote attackers to hijack web sessions by leveraging use of a requestedSessionSSL field for an unintended request, related to CoyoteAdapter.java and Request.java.",https://www.cvedetails.com/cve/CVE-2015-5346/,20150701,"Yes. Fixed in Apache Tomcat 7.0.67, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Session Fixation CVE-2015-5346
When recycling the Request object to use for a new request, the requestedSessionSSL field was not recycled. This meant that a session ID provided in the next request to be processed using the recycled Request object could be used when it should not have been. This gave the client the ability to control the session ID. In theory, this could have been used as part of a session fixation attack but it would have been hard to achieve as the attacker would not have been able to force the victim to use the 'correct' Request object. It was also necessary for at least one web application to be configured to use the SSL session ID as the HTTP session ID. This is not a common configuration.
This was fixed in revision 1713187.
This issue was identified by the Tomcat security team on 22 June 2014 and made public on 22 February 2016.
Affects: 7.0.5 to 7.0.65
This was fixed in revisions 1713185 and 1723506.
This issue was identified by the Tomcat security team on 22 June 2014 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1713184 and 1723414.
This issue was identified by the Tomcat security team on 22 June 2014 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2014-6-22,2016-2-22,2016-2-8,04164c1f01b973e548d95511d417f414ca723cb8,java/org/apache/catalina/connector/Request.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58809
Correctly recycle the cookies when mapping requests for parallel deployment",https://github.com/apache/tomcat/commit/04164c1f01b973e548d95511d417f414ca723cb8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-6,61,11,14,12,4,Global,0.025792071326222,324,12562,Mladen Turk
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/catalina/Context.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,19,19,351,109,Global,0.267888307155323,1228,4584,Mladen Turk
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/catalina/core/ApplicationContext.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,5,6,351,109,Global,0.427094668117519,2355,5514,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/catalina/core/StandardContext.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,19,19,351,109,Global,0.266052065142347,6551,24623,Mladen Turk
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/catalina/Globals.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,11,11,351,109,Global,0.26890756302521,416,1547,Mladen Turk
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/catalina/startup/ContextConfig.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,1,2,351,109,Global,0.53134962805526,11500,21643,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/catalina/startup/FailedContext.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,5,5,351,109,Global,0.990605918271489,2109,2129,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/jasper/compiler/ImplicitTagLibraryInfo.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,13,15,351,109,Global,0.11943793911007,102,854,Remy Maucherat
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/jasper/compiler/JspDocumentParser.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,37,42,351,109,Global,0.078881469115192,378,4792,Mladen Turk
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/jasper/compiler/TagPluginManager.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,11,12,351,109,Global,0.363293051359517,481,1324,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/jasper/compiler/TldCache.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,9,10,351,109,Global,1,253,253,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/jasper/Constants.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,9,9,351,109,Global,0.355250245338567,362,1019,Mladen Turk
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/jasper/JspC.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,17,18,351,109,Global,0.099145933902711,534,5386,Mladen Turk
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/jasper/servlet/JasperInitializer.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,9,10,351,109,Global,0.337423312883436,55,163,Jeremy Boynes
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/jasper/servlet/JspCServletContext.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,12,16,351,109,Global,0.286486486486487,583,2035,Mladen Turk
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/jasper/servlet/TldScanner.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,4,6,351,109,Global,0.232142857142857,117,504,Jeremy Boynes
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/tomcat/util/descriptor/DigesterFactory.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,18,23,351,109,Global,0.554577464788732,630,1136,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/tomcat/util/descriptor/LocalResolver.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,71,118,351,109,Global,1,262,262,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/tomcat/util/descriptor/LocalStrings.properties,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,2,2,351,109,Global,1,19,19,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/tomcat/util/descriptor/tagplugin/TagPluginParser.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,3,5,351,109,Global,0.092783505154639,9,97,Jeremy Boynes
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/tomcat/util/descriptor/tld/TldParser.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,7,11,351,109,Global,0.172727272727273,19,110,Jeremy Boynes
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,java/org/apache/tomcat/util/descriptor/web/WebXmlParser.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,4,7,351,109,Global,0.882352941176471,150,170,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,test/javax/servlet/resources/TestSchemaValidation.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,14,28,351,109,Global,1,133,133,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,test/org/apache/catalina/core/TesterContext.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,10,10,351,109,Global,0.981454005934718,1323,1348,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,test/org/apache/jasper/servlet/TestTldScanner.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,2,3,351,109,Global,0.548387096774194,51,93,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,test/org/apache/tomcat/util/descriptor/TestLocalResolver.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,11,21,351,109,Global,1,169,169,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,test/org/apache/tomcat/util/descriptor/tld/TestTldParser.java,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,1,2,351,109,Global,0.050847457627119,15,295,Jeremy Boynes
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,webapps/docs/config/context.xml,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,10,10,351,109,Global,0.492862241256246,1381,2802,Mark Emlyn David Thomas
CVE-2013-4590,200,NA,+Info,2014-2-26,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 allows attackers to obtain ""Tomcat internals"" information by leveraging the presence of an untrusted web application with a context.xml, web.xml, *.jspx, *.tagx, or *.tld XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2013-4590/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information disclosure CVE-2013-4590
Application provided XML files such as web.xml, context.xml, *.tld, *.tagx and *.jspx allowed XXE which could be used to expose Tomcat internals to an attacker. This vulnerability only occurs when Tomcat is running web applications from untrusted sources such as in a shared hosting environment.
This was fixed in revision 1558828.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1549529.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revision 1549528.
This issue was identified by the Apache Tomcat security team on 29 October 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-10-29,2014-2-25,2014-1-31,05c84ff8304a69a30b251f207a7b93c2c882564d,webapps/docs/security-howto.xml,Add an option to the Context to control the blocking of XML external entities when parsing XML configuration files and enable this blocking by default. The block is implemented via a custom resolver to enable the logging of any blocked entities.,https://github.com/apache/tomcat/commit/05c84ff8304a69a30b251f207a7b93c2c882564d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-12-9,1,3,3,351,109,Global,0.892757660167131,641,718,Mark Emlyn David Thomas
CVE-2010-2227,119,NA,DoS Overflow +Info,2010-7-13,2017-9-18,6.4,None,Remote,Low,Not required,Partial,None,Partial,"Apache Tomcat 5.5.0 through 5.5.29, 6.0.0 through 6.0.27, and 7.0.0 beta does not properly handle an invalid Transfer-Encoding header, which allows remote attackers to cause a denial of service (application outage) or obtain sensitive information via a crafted header that interferes with ""recycling of a buffer.""",https://www.cvedetails.com/cve/CVE-2010-2227/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28, 7.0.2:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Remote Denial Of Service and Information Disclosure Vulnerability CVE-2010-2227
Several flaws in the handling of the 'Transfer-Encoding' header were found that prevented the recycling of a buffer. A remote attacker could trigger this flaw which would cause subsequent requests to fail and/or information to leak between requests. This flaw is mitigated if Tomcat is behind a reverse proxy (such as Apache httpd 2.2) as the proxy should reject the invalid transfer encoding header.
This was fixed in revision 959428.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 958977.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 6.0.0-6.0.27
Note: The issue below was fixed in Apache Tomcat 6.0.27 but the release vote for the 6.0.27 release candidate did not pass. Therefore, although users must download 6.0.28 to obtain a version that includes a fix for this issue, version 6.0.27 is not included in the list of affected versions.
This was fixed in revision 958911.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 7.0.0",No,2010-6-14,2010-7-9,2010-8-2,0699c3648f0d372f057bbe177fe7c440d84be853,java/org/apache/coyote/http11/AbstractHttp11Processor.java,Reduce code duplication in connectors: Move addFilter() and addInputFilter() to base class,https://github.com/apache/tomcat/commit/0699c3648f0d372f057bbe177fe7c440d84be853,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-6-21,29,66,67,94,150,Global,0.143691588785047,123,856,Filip Hanik
CVE-2010-2227,119,NA,DoS Overflow +Info,2010-7-13,2017-9-18,6.4,None,Remote,Low,Not required,Partial,None,Partial,"Apache Tomcat 5.5.0 through 5.5.29, 6.0.0 through 6.0.27, and 7.0.0 beta does not properly handle an invalid Transfer-Encoding header, which allows remote attackers to cause a denial of service (application outage) or obtain sensitive information via a crafted header that interferes with ""recycling of a buffer.""",https://www.cvedetails.com/cve/CVE-2010-2227/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28, 7.0.2:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Remote Denial Of Service and Information Disclosure Vulnerability CVE-2010-2227
Several flaws in the handling of the 'Transfer-Encoding' header were found that prevented the recycling of a buffer. A remote attacker could trigger this flaw which would cause subsequent requests to fail and/or information to leak between requests. This flaw is mitigated if Tomcat is behind a reverse proxy (such as Apache httpd 2.2) as the proxy should reject the invalid transfer encoding header.
This was fixed in revision 959428.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 958977.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 6.0.0-6.0.27
Note: The issue below was fixed in Apache Tomcat 6.0.27 but the release vote for the 6.0.27 release candidate did not pass. Therefore, although users must download 6.0.28 to obtain a version that includes a fix for this issue, version 6.0.27 is not included in the list of affected versions.
This was fixed in revision 958911.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 7.0.0",No,2010-6-14,2010-7-9,2010-8-2,0699c3648f0d372f057bbe177fe7c440d84be853,java/org/apache/coyote/http11/Http11AprProcessor.java,Reduce code duplication in connectors: Move addFilter() and addInputFilter() to base class,https://github.com/apache/tomcat/commit/0699c3648f0d372f057bbe177fe7c440d84be853,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-6-21,29,8,57,94,150,Global,0.154437954124519,1084,7019,Mladen Turk
CVE-2010-2227,119,NA,DoS Overflow +Info,2010-7-13,2017-9-18,6.4,None,Remote,Low,Not required,Partial,None,Partial,"Apache Tomcat 5.5.0 through 5.5.29, 6.0.0 through 6.0.27, and 7.0.0 beta does not properly handle an invalid Transfer-Encoding header, which allows remote attackers to cause a denial of service (application outage) or obtain sensitive information via a crafted header that interferes with ""recycling of a buffer.""",https://www.cvedetails.com/cve/CVE-2010-2227/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28, 7.0.2:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Remote Denial Of Service and Information Disclosure Vulnerability CVE-2010-2227
Several flaws in the handling of the 'Transfer-Encoding' header were found that prevented the recycling of a buffer. A remote attacker could trigger this flaw which would cause subsequent requests to fail and/or information to leak between requests. This flaw is mitigated if Tomcat is behind a reverse proxy (such as Apache httpd 2.2) as the proxy should reject the invalid transfer encoding header.
This was fixed in revision 959428.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 958977.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 6.0.0-6.0.27
Note: The issue below was fixed in Apache Tomcat 6.0.27 but the release vote for the 6.0.27 release candidate did not pass. Therefore, although users must download 6.0.28 to obtain a version that includes a fix for this issue, version 6.0.27 is not included in the list of affected versions.
This was fixed in revision 958911.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 7.0.0",No,2010-6-14,2010-7-9,2010-8-2,0699c3648f0d372f057bbe177fe7c440d84be853,java/org/apache/coyote/http11/Http11Processor.java,Reduce code duplication in connectors: Move addFilter() and addInputFilter() to base class,https://github.com/apache/tomcat/commit/0699c3648f0d372f057bbe177fe7c440d84be853,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-6-21,29,10,59,94,150,Global,0.06328193191737,435,6874,Mladen Turk
CVE-2009-0783,200,NA,+Info,2009-6-5,2017-9-28,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, and 6.0.0 through 6.0.18 permits web applications to replace an XML parser used for other web applications, which allows local users to read or modify the (1) web.xml, (2) context.xml, or (3) tld files of arbitrary web applications via a crafted application that is loaded earlier than the target application.",https://www.cvedetails.com/cve/CVE-2009-0783/,20090304,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Information disclosure CVE-2009-0783
Bugs 29936 and 45933 allowed a web application to replace the XML parser used by Tomcat to process web.xml, context.xml and tld files. In limited circumstances these bugs may allow a rogue web application to view and/or alter the web.xml, context.xml and tld files of other web applications deployed on the Tomcat instance.
This was fixed in revision 781708.
Affects: 4.1.0-4.1.39
This was fixed in revisions 681156 and 781542.
This was first reported to the Tomcat security team on 2 Mar 2009 and made public on 4 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revisions 652592 and 739522.
This was first reported to the Tomcat security team on 2 Mar 2009 and made public on 4 Jun 2009.
Affects: 6.0.0-6.0.18",Yes,2009-3-2,2009-6-4,2009-6-4,06c23d827fea6de7ee34c837369f5568806d9d04,java/org/apache/catalina/startup/ContextConfig.java,"Fix bug 29936. In some circumstances, Tomcat would use the parser from a webapp to parse web.xml and possibly context.xml files.",https://github.com/apache/tomcat/commit/06c23d827fea6de7ee34c837369f5568806d9d04,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-4-20,194,10,21,10,11,Local,0.013317479191439,56,4205,Mladen Turk
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,079372fc7bac8e2e378942715c9ce26a4a72c07a,java/org/apache/coyote/http2/Constants.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60232
The header read buffer needs to be at least the size of the largest
header.",https://github.com/apache/tomcat/commit/079372fc7bac8e2e378942715c9ce26a4a72c07a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-20,3,3,3,35,4,Global,1,26,26,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,079372fc7bac8e2e378942715c9ce26a4a72c07a,java/org/apache/coyote/http2/Http2Parser.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60232
The header read buffer needs to be at least the size of the largest
header.",https://github.com/apache/tomcat/commit/079372fc7bac8e2e378942715c9ce26a4a72c07a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-20,3,27,31,35,4,Global,0.998910675381264,1834,1836,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,079372fc7bac8e2e378942715c9ce26a4a72c07a,webapps/docs/changelog.xml,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60232
The header read buffer needs to be at least the size of the largest
header.",https://github.com/apache/tomcat/commit/079372fc7bac8e2e378942715c9ce26a4a72c07a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-20,3,5,5,35,4,Global,0.070481881559795,1840,26106,Mark Emlyn David Thomas
CVE-2008-2370,22,NA,Directory Traversal,2008-8-3,2018-3-5,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 4.1.0 through 4.1.37, 5.5.0 through 5.5.26, and 6.0.0 through 6.0.16, when a RequestDispatcher is used, performs path normalization before removing the query string from the URI, which allows remote attackers to conduct directory traversal attacks and read arbitrary files via a .. (dot dot) in a request parameter.",https://www.cvedetails.com/cve/CVE-2008-2370/,20080521,"Yes. Fixed in Apache Tomcat 4.1.39, 5.5.27, 6.0.18:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",When using a RequestDispatcher the target path was normalised before the query string was removed. A request that included a specially crafted request parameter could be used to access content that would otherwise be protected by a security constraint or by locating it in under the WEB-INF directory.,No,2008-6-13,2008-8-1,2008-9-8,09322956005a84d2e0086e161622f481e9a4de6c,java/org/apache/catalina/core/ApplicationContext.java,Extract the query string before we try to normalise the URI,https://github.com/apache/tomcat/commit/09322956005a84d2e0086e161622f481e9a4de6c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-7-3,1,11,20,11,9,Local,0.012495994873438,39,3121,Mladen Turk
CVE-2014-0050,264,NA,DoS Bypass,2014-4-1,2017-12-15,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.",https://www.cvedetails.com/cve/CVE-2014-0050/,20131203,"Yes. Fixed in Apache Tomcat 7.0.52, 8.0.3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of Service CVE-2014-0050
It was possible to craft a malformed Content-Type header for a multipart request that caused Apache Tomcat to enter an infinite loop. A malicious user could, therefore, craft a malformed request that triggered a denial of service.
The root cause of this error was a bug in Apache Commons FileUpload. Tomcat 7 uses a packaged renamed copy of Apache Commons FileUpload to implement the requirement of the Servlet 3.0 specification to support the processing of mime-multipart requests. Tomcat 7 was therefore affected by this issue.
This was fixed in revision 1565169.
This issue was reported to the Apache Software Foundation on 04 Feb 2014 and accidently made public on 06 Feb 2014.
Affects: 7.0.0-7.0.50
This was fixed in revision 1565163.
This issue was reported to the Apache Software Foundation on 04 Feb 2014 and accidently made public on 06 Feb 2014.
Affects: 8.0.0-RC1 to 8.0.1",No,2014-2-4,2014-2-6,2014-2-17,09560e0e00db9d8d8d3bfe4ea071f1f72c20711a,webapps/docs/changelog.xml,"Changelog entry for r1565300, r1565416.",https://github.com/apache/tomcat/commit/09560e0e00db9d8d8d3bfe4ea071f1f72c20711a,Konstatin Kolinko,,,,2014-2-6,1,8,8,8,0,Local,0.02943467616292,529,17972,Mark Emlyn David Thomas
CVE-2017-5650,399,NA,,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,None,None,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.",https://www.cvedetails.com/cve/CVE-2017-5650/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2017-5650
The handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.
This was fixed in revision 1788480.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788460.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-11,2017-4-10,2017-3-30,0ba0adf3ec8ffa268f245ec9711a1625390459a4,java/org/apache/coyote/http2/Http2UpgradeHandler.java,"Total data sent should agree with any content-length header
Found with the h2spec tool written by Moto Ishizawa.",https://github.com/apache/tomcat/commit/0ba0adf3ec8ffa268f245ec9711a1625390459a4,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-27,4,1,1,26,2,Global,0.954944178628389,4790,5016,Mark Thomas
CVE-2017-5650,399,NA,,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,None,None,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.",https://www.cvedetails.com/cve/CVE-2017-5650/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2017-5650
The handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.
This was fixed in revision 1788480.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788460.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-11,2017-4-10,2017-3-30,0ba0adf3ec8ffa268f245ec9711a1625390459a4,java/org/apache/coyote/http2/LocalStrings.properties,"Total data sent should agree with any content-length header
Found with the h2spec tool written by Moto Ishizawa.",https://github.com/apache/tomcat/commit/0ba0adf3ec8ffa268f245ec9711a1625390459a4,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-27,4,1,1,26,2,Global,0.910299003322259,274,301,Mark Thomas
CVE-2017-5650,399,NA,,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,None,None,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.",https://www.cvedetails.com/cve/CVE-2017-5650/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2017-5650
The handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.
This was fixed in revision 1788480.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788460.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-11,2017-4-10,2017-3-30,0ba0adf3ec8ffa268f245ec9711a1625390459a4,java/org/apache/coyote/http2/Stream.java,"Total data sent should agree with any content-length header
Found with the h2spec tool written by Moto Ishizawa.",https://github.com/apache/tomcat/commit/0ba0adf3ec8ffa268f245ec9711a1625390459a4,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-27,4,19,20,26,2,Global,0.883417085427136,1758,1990,Mark Thomas
CVE-2017-5650,399,NA,,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,None,None,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.",https://www.cvedetails.com/cve/CVE-2017-5650/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2017-5650
The handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.
This was fixed in revision 1788480.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788460.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-11,2017-4-10,2017-3-30,0ba0adf3ec8ffa268f245ec9711a1625390459a4,java/org/apache/coyote/http2/StreamProcessor.java,"Total data sent should agree with any content-length header
Found with the h2spec tool written by Moto Ishizawa.",https://github.com/apache/tomcat/commit/0ba0adf3ec8ffa268f245ec9711a1625390459a4,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-27,4,1,1,26,2,Global,0.968623481781376,1914,1976,Mark Thomas
CVE-2007-0450,22,NA,Directory Traversal,2007-3-16,2017-10-10,5,None,Remote,Low,Not required,Partial,None,None,"Directory traversal vulnerability in Apache HTTP Server and Tomcat 5.x before 5.5.22 and 6.x before 6.0.10, when using certain proxy modules (mod_proxy, mod_rewrite, mod_jk), allows remote attackers to read arbitrary files via a .. (dot dot) sequence with combinations of (1) ""/"" (slash), (2) ""\"" (backslash), and (3) URL-encoded backslash (%5C) characters in the URL, which are valid separators in Tomcat but not in Apache.",https://www.cvedetails.com/cve/CVE-2007-0450/,20070123,"Yes. Fixed in Apache Tomcat 4.1.36, 5.5.22, 5.0.SVN, 6.0.10:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Tomcat permits '\', '%2F' and '%5C' as path delimiters. When Tomcat is used behind a proxy (including, but not limited to, Apache HTTP server with mod_proxy and mod_jk) configured to only proxy some contexts, a HTTP request containing strings like ""/\../"" may allow attackers to work around the context restriction of the proxy, and access the non-proxied contexts.
The following Java system properties have been added to Tomcat to provide additional control of the handling of path delimiters in URLs (both options default to false):
org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH: true|false
org.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH: true|false
Due to the impossibility to guarantee that all URLs are handled by Tomcat as they are in proxy servers, Tomcat should always be secured as if no proxy restricting context access was used.",No,,,2007-2-28,0c5ec5b958f1b59840ee155a23ab409755b039f6,java/org/apache/tomcat/util/buf/UDecoder.java,"- Align %2f handling (aka CVE-2007-0450 fix) between implementations of UDecoder.convert().
- Make convert(MessageBytes) to consistently throw an IOException, even if it calls convert(String). convert(String) and convert(CharChunk) are rare cases with little impact (and inherent bug: hardcoded handling of %xx as ISO-8859-1).",https://github.com/apache/tomcat/commit/0c5ec5b958f1b59840ee155a23ab409755b039f6,Konstatin Kolinko,,,Apache,2011-11-17,1,19,23,19,4,Local,0.245557350565428,304,1238,Mladen Turk
CVE-2016-8735,284,NA,Exec Code,2017-4-6,2018-7-18,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"Remote code execution is possible with Apache Tomcat before 6.0.48, 7.x before 7.0.73, 8.x before 8.0.39, 8.5.x before 8.5.7, and 9.x before 9.0.0.M12 if JmxRemoteLifecycleListener is used and an attacker can reach JMX ports. The issue exists because this listener wasn't updated for consistency with the CVE-2016-3427 Oracle patch that affected credential types.",https://www.cvedetails.com/cve/CVE-2016-8735/,20161018,"Yes. Fixed in Apache Tomcat 6.0.48, 7.0.73, 8.0.39, 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2016-8735
The JmxRemoteLifecycleListener was not updated to take account of Oracle's fix for CVE-2016-3427. Therefore, Tomcat installations using this listener remained vulnerable to a similar remote code execution vulnerability. This issue has been rated as important rather than critical due to the small number of installations using this listener and that it would be highly unusual for the JMX ports to be accessible to an attacker even when the listener is used.
This was fixed in revision 1767684.
This issue was reported to the Apache Tomcat Security Team on 19 October 2016 and made public on 22 November 2016.
Affects: 6.0.0 to 6.0.47
This was fixed in revision 1767676.
This issue was reported to the Apache Tomcat Security Team on 19 October 2016 and made public on 22 November 2016.
Affects: 7.0.0 to 7.0.72
This was fixed in revision 1767656.
This issue was reported to the Apache Tomcat Security Team on 19 October 2016 and made public on 22 November 2016.
Affects: 8.0.0.RC1 to 8.0.38
This was fixed in revision 1767646.
This issue was reported to the Apache Tomcat Security Team on 19 October 2016 and made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1767644.
This issue was reported to the Apache Tomcat Security Team on 19 October 2016 and made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-19,2016-11-22,2016-11-15,0e83ad3e547fc9a75a258799ef581249b40a82a6,java/org/apache/catalina/mbeans/JmxRemoteLifecycleListener.java,Explicitly configure allowed credential types,https://github.com/apache/tomcat/commit/0e83ad3e547fc9a75a258799ef581249b40a82a6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-11-2,1,5,6,9,1,Global,0.248922413793103,231,928,Mark Emlyn David Thomas
CVE-2016-8735,284,NA,Exec Code,2017-4-6,2018-7-18,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"Remote code execution is possible with Apache Tomcat before 6.0.48, 7.x before 7.0.73, 8.x before 8.0.39, 8.5.x before 8.5.7, and 9.x before 9.0.0.M12 if JmxRemoteLifecycleListener is used and an attacker can reach JMX ports. The issue exists because this listener wasn't updated for consistency with the CVE-2016-3427 Oracle patch that affected credential types.",https://www.cvedetails.com/cve/CVE-2016-8735/,20161018,"Yes. Fixed in Apache Tomcat 6.0.48, 7.0.73, 8.0.39, 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2016-8735
The JmxRemoteLifecycleListener was not updated to take account of Oracle's fix for CVE-2016-3427. Therefore, Tomcat installations using this listener remained vulnerable to a similar remote code execution vulnerability. This issue has been rated as important rather than critical due to the small number of installations using this listener and that it would be highly unusual for the JMX ports to be accessible to an attacker even when the listener is used.
This was fixed in revision 1767684.
This issue was reported to the Apache Tomcat Security Team on 19 October 2016 and made public on 22 November 2016.
Affects: 6.0.0 to 6.0.47
This was fixed in revision 1767676.
This issue was reported to the Apache Tomcat Security Team on 19 October 2016 and made public on 22 November 2016.
Affects: 7.0.0 to 7.0.72
This was fixed in revision 1767656.
This issue was reported to the Apache Tomcat Security Team on 19 October 2016 and made public on 22 November 2016.
Affects: 8.0.0.RC1 to 8.0.38
This was fixed in revision 1767646.
This issue was reported to the Apache Tomcat Security Team on 19 October 2016 and made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1767644.
This issue was reported to the Apache Tomcat Security Team on 19 October 2016 and made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-19,2016-11-22,2016-11-15,0e83ad3e547fc9a75a258799ef581249b40a82a6,webapps/docs/changelog.xml,Explicitly configure allowed credential types,https://github.com/apache/tomcat/commit/0e83ad3e547fc9a75a258799ef581249b40a82a6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-11-2,1,4,4,9,1,Global,0.072777926191657,1907,26203,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,0ef30f96eacf7445c481dc3964d158da8c206830,java/org/apache/catalina/core/StandardWrapper.java,Fix some warnings,https://github.com/apache/tomcat/commit/0ef30f96eacf7445c481dc3964d158da8c206830,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-7,7,2,4,6,2,Global,0.143411927877947,1034,7210,Mladen Turk
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,0ef30f96eacf7445c481dc3964d158da8c206830,java/org/apache/catalina/core/StandardWrapperFacade.java,Fix some warnings,https://github.com/apache/tomcat/commit/0ef30f96eacf7445c481dc3964d158da8c206830,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-7,7,4,4,4,0,Global,0.075163398692811,23,306,Mladen Turk
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,java/org/apache/tomcat/util/http/Cookies.java,"Make unescaping the exact reverse of escaping.
Code clean up.",https://github.com/apache/tomcat/commit/0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-21,143,9,10,122,83,Global,0.014050387596899,29,2064,Remy Maucherat
CVE-2007-5333,200,NA,+Info,2008-2-11,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.0 through 6.0.14, 5.5.0 through 5.5.25, and 4.1.0 through 4.1.36 does not properly handle (1) double quote ("") characters or (2) %5C (encoded backslash) sequences in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks. NOTE: this issue exists because of an incomplete fix for CVE-2007-3385.",https://www.cvedetails.com/cve/CVE-2007-5333/,20071010,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The previous fix for CVE-2007-3385 was incomplete. It did not consider the use of quotes or %5C within a cookie value.,No,,,2008-2-8,0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,java/org/apache/tomcat/util/http/Cookies.java,"Make unescaping the exact reverse of escaping.
Code clean up.",https://github.com/apache/tomcat/commit/0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-21,117,9,10,122,83,Global,0.014050387596899,29,2064,Remy Maucherat
CVE-2007-5333,200,NA,+Info,2008-2-11,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.0 through 6.0.14, 5.5.0 through 5.5.25, and 4.1.0 through 4.1.36 does not properly handle (1) double quote ("") characters or (2) %5C (encoded backslash) sequences in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks. NOTE: this issue exists because of an incomplete fix for CVE-2007-3385.",https://www.cvedetails.com/cve/CVE-2007-5333/,20071010,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The previous fix for CVE-2007-3385 was incomplete. It did not consider the use of quotes or %5C within a cookie value.,No,,,2008-2-8,0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,java/org/apache/tomcat/util/http/ServerCookie.java,"Make unescaping the exact reverse of escaping.
Code clean up.",https://github.com/apache/tomcat/commit/0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-21,117,108,179,122,83,Global,0.258660508083141,448,1732,Mladen Turk
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,java/org/apache/tomcat/util/http/ServerCookie.java,"Make unescaping the exact reverse of escaping.
Code clean up.",https://github.com/apache/tomcat/commit/0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-21,143,108,179,122,83,Global,0.258660508083141,448,1732,Mladen Turk
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,STATUS,"Make unescaping the exact reverse of escaping.
Code clean up.",https://github.com/apache/tomcat/commit/0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-21,143,0,9,122,83,Global,0.026131293817718,41,1569,Remy Maucherat
CVE-2007-5333,200,NA,+Info,2008-2-11,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.0 through 6.0.14, 5.5.0 through 5.5.25, and 4.1.0 through 4.1.36 does not properly handle (1) double quote ("") characters or (2) %5C (encoded backslash) sequences in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks. NOTE: this issue exists because of an incomplete fix for CVE-2007-3385.",https://www.cvedetails.com/cve/CVE-2007-5333/,20071010,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The previous fix for CVE-2007-3385 was incomplete. It did not consider the use of quotes or %5C within a cookie value.,No,,,2008-2-8,0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,STATUS,"Make unescaping the exact reverse of escaping.
Code clean up.",https://github.com/apache/tomcat/commit/0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-21,117,0,9,122,83,Global,0.026131293817718,41,1569,Remy Maucherat
CVE-2007-5333,200,NA,+Info,2008-2-11,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.0 through 6.0.14, 5.5.0 through 5.5.25, and 4.1.0 through 4.1.36 does not properly handle (1) double quote ("") characters or (2) %5C (encoded backslash) sequences in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks. NOTE: this issue exists because of an incomplete fix for CVE-2007-3385.",https://www.cvedetails.com/cve/CVE-2007-5333/,20071010,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The previous fix for CVE-2007-3385 was incomplete. It did not consider the use of quotes or %5C within a cookie value.,No,,,2008-2-8,0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,webapps/docs/changelog.xml,"Make unescaping the exact reverse of escaping.
Code clean up.",https://github.com/apache/tomcat/commit/0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-21,117,5,7,122,83,Global,0.055961717399973,421,7523,Remy Maucherat
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,webapps/docs/changelog.xml,"Make unescaping the exact reverse of escaping.
Code clean up.",https://github.com/apache/tomcat/commit/0f69c9b27578e8379aaa43a87f7b0bd3b33e8914,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-21,143,5,7,122,83,Global,0.055961717399973,421,7523,Remy Maucherat
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,0fae0c448de48c7577ba79652404a3e89e3e5a6a,java/org/apache/tomcat/util/http/Parameters.java,Review from kkolinko. Minor performance tweaks,https://github.com/apache/tomcat/commit/0fae0c448de48c7577ba79652404a3e89e3e5a6a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-30,561,6,15,6,9,Local,0.480508708874758,1738,3617,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,0ff4905158b77787a7f3aca55c9dec93456665dc,java/org/apache/catalina/startup/ContextConfig.java,"CVE-2011-1088
Complete the fix for this issue. The optimisation not to configure an authenticator of there were no security constraints meant that in that case @ServletSecurity annotations had no effect. The unit tests did not pick this up since they added an authenticator directly.
Add an explicit unit test for this scenario.",https://github.com/apache/tomcat/commit/0ff4905158b77787a7f3aca55c9dec93456665dc,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-9,7,1,5,75,8,Global,0.384026258205689,2808,7312,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,0ff4905158b77787a7f3aca55c9dec93456665dc,test/org/apache/catalina/core/TestStandardWrapper.java,"CVE-2011-1088
Complete the fix for this issue. The optimisation not to configure an authenticator of there were no security constraints meant that in that case @ServletSecurity annotations had no effect. The unit tests did not pick this up since they added an authenticator directly.
Add an explicit unit test for this scenario.",https://github.com/apache/tomcat/commit/0ff4905158b77787a7f3aca55c9dec93456665dc,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-9,7,18,18,75,8,Global,1,397,397,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,0ff4905158b77787a7f3aca55c9dec93456665dc,test/webapp-3.0-servletsecurity/WEB-INF/web.xml,"CVE-2011-1088
Complete the fix for this issue. The optimisation not to configure an authenticator of there were no security constraints meant that in that case @ServletSecurity annotations had no effect. The unit tests did not pick this up since they added an authenticator directly.
Add an explicit unit test for this scenario.",https://github.com/apache/tomcat/commit/0ff4905158b77787a7f3aca55c9dec93456665dc,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-9,7,48,48,75,8,Global,1,48,48,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,0ff4905158b77787a7f3aca55c9dec93456665dc,webapps/docs/changelog.xml,"CVE-2011-1088
Complete the fix for this issue. The optimisation not to configure an authenticator of there were no security constraints meant that in that case @ServletSecurity annotations had no effect. The unit tests did not pick this up since they added an authenticator directly.
Add an explicit unit test for this scenario.",https://github.com/apache/tomcat/commit/0ff4905158b77787a7f3aca55c9dec93456665dc,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-9,7,8,12,75,8,Global,0.343043696634857,4098,11946,Mark Emlyn David Thomas
CVE-2008-0128,16,NA,,2008-1-22,2017-8-7,5,None,Remote, Low,Not required,Partial,None,None,"The SingleSignOn Valve (org.apache.catalina.authenticator.SingleSignOn) in Apache Tomcat before 5.5.21 does not set the secure flag for the JSESSIONIDSSO cookie in an https session, which can cause the cookie to be sent in http requests and make it easier for remote attackers to capture this cookie.",https://www.cvedetails.com/cve/CVE-2008-0128/,20080107,"Yes. Fixed in Apache Tomcat 4.1.39, 5.5.21, 6.0.9:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","When using the SingleSignOn Valve via https the Cookie JSESSIONIDSSO is transmitted without the ""secure"" attribute, resulting in it being transmitted to any content that is - by purpose or error - requested via http from the same server.",No,,,2007-2-8,11b9c92c5e21a4d7fda102992ec7635f933ccdfb,java/org/apache/catalina/authenticator/AuthenticatorBase.java,Port fox for bug 41217. Set secure attribute on SSO cookie when cookie is created during a secure request. Patch provided by Chris Halstead.,https://github.com/apache/tomcat/commit/11b9c92c5e21a4d7fda102992ec7635f933ccdfb,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-1-27,1,3,3,8,0,Local,0.006015037593985,16,2660,Mladen Turk
CVE-2008-0128,16,NA,,2008-1-22,2017-8-7,5,None,Remote, Low,Not required,Partial,None,None,"The SingleSignOn Valve (org.apache.catalina.authenticator.SingleSignOn) in Apache Tomcat before 5.5.21 does not set the secure flag for the JSESSIONIDSSO cookie in an https session, which can cause the cookie to be sent in http requests and make it easier for remote attackers to capture this cookie.",https://www.cvedetails.com/cve/CVE-2008-0128/,20080107,"Yes. Fixed in Apache Tomcat 4.1.39, 5.5.21, 6.0.9:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","When using the SingleSignOn Valve via https the Cookie JSESSIONIDSSO is transmitted without the ""secure"" attribute, resulting in it being transmitted to any content that is - by purpose or error - requested via http from the same server.",No,,,2007-2-8,11b9c92c5e21a4d7fda102992ec7635f933ccdfb,webapps/docs/changelog.xml,Port fox for bug 41217. Set secure attribute on SSO cookie when cookie is created during a secure request. Patch provided by Chris Halstead.,https://github.com/apache/tomcat/commit/11b9c92c5e21a4d7fda102992ec7635f933ccdfb,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-1-27,1,4,4,8,0,Local,0.017988929889299,117,6504,Remy Maucherat
CVE-2008-2938,22,NA,Directory Traversal,2008-8-12,2017-9-28,4.3,None,Remote,Medium,Not required,Partial,None,None,"Directory traversal vulnerability in Apache Tomcat 4.1.0 through 4.1.37, 5.5.0 through 5.5.26, and 6.0.0 through 6.0.16, when allowLinking and UTF-8 are enabled, allows remote attackers to read arbitrary files via encoded directory traversal sequences in the URI, a different vulnerability than CVE-2008-2370. NOTE: versions earlier than 6.0.18 were reported affected, but the vendor advisory lists 6.0.16 as the last affected version.",https://www.cvedetails.com/cve/CVE-2008-2938/,20080630,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Originally reported as a Tomcat vulnerability the root cause of this issue is that the JVM does not correctly decode UTF-8 encoded URLs to UTF-8. This exposes a directory traversal vulnerability when the connector uses URIEncoding=""UTF-8"". This directory traversal is limited to the docBase of the web application.
If a context is configured with allowLinking=""true"" then the directory traversal vulnerability is extended to the entire file system of the host server.
It should also be noted that setting useBodyEncodingForURI=""true"" has the same effect as setting URIEncoding=""UTF-8"" when processing requests with bodies encoded with UTF-8.
Although the root cause was quickly identified as a JVM issue and that it affected multiple JVMs from multiple vendors, it was decided to report this as a Tomcat vulnerability until such time as the JVM vendors provided updates to resolve this issue. For further information on the status of this issue for your JVM, contact your JVM vendor.
A workaround was implemented in revision 678137 that protects against this and any similar character encoding issues that may still exist in the JVM. This work around is included in Tomcat 6.0.18 onwards.
A workaround was implemented in revision 681029 that protects against this and any similar character encoding issues that may still exist in the JVM. This work around is included in Tomcat 5.5.27 onwards.
A workaround was implemented in revision 681065 that protects against this and any similar character encoding issues that may still exist in the JVM. This work around is included in Tomcat 4.1.39 onwards.",No,,,,150bc791ac3ba40081425dd1c37a053fbb02b339,java/org/apache/tomcat/websocket/Utf8Decoder.java,"Expand UTF-8 tests based on a test case written by Joe Orton for CVE-2008-2938
Note the additional failures this generates are not exploitable. They are invalid only because they encode a valid code point in too many bytes.",https://github.com/apache/tomcat/commit/150bc791ac3ba40081425dd1c37a053fbb02b339,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-3-2,1678,19,20,113,6,Global,1,350,350,Mark Emlyn David Thomas
CVE-2011-2526,20,NA,DoS Bypass,2011-7-14,2018-1-5,4.4,None,Local,Medium,Not required,Partial,Partial,Partial,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.19, when sendfile is enabled for the HTTP APR or HTTP NIO connector, does not validate certain request attributes, which allows local users to bypass intended file access restrictions or cause a denial of service (infinite loop or JVM crash) by leveraging an untrusted web application.",https://www.cvedetails.com/cve/CVE-2011-2526/,20110615,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2526
Tomcat provides support for sendfile with the HTTP APR connector. sendfile is used automatically for content served via the DefaultServlet and deployed web applications may use it directly via setting request attributes. These request attributes were not validated. When running under a security manager, this lack of validation allowed a malicious web application to do one or more of the following that would normally be prevented by a security manager:
return files to users that the security manager should make inaccessible
terminate (via a crash) the JVM
Additionally, these vulnerabilities only occur when all of the following are true:
untrusted web applications are being used
the SecurityManager is used to limit the untrusted web applications
the HTTP APR connector is used
sendfile is enabled for the connector (this is the default)
This was fixed in revision 1158244.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1146703.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 6.0.0-6.0.32
This was fixed in revisions 1145383, 1145489, 1145571, 1145694 and 1146005.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 7.0.0-7.0.18
Note: The issues below were fixed in Apache Tomcat 7.0.17 but the release votes for the 7.0.17 and 7.0.18 release candidates did not pass. Therefore, although users must download 7.0.19 to obtain a version that includes a fix for these issues, versions 7.0.17 and 7.0.18 are not included in the list of affected versions.",No,2011-7-7,2011-7-13,2011-9-22,163e03c7eb611570d2f0e93b6fbfe134a541a30f,java/org/apache/tomcat/util/net/NioEndpoint.java,"Correct a comment
Part of the fix for CVE-2011-2526",https://github.com/apache/tomcat/commit/163e03c7eb611570d2f0e93b6fbfe134a541a30f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-7-12,2,1,2,1,1,Local,0.040288342473023,911,22612,Filip Hanik
CVE-2008-4308,200,NA,+Info,2009-2-26,2009-2-27,2.6,None,Remote,High,Not required,Partial,None,None,"The doRead method in Apache Tomcat 4.1.32 through 4.1.34 and 5.5.10 through 5.5.20 does not return a -1 to indicate when a certain error condition has occurred, which can cause Tomcat to send POST content from one request to a different request.",https://www.cvedetails.com/cve/CVE-2008-4308/,20080929,"Yes. Fixed in Apache Tomcat 4.1.35, 5.5.21:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html ","Bug 40771 may result in the disclosure of POSTed content from a previous request. For a vulnerability to exist, the content read from the input stream must be disclosed, eg via writing it to the response and committing the response, before the ArrayIndexOutOfBoundsException occurs which will halt processing of the request.",No,,,Not released,17eecdb631c356af5756a53a05a42d9905aebac5,java/org/apache/coyote/http11/filters/SavedRequestInputFilter.java,Port fix bug 40771. Correct doRead method so Filters and Valves can read POST data. patch provided by Michael Dufel.,https://github.com/apache/tomcat/commit/17eecdb631c356af5756a53a05a42d9905aebac5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2006-10-18,1,3,3,3,0,Local,0.01,3,300,Mladen Turk
CVE-2011-3375,200,NA,+Info,2012-1-8,2012-2-15,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.30 through 6.0.33 and 7.x before 7.0.22 does not properly perform certain caching and recycling operations involving request objects, which allows remote attackers to obtain unintended read access to IP address and HTTP header information in opportunistic circumstances by reading TCP data.",https://www.cvedetails.com/cve/CVE-2011-3375/,20110830,"Yes. Fixed in Apache Tomcat 6.0.35, 7.0.22:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-3375
For performance reasons, information parsed from a request is often cached in two places: the internal request object and the internal processor object. These objects are not recycled at exactly the same time. When certain errors occur that needed to be added to the access log, the access logging process triggers the re-population of the request object after it has been recycled. However, the request object was not recycled before being used for the next request. That lead to information leakage (e.g. remote IP address, HTTP headers) from the previous request to the next request. The issue was resolved be ensuring that the request and response objects were recycled after being re-populated to generate the necessary access log entries.
This was fixed in revision 1185998.
This was identified by the Tomcat security team on 22 September 2011 and made public on 17 January 2012.
Affects: 6.0.30-6.0.33
This was fixed in revision 1176592.
This was identified by the Tomcat security team on 22 September 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.21",No,2011-9-22,2012-1-17,2011-12-5,18792f4ad9ceb06a0fbd1de3d90c9fab2d64a4d6,java/org/apache/catalina/connector/CoyoteAdapter.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51872
Ensure access log always logs the correct remote IP.
Ensure requests with multiple errors do not result in multiple access log entries.",https://github.com/apache/tomcat/commit/18792f4ad9ceb06a0fbd1de3d90c9fab2d64a4d6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-9-27,1,1,6,13,19,Global,0.343124165554072,1542,4494,Mark Emlyn David Thomas
CVE-2011-3375,200,NA,+Info,2012-1-8,2012-2-15,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.30 through 6.0.33 and 7.x before 7.0.22 does not properly perform certain caching and recycling operations involving request objects, which allows remote attackers to obtain unintended read access to IP address and HTTP header information in opportunistic circumstances by reading TCP data.",https://www.cvedetails.com/cve/CVE-2011-3375/,20110830,"Yes. Fixed in Apache Tomcat 6.0.35, 7.0.22:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-3375
For performance reasons, information parsed from a request is often cached in two places: the internal request object and the internal processor object. These objects are not recycled at exactly the same time. When certain errors occur that needed to be added to the access log, the access logging process triggers the re-population of the request object after it has been recycled. However, the request object was not recycled before being used for the next request. That lead to information leakage (e.g. remote IP address, HTTP headers) from the previous request to the next request. The issue was resolved be ensuring that the request and response objects were recycled after being re-populated to generate the necessary access log entries.
This was fixed in revision 1185998.
This was identified by the Tomcat security team on 22 September 2011 and made public on 17 January 2012.
Affects: 6.0.30-6.0.33
This was fixed in revision 1176592.
This was identified by the Tomcat security team on 22 September 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.21",No,2011-9-22,2012-1-17,2011-12-5,18792f4ad9ceb06a0fbd1de3d90c9fab2d64a4d6,java/org/apache/coyote/ajp/AbstractAjpProcessor.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51872
Ensure access log always logs the correct remote IP.
Ensure requests with multiple errors do not result in multiple access log entries.",https://github.com/apache/tomcat/commit/18792f4ad9ceb06a0fbd1de3d90c9fab2d64a4d6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-9-27,1,3,7,13,19,Global,0.994340290060134,2811,2827,Mark Emlyn David Thomas
CVE-2011-3375,200,NA,+Info,2012-1-8,2012-2-15,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.30 through 6.0.33 and 7.x before 7.0.22 does not properly perform certain caching and recycling operations involving request objects, which allows remote attackers to obtain unintended read access to IP address and HTTP header information in opportunistic circumstances by reading TCP data.",https://www.cvedetails.com/cve/CVE-2011-3375/,20110830,"Yes. Fixed in Apache Tomcat 6.0.35, 7.0.22:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-3375
For performance reasons, information parsed from a request is often cached in two places: the internal request object and the internal processor object. These objects are not recycled at exactly the same time. When certain errors occur that needed to be added to the access log, the access logging process triggers the re-population of the request object after it has been recycled. However, the request object was not recycled before being used for the next request. That lead to information leakage (e.g. remote IP address, HTTP headers) from the previous request to the next request. The issue was resolved be ensuring that the request and response objects were recycled after being re-populated to generate the necessary access log entries.
This was fixed in revision 1185998.
This was identified by the Tomcat security team on 22 September 2011 and made public on 17 January 2012.
Affects: 6.0.30-6.0.33
This was fixed in revision 1176592.
This was identified by the Tomcat security team on 22 September 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.21",No,2011-9-22,2012-1-17,2011-12-5,18792f4ad9ceb06a0fbd1de3d90c9fab2d64a4d6,java/org/apache/coyote/ajp/AjpAprProcessor.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51872
Ensure access log always logs the correct remote IP.
Ensure requests with multiple errors do not result in multiple access log entries.",https://github.com/apache/tomcat/commit/18792f4ad9ceb06a0fbd1de3d90c9fab2d64a4d6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-9-27,1,1,2,13,19,Global,0.253996135605129,1446,5693,Mladen Turk
CVE-2011-3375,200,NA,+Info,2012-1-8,2012-2-15,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.30 through 6.0.33 and 7.x before 7.0.22 does not properly perform certain caching and recycling operations involving request objects, which allows remote attackers to obtain unintended read access to IP address and HTTP header information in opportunistic circumstances by reading TCP data.",https://www.cvedetails.com/cve/CVE-2011-3375/,20110830,"Yes. Fixed in Apache Tomcat 6.0.35, 7.0.22:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-3375
For performance reasons, information parsed from a request is often cached in two places: the internal request object and the internal processor object. These objects are not recycled at exactly the same time. When certain errors occur that needed to be added to the access log, the access logging process triggers the re-population of the request object after it has been recycled. However, the request object was not recycled before being used for the next request. That lead to information leakage (e.g. remote IP address, HTTP headers) from the previous request to the next request. The issue was resolved be ensuring that the request and response objects were recycled after being re-populated to generate the necessary access log entries.
This was fixed in revision 1185998.
This was identified by the Tomcat security team on 22 September 2011 and made public on 17 January 2012.
Affects: 6.0.30-6.0.33
This was fixed in revision 1176592.
This was identified by the Tomcat security team on 22 September 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.21",No,2011-9-22,2012-1-17,2011-12-5,18792f4ad9ceb06a0fbd1de3d90c9fab2d64a4d6,java/org/apache/coyote/ajp/AjpNioProcessor.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51872
Ensure access log always logs the correct remote IP.
Ensure requests with multiple errors do not result in multiple access log entries.",https://github.com/apache/tomcat/commit/18792f4ad9ceb06a0fbd1de3d90c9fab2d64a4d6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-9-27,1,1,2,13,19,Global,0.980613893376414,1214,1238,Mark Emlyn David Thomas
CVE-2011-3375,200,NA,+Info,2012-1-8,2012-2-15,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.30 through 6.0.33 and 7.x before 7.0.22 does not properly perform certain caching and recycling operations involving request objects, which allows remote attackers to obtain unintended read access to IP address and HTTP header information in opportunistic circumstances by reading TCP data.",https://www.cvedetails.com/cve/CVE-2011-3375/,20110830,"Yes. Fixed in Apache Tomcat 6.0.35, 7.0.22:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-3375
For performance reasons, information parsed from a request is often cached in two places: the internal request object and the internal processor object. These objects are not recycled at exactly the same time. When certain errors occur that needed to be added to the access log, the access logging process triggers the re-population of the request object after it has been recycled. However, the request object was not recycled before being used for the next request. That lead to information leakage (e.g. remote IP address, HTTP headers) from the previous request to the next request. The issue was resolved be ensuring that the request and response objects were recycled after being re-populated to generate the necessary access log entries.
This was fixed in revision 1185998.
This was identified by the Tomcat security team on 22 September 2011 and made public on 17 January 2012.
Affects: 6.0.30-6.0.33
This was fixed in revision 1176592.
This was identified by the Tomcat security team on 22 September 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.21",No,2011-9-22,2012-1-17,2011-12-5,18792f4ad9ceb06a0fbd1de3d90c9fab2d64a4d6,java/org/apache/coyote/ajp/AjpProcessor.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51872
Ensure access log always logs the correct remote IP.
Ensure requests with multiple errors do not result in multiple access log entries.",https://github.com/apache/tomcat/commit/18792f4ad9ceb06a0fbd1de3d90c9fab2d64a4d6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-9-27,1,1,2,13,19,Global,0.462931329005808,1355,2927,Mark Emlyn David Thomas
CVE-2011-3375,200,NA,+Info,2012-1-8,2012-2-15,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.30 through 6.0.33 and 7.x before 7.0.22 does not properly perform certain caching and recycling operations involving request objects, which allows remote attackers to obtain unintended read access to IP address and HTTP header information in opportunistic circumstances by reading TCP data.",https://www.cvedetails.com/cve/CVE-2011-3375/,20110830,"Yes. Fixed in Apache Tomcat 6.0.35, 7.0.22:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-3375
For performance reasons, information parsed from a request is often cached in two places: the internal request object and the internal processor object. These objects are not recycled at exactly the same time. When certain errors occur that needed to be added to the access log, the access logging process triggers the re-population of the request object after it has been recycled. However, the request object was not recycled before being used for the next request. That lead to information leakage (e.g. remote IP address, HTTP headers) from the previous request to the next request. The issue was resolved be ensuring that the request and response objects were recycled after being re-populated to generate the necessary access log entries.
This was fixed in revision 1185998.
This was identified by the Tomcat security team on 22 September 2011 and made public on 17 January 2012.
Affects: 6.0.30-6.0.33
This was fixed in revision 1176592.
This was identified by the Tomcat security team on 22 September 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.21",No,2011-9-22,2012-1-17,2011-12-5,18792f4ad9ceb06a0fbd1de3d90c9fab2d64a4d6,java/org/apache/coyote/http11/AbstractHttp11Processor.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51872
Ensure access log always logs the correct remote IP.
Ensure requests with multiple errors do not result in multiple access log entries.",https://github.com/apache/tomcat/commit/18792f4ad9ceb06a0fbd1de3d90c9fab2d64a4d6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-9-27,1,6,13,13,19,Global,0.737005163511188,2141,2905,Mark Emlyn David Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,1ae77cfcf3c7b437393d79c9a908d25347ef64c9,java/org/apache/catalina/webresources/AbstractFileResourceSet.java,performance: do in-memory checks first and I/O performing ones later kkolinko review,https://github.com/apache/tomcat/commit/1ae77cfcf3c7b437393d79c9a908d25347ef64c9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-21,7,1,2,1,1,Local,0.111650485436893,23,206,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,1af401fb2edfe4cbe9b0b1c2af4b7c5fb10ba63d,java/org/apache/coyote/http11/upgrade/LocalStrings.properties,"First cut of HTTP Upgrade for BIO with blocking
- NIO, APR still broken
- Non-blocking IO not implemented for Upgrade
- WebSocket still broken",https://github.com/apache/tomcat/commit/1af401fb2edfe4cbe9b0b1c2af4b7c5fb10ba63d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,6,6,194,176,Global,1,25,25,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,1af401fb2edfe4cbe9b0b1c2af4b7c5fb10ba63d,java/org/apache/coyote/http11/upgrade/UpgradeBioProcessor.java,"First cut of HTTP Upgrade for BIO with blocking
- NIO, APR still broken
- Non-blocking IO not implemented for Upgrade
- WebSocket still broken",https://github.com/apache/tomcat/commit/1af401fb2edfe4cbe9b0b1c2af4b7c5fb10ba63d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,42,80,194,176,Global,0.821471652593486,681,829,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,1af401fb2edfe4cbe9b0b1c2af4b7c5fb10ba63d,java/org/apache/coyote/http11/upgrade/UpgradeInbound.java,"First cut of HTTP Upgrade for BIO with blocking
- NIO, APR still broken
- Non-blocking IO not implemented for Upgrade
- WebSocket still broken",https://github.com/apache/tomcat/commit/1af401fb2edfe4cbe9b0b1c2af4b7c5fb10ba63d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,0,44,194,176,Global,1,174,174,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,1af401fb2edfe4cbe9b0b1c2af4b7c5fb10ba63d,java/org/apache/coyote/http11/upgrade/UpgradeOutbound.java,"First cut of HTTP Upgrade for BIO with blocking
- NIO, APR still broken
- Non-blocking IO not implemented for Upgrade
- WebSocket still broken",https://github.com/apache/tomcat/commit/1af401fb2edfe4cbe9b0b1c2af4b7c5fb10ba63d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,0,48,194,176,Global,1,214,214,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,1af401fb2edfe4cbe9b0b1c2af4b7c5fb10ba63d,java/org/apache/coyote/http11/upgrade/UpgradeProcessor.java,"First cut of HTTP Upgrade for BIO with blocking
- NIO, APR still broken
- Non-blocking IO not implemented for Upgrade
- WebSocket still broken",https://github.com/apache/tomcat/commit/1af401fb2edfe4cbe9b0b1c2af4b7c5fb10ba63d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,146,192,194,176,Global,0.660919540229885,460,696,Mark Emlyn David Thomas
CVE-2015-5351,352,NA,Bypass CSRF,2016-2-24,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The (1) Manager and (2) Host Manager applications in Apache Tomcat 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 establish sessions and send CSRF tokens for arbitrary new requests, which allows remote attackers to bypass a CSRF protection mechanism by using a token.",https://www.cvedetails.com/cve/CVE-2015-5351/,20150701,"Yes. Fixed in Apache Tomcat 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: CSRF token leak CVE-2015-5351
The index page of the Manager and Host Manager applications included a valid CSRF token when issuing a redirect as a result of an unauthenticated request to the root of the web application. If an attacker had access to the Manager or Host Manager applications (typically these applications are only accessible to internal users, not exposed to the Internet), this token could then be used by the attacker to construct a CSRF attack.
This was fixed in revisions 1720661 and 1720663.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 7.0.1 to 7.0.67
This was fixed in revisions 1720658 and 1720660.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1720652 and 1720655.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-12-8,2016-2-22,2016-2-16,1b1ce375c54ae2a17da94981af4ea97687f4b698,webapps/docs/changelog.xml,Don't create session unnecessarily in the Manager application.,https://github.com/apache/tomcat/commit/1b1ce375c54ae2a17da94981af4ea97687f4b698,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-12-17,1,3,3,5,3,Global,0.008554176450855,204,23848,Mark Emlyn David Thomas
CVE-2015-5351,352,NA,Bypass CSRF,2016-2-24,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The (1) Manager and (2) Host Manager applications in Apache Tomcat 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 establish sessions and send CSRF tokens for arbitrary new requests, which allows remote attackers to bypass a CSRF protection mechanism by using a token.",https://www.cvedetails.com/cve/CVE-2015-5351/,20150701,"Yes. Fixed in Apache Tomcat 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: CSRF token leak CVE-2015-5351
The index page of the Manager and Host Manager applications included a valid CSRF token when issuing a redirect as a result of an unauthenticated request to the root of the web application. If an attacker had access to the Manager or Host Manager applications (typically these applications are only accessible to internal users, not exposed to the Internet), this token could then be used by the attacker to construct a CSRF attack.
This was fixed in revisions 1720661 and 1720663.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 7.0.1 to 7.0.67
This was fixed in revisions 1720658 and 1720660.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1720652 and 1720655.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-12-8,2016-2-22,2016-2-16,1b1ce375c54ae2a17da94981af4ea97687f4b698,webapps/manager/index.jsp,Don't create session unnecessarily in the Manager application.,https://github.com/apache/tomcat/commit/1b1ce375c54ae2a17da94981af4ea97687f4b698,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-12-17,1,2,4,5,3,Global,0.181818181818182,4,22,Mark Emlyn David Thomas
CVE-2015-5351,352,NA,Bypass CSRF,2016-2-24,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The (1) Manager and (2) Host Manager applications in Apache Tomcat 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 establish sessions and send CSRF tokens for arbitrary new requests, which allows remote attackers to bypass a CSRF protection mechanism by using a token.",https://www.cvedetails.com/cve/CVE-2015-5351/,20150701,"Yes. Fixed in Apache Tomcat 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: CSRF token leak CVE-2015-5351
The index page of the Manager and Host Manager applications included a valid CSRF token when issuing a redirect as a result of an unauthenticated request to the root of the web application. If an attacker had access to the Manager or Host Manager applications (typically these applications are only accessible to internal users, not exposed to the Internet), this token could then be used by the attacker to construct a CSRF attack.
This was fixed in revisions 1720661 and 1720663.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 7.0.1 to 7.0.67
This was fixed in revisions 1720658 and 1720660.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1720652 and 1720655.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-12-8,2016-2-22,2016-2-16,1b1ce375c54ae2a17da94981af4ea97687f4b698,webapps/manager/WEB-INF/web.xml,Don't create session unnecessarily in the Manager application.,https://github.com/apache/tomcat/commit/1b1ce375c54ae2a17da94981af4ea97687f4b698,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-12-17,1,0,1,5,3,Global,0.010482180293501,5,477,Mark Emlyn David Thomas
CVE-2007-2450,79,NA,XSS,2007-6-14,2017-10-10,3.5,None,Remote,Medium,Single system,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the (1) Manager and (2) Host Manager web applications in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.36, 5.0.0 through 5.0.30, 5.5.0 through 5.5.24, and 6.0.0 through 6.0.13 allow remote authenticated users to inject arbitrary web script or HTML via a parameter name to manager/html/upload, and other unspecified vectors.",https://www.cvedetails.com/cve/CVE-2007-2450/,20070502,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.25, 5.0.SVN, 6.0.14:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The Manager and Host Manager web applications did not escape user provided data before including it in the output. This enabled a XSS attack. These applications now filter the data before use. This issue may be mitigated by logging out (closing the browser) of the application once the management tasks have been completed.,No,,,2007-9-8,1bc3bcb2848f478fd6674487d6dad507fd5dd686,java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java,Fix XSS issue in Manager and Host Manager. This is CVE-2007-2450.,https://github.com/apache/tomcat/commit/1bc3bcb2848f478fd6674487d6dad507fd5dd686,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-6-14,1,6,7,12,4,Global,0.040160642570281,20,498,Remy Maucherat
CVE-2007-2450,79,NA,XSS,2007-6-14,2017-10-10,3.5,None,Remote,Medium,Single system,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the (1) Manager and (2) Host Manager web applications in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.36, 5.0.0 through 5.0.30, 5.5.0 through 5.5.24, and 6.0.0 through 6.0.13 allow remote authenticated users to inject arbitrary web script or HTML via a parameter name to manager/html/upload, and other unspecified vectors.",https://www.cvedetails.com/cve/CVE-2007-2450/,20070502,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.25, 5.0.SVN, 6.0.14:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The Manager and Host Manager web applications did not escape user provided data before including it in the output. This enabled a XSS attack. These applications now filter the data before use. This issue may be mitigated by logging out (closing the browser) of the application once the management tasks have been completed.,No,,,2007-9-8,1bc3bcb2848f478fd6674487d6dad507fd5dd686,java/org/apache/catalina/manager/HTMLManagerServlet.java,Fix XSS issue in Manager and Host Manager. This is CVE-2007-2450.,https://github.com/apache/tomcat/commit/1bc3bcb2848f478fd6674487d6dad507fd5dd686,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-6-14,1,6,9,12,4,Global,0.057142857142857,68,1190,Remy Maucherat
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,1cc234b59319301bd423a3eff43ea418068c797f,java/org/apache/catalina/authenticator/AuthenticatorBase.java,Avoid npe,https://github.com/apache/tomcat/commit/1cc234b59319301bd423a3eff43ea418068c797f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-4,7,4,6,4,2,Local,0.166095356808975,533,3209,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,1cd490ac0024d2f5b643215fc0862d086c83661a,java/org/apache/catalina/connector/Request.java,Simplify addition of parameters,https://github.com/apache/tomcat/commit/1cd490ac0024d2f5b643215fc0862d086c83661a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-30,561,5,10,12,9,Global,0.227632322471275,2417,10618,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,1cd490ac0024d2f5b643215fc0862d086c83661a,java/org/apache/tomcat/util/http/Parameters.java,Simplify addition of parameters,https://github.com/apache/tomcat/commit/1cd490ac0024d2f5b643215fc0862d086c83661a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-30,561,3,5,12,9,Global,0.481225842076201,1743,3622,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,1cd490ac0024d2f5b643215fc0862d086c83661a,test/org/apache/tomcat/util/http/TestParameters.java,Simplify addition of parameters,https://github.com/apache/tomcat/commit/1cd490ac0024d2f5b643215fc0862d086c83661a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-30,561,4,6,12,9,Global,1,595,595,Mark Emlyn David Thomas
CVE-2016-6797,284,NA,,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,Partial,None,None,"The ResourceLinkFactory implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.",https://www.cvedetails.com/cve/CVE-2016-6797/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Unrestricted Access to Global Resources CVE-2016-6797
The ResourceLinkFactory did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.
This was fixed in revision 1757285.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1757275.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1757272 for 8.5.x and revision 1757273 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1757271.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-1-18,2016-10-27,2016-10-16,1cdd1640f7e899957071a77e3f9478b88b0d058e,java/org/apache/naming/factory/ResourceLinkFactory.java,Correct comment,https://github.com/apache/tomcat/commit/1cdd1640f7e899957071a77e3f9478b88b0d058e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-22,25,2,5,2,3,Global,0.219616204690832,103,469,Mladen Turk
CVE-2011-2526,20,NA,DoS Bypass,2011-7-14,2018-1-5,4.4,None,Local,Medium,Not required,Partial,Partial,Partial,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.19, when sendfile is enabled for the HTTP APR or HTTP NIO connector, does not validate certain request attributes, which allows local users to bypass intended file access restrictions or cause a denial of service (infinite loop or JVM crash) by leveraging an untrusted web application.",https://www.cvedetails.com/cve/CVE-2011-2526/,20110615,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2526
Tomcat provides support for sendfile with the HTTP APR connector. sendfile is used automatically for content served via the DefaultServlet and deployed web applications may use it directly via setting request attributes. These request attributes were not validated. When running under a security manager, this lack of validation allowed a malicious web application to do one or more of the following that would normally be prevented by a security manager:
return files to users that the security manager should make inaccessible
terminate (via a crash) the JVM
Additionally, these vulnerabilities only occur when all of the following are true:
untrusted web applications are being used
the SecurityManager is used to limit the untrusted web applications
the HTTP APR connector is used
sendfile is enabled for the connector (this is the default)
This was fixed in revision 1158244.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1146703.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 6.0.0-6.0.32
This was fixed in revisions 1145383, 1145489, 1145571, 1145694 and 1146005.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 7.0.0-7.0.18
Note: The issues below were fixed in Apache Tomcat 7.0.17 but the release votes for the 7.0.17 and 7.0.18 release candidates did not pass. Therefore, although users must download 7.0.19 to obtain a version that includes a fix for these issues, versions 7.0.17 and 7.0.18 are not included in the list of affected versions.",No,2011-7-7,2011-7-13,2011-9-22,1d372c881eafd9ffe729996f8560fd5fe50cd39d,java/org/apache/coyote/http11/Http11AprProcessor.java,"Protect against crashes in the HTTP APR connector if sendfile is configured to send more data than is available in the file.
Part of the fix for CVE-2011-2526",https://github.com/apache/tomcat/commit/1d372c881eafd9ffe729996f8560fd5fe50cd39d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-7-12,2,12,13,19,4,Global,0.266461159062885,2161,8110,Mladen Turk
CVE-2011-2526,20,NA,DoS Bypass,2011-7-14,2018-1-5,4.4,None,Local,Medium,Not required,Partial,Partial,Partial,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.19, when sendfile is enabled for the HTTP APR or HTTP NIO connector, does not validate certain request attributes, which allows local users to bypass intended file access restrictions or cause a denial of service (infinite loop or JVM crash) by leveraging an untrusted web application.",https://www.cvedetails.com/cve/CVE-2011-2526/,20110615,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2526
Tomcat provides support for sendfile with the HTTP APR connector. sendfile is used automatically for content served via the DefaultServlet and deployed web applications may use it directly via setting request attributes. These request attributes were not validated. When running under a security manager, this lack of validation allowed a malicious web application to do one or more of the following that would normally be prevented by a security manager:
return files to users that the security manager should make inaccessible
terminate (via a crash) the JVM
Additionally, these vulnerabilities only occur when all of the following are true:
untrusted web applications are being used
the SecurityManager is used to limit the untrusted web applications
the HTTP APR connector is used
sendfile is enabled for the connector (this is the default)
This was fixed in revision 1158244.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1146703.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 6.0.0-6.0.32
This was fixed in revisions 1145383, 1145489, 1145571, 1145694 and 1146005.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 7.0.0-7.0.18
Note: The issues below were fixed in Apache Tomcat 7.0.17 but the release votes for the 7.0.17 and 7.0.18 release candidates did not pass. Therefore, although users must download 7.0.19 to obtain a version that includes a fix for these issues, versions 7.0.17 and 7.0.18 are not included in the list of affected versions.",No,2011-7-7,2011-7-13,2011-9-22,1d372c881eafd9ffe729996f8560fd5fe50cd39d,java/org/apache/tomcat/util/net/AprEndpoint.java,"Protect against crashes in the HTTP APR connector if sendfile is configured to send more data than is available in the file.
Part of the fix for CVE-2011-2526",https://github.com/apache/tomcat/commit/1d372c881eafd9ffe729996f8560fd5fe50cd39d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-7-12,2,3,4,19,4,Global,0.117607070020394,1038,8826,Mladen Turk
CVE-2011-2526,20,NA,DoS Bypass,2011-7-14,2018-1-5,4.4,None,Local,Medium,Not required,Partial,Partial,Partial,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.19, when sendfile is enabled for the HTTP APR or HTTP NIO connector, does not validate certain request attributes, which allows local users to bypass intended file access restrictions or cause a denial of service (infinite loop or JVM crash) by leveraging an untrusted web application.",https://www.cvedetails.com/cve/CVE-2011-2526/,20110615,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2526
Tomcat provides support for sendfile with the HTTP APR connector. sendfile is used automatically for content served via the DefaultServlet and deployed web applications may use it directly via setting request attributes. These request attributes were not validated. When running under a security manager, this lack of validation allowed a malicious web application to do one or more of the following that would normally be prevented by a security manager:
return files to users that the security manager should make inaccessible
terminate (via a crash) the JVM
Additionally, these vulnerabilities only occur when all of the following are true:
untrusted web applications are being used
the SecurityManager is used to limit the untrusted web applications
the HTTP APR connector is used
sendfile is enabled for the connector (this is the default)
This was fixed in revision 1158244.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1146703.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 6.0.0-6.0.32
This was fixed in revisions 1145383, 1145489, 1145571, 1145694 and 1146005.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 7.0.0-7.0.18
Note: The issues below were fixed in Apache Tomcat 7.0.17 but the release votes for the 7.0.17 and 7.0.18 release candidates did not pass. Therefore, although users must download 7.0.19 to obtain a version that includes a fix for these issues, versions 7.0.17 and 7.0.18 are not included in the list of affected versions.",No,2011-7-7,2011-7-13,2011-9-22,1d372c881eafd9ffe729996f8560fd5fe50cd39d,webapps/docs/changelog.xml,"Protect against crashes in the HTTP APR connector if sendfile is configured to send more data than is available in the file.
Part of the fix for CVE-2011-2526",https://github.com/apache/tomcat/commit/1d372c881eafd9ffe729996f8560fd5fe50cd39d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-7-12,2,3,5,19,4,Global,0.388141169433229,5191,13374,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,1e1bfc9077f77fd308b362563e1fb82edcd8819f,java/org/apache/catalina/connector/Request.java,"Change implementation of PARAMETER_PARSE_FAILED_ATTR attribute, to align with other special attributes. It is now implemented in Request.getAttribute().",https://github.com/apache/tomcat/commit/1e1bfc9077f77fd308b362563e1fb82edcd8819f,Konstatin Kolinko,,,,2011-11-10,561,8,16,8,8,Local,0.03658867106333,405,11069,Mladen Turk
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,209214e4dac2a46b38186a60c1e196916a2e164f,java/org/apache/coyote/http11/upgrade/UpgradeAprProcessor.java,"Refactor ServletOutputStream
- BIO untested
- NIO untested
- APR not implemented",https://github.com/apache/tomcat/commit/209214e4dac2a46b38186a60c1e196916a2e164f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,1,32,234,248,Global,0.848547717842324,818,964,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,209214e4dac2a46b38186a60c1e196916a2e164f,java/org/apache/coyote/http11/upgrade/UpgradeAprServletOutputStream.java,"Refactor ServletOutputStream
- BIO untested
- NIO untested
- APR not implemented",https://github.com/apache/tomcat/commit/209214e4dac2a46b38186a60c1e196916a2e164f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,44,44,234,248,Global,1,44,44,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,209214e4dac2a46b38186a60c1e196916a2e164f,java/org/apache/coyote/http11/upgrade/UpgradeBioProcessor.java,"Refactor ServletOutputStream
- BIO untested
- NIO untested
- APR not implemented",https://github.com/apache/tomcat/commit/209214e4dac2a46b38186a60c1e196916a2e164f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,1,32,234,248,Global,0.832768361581921,737,885,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,209214e4dac2a46b38186a60c1e196916a2e164f,java/org/apache/coyote/http11/upgrade/UpgradeNioProcessor.java,"Refactor ServletOutputStream
- BIO untested
- NIO untested
- APR not implemented",https://github.com/apache/tomcat/commit/209214e4dac2a46b38186a60c1e196916a2e164f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,1,99,234,248,Global,0.828866948754114,1763,2127,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,209214e4dac2a46b38186a60c1e196916a2e164f,java/org/apache/coyote/http11/upgrade/UpgradeProcessor.java,"Refactor ServletOutputStream
- BIO untested
- NIO untested
- APR not implemented",https://github.com/apache/tomcat/commit/209214e4dac2a46b38186a60c1e196916a2e164f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,1,52,234,248,Global,0.71078431372549,580,816,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,209214e4dac2a46b38186a60c1e196916a2e164f,java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java,"Refactor ServletOutputStream
- BIO untested
- NIO untested
- APR not implemented",https://github.com/apache/tomcat/commit/209214e4dac2a46b38186a60c1e196916a2e164f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,9,26,234,248,Global,1,210,210,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,209214e4dac2a46b38186a60c1e196916a2e164f,java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java,"Refactor ServletOutputStream
- BIO untested
- NIO untested
- APR not implemented",https://github.com/apache/tomcat/commit/209214e4dac2a46b38186a60c1e196916a2e164f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,3,23,234,248,Global,1,142,142,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,20f007491ed7e6d326f1a0ff830fa702da923020,java/org/apache/catalina/connector/Request.java,"Introduce new request attribute to be used to mark request if there was a failure during parameter parsing, and a Filter that triggers parameter parsing and rejects requests marked with that attribute.",https://github.com/apache/tomcat/commit/20f007491ed7e6d326f1a0ff830fa702da923020,Konstatin Kolinko,,,,2011-11-7,561,200,374,323,174,Global,0.035106768005791,388,11052,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,20f007491ed7e6d326f1a0ff830fa702da923020,java/org/apache/catalina/filters/FailedRequestFilter.java,"Introduce new request attribute to be used to mark request if there was a failure during parameter parsing, and a Filter that triggers parameter parsing and rejects requests marked with that attribute.",https://github.com/apache/tomcat/commit/20f007491ed7e6d326f1a0ff830fa702da923020,Konstatin Kolinko,,,,2011-11-7,561,93,93,323,174,Global,1,93,93,Konstantin Kolinko
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,20f007491ed7e6d326f1a0ff830fa702da923020,java/org/apache/catalina/Globals.java,"Introduce new request attribute to be used to mark request if there was a failure during parameter parsing, and a Filter that triggers parameter parsing and rejects requests marked with that attribute.",https://github.com/apache/tomcat/commit/20f007491ed7e6d326f1a0ff830fa702da923020,Konstatin Kolinko,,,,2011-11-7,561,11,11,323,174,Global,0.059540889526542,83,1394,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,20f007491ed7e6d326f1a0ff830fa702da923020,java/org/apache/tomcat/util/http/Parameters.java,"Introduce new request attribute to be used to mark request if there was a failure during parameter parsing, and a Filter that triggers parameter parsing and rejects requests marked with that attribute.",https://github.com/apache/tomcat/commit/20f007491ed7e6d326f1a0ff830fa702da923020,Konstatin Kolinko,,,,2011-11-7,561,19,19,323,174,Global,0.019555317439057,73,3733,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,211c381310db7ded0c7e1a1ef11dd4f62e7c71bb,java/org/apache/tomcat/util/http/Parameters.java,"Replace Hashtable with HashMap in parameter processing.
Improve paramsAsString() debug method by iterating over entries instead of keys.",https://github.com/apache/tomcat/commit/211c381310db7ded0c7e1a1ef11dd4f62e7c71bb,Konstatin Kolinko,,,,2011-10-31,561,10,20,10,10,Local,0.007652364033889,28,3659,Mark Emlyn David Thomas
CVE-2007-1358,79,NA,XSS,2007-5-9,2017-10-10,2.6,None,Remote,High,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in certain applications using Apache Tomcat 4.0.0 through 4.0.6 and 4.1.0 through 4.1.34 allows remote attackers to inject arbitrary web script or HTML via crafted ""Accept-Language headers that do not conform to RFC 2616"".",https://www.cvedetails.com/cve/CVE-2007-1358/,20070308,"Yes. Fixed in Apache Tomcat 4.1.36:
http://tomcat.apache.org/security-4.html","Web pages that display the Accept-Language header value sent by the client are susceptible to a cross-site scripting attack if they assume the Accept-Language header value conforms to RFC 2616. Under normal circumstances this would not be possible to exploit, however older versions of Flash player were known to allow carefully crafted malicious Flash files to make requests with such custom headers. When generating the response for getLocale() and getLocales(), Tomcat now ignores values for Accept-Language headers that do not conform to RFC 2616. Applications that use the raw header values directly should not assume that the headers conform to RFC 2616 and should filter the values appropriately.",No,,,,256d3f0d805c0ebf6700a29ff3a6c96298810a9e,java/org/apache/catalina/connector/Request.java,"RFC2616 specifies 1*8ALPHA and ALPHA is a-z or A-Z, it does not include numbers",https://github.com/apache/tomcat/commit/256d3f0d805c0ebf6700a29ff3a6c96298810a9e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2006-12-8,1,1,2,1,1,Local,0.002324680356451,18,7743,Mladen Turk
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,265cc465a12efe4f9c2cd0ddb7a7bd16b1879c9c,java/org/apache/catalina/valves/ErrorReportValve.java,"synch from 6.0
http://svn.apache.org/viewvc?view=rev&rev=543307
http://svn.apache.org/viewvc?view=rev&rev=553410",https://github.com/apache/tomcat/commit/265cc465a12efe4f9c2cd0ddb7a7bd16b1879c9c,Filip Hanik,,,,2007-7-20,143,1,2,30,3,Global,0.001855287569573,2,1078,Mladen Turk
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,265cc465a12efe4f9c2cd0ddb7a7bd16b1879c9c,java/org/apache/tomcat/util/http/ServerCookie.java,"synch from 6.0
http://svn.apache.org/viewvc?view=rev&rev=543307
http://svn.apache.org/viewvc?view=rev&rev=553410",https://github.com/apache/tomcat/commit/265cc465a12efe4f9c2cd0ddb7a7bd16b1879c9c,Filip Hanik,,,,2007-7-20,143,29,31,30,3,Global,0.023938223938224,31,1295,Mladen Turk
CVE-2011-2481,NA,NA,,2011-8-15,2017-5-22,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"Apache Tomcat 7.0.x before 7.0.17 permits web applications to replace an XML parser used for other web applications, which allows local users to read or modify the (1) web.xml, (2) context.xml, or (3) tld files of arbitrary web applications via a crafted application that is loaded earlier than the target application. NOTE: this vulnerability exists because of a CVE-2009-0783 regression.",https://www.cvedetails.com/cve/CVE-2011-2481/,20110615,"Yes. Fixed in Apache Tomcat 7.0.19:
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2481
The re-factoring of XML validation for Tomcat 7.0.x re-introduced the vulnerability previously reported as CVE-2009-0783. This was initially reported as a memory leak. If a web application is the first web application loaded, this bugs allows that web application to potentially view and/or alter the web.xml, context.xml and tld files of other web applications deployed on the Tomcat instance.
This was first fixed in revision 1137753, but reverted in revision 1138776 and finally fixed in revision 1138788.
This was identified by the Tomcat security team on 20 June 2011 and made public on 12 August 2011.
Affects: 7.0.0-7.0.16",No,2011-6-20,2011-8-12,2011-7-9,279e4451cb996f810fbca2f78b6340412d9daa7b,java/org/apache/catalina/startup/ContextConfig.java,"Revert r1137753 - I have a better soution in mind
Fix part 2 of 3 for CVE-2011-2481",https://github.com/apache/tomcat/commit/279e4451cb996f810fbca2f78b6340412d9daa7b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-23,4,25,52,25,27,Local,0.428426524660834,3379,7887,Mark Emlyn David Thomas
CVE-2016-6797,284,NA,,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,Partial,None,None,"The ResourceLinkFactory implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.",https://www.cvedetails.com/cve/CVE-2016-6797/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Unrestricted Access to Global Resources CVE-2016-6797
The ResourceLinkFactory did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.
This was fixed in revision 1757285.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1757275.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1757272 for 8.5.x and revision 1757273 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1757271.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-1-18,2016-10-27,2016-10-16,2859ac3eae132383cb6f3f2042e25d7a4a281b0d,java/org/apache/catalina/core/NamingContextListener.java,"When adding and removing ResourceLinks dynamically, ensure
that the global resource is only visible via the
ResourceLinkFactory when it is meant to be.",https://github.com/apache/tomcat/commit/2859ac3eae132383cb6f3f2042e25d7a4a281b0d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-22,25,19,19,172,0,Global,0.026309195690303,105,3991,Mladen Turk
CVE-2016-6797,284,NA,,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,Partial,None,None,"The ResourceLinkFactory implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.",https://www.cvedetails.com/cve/CVE-2016-6797/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Unrestricted Access to Global Resources CVE-2016-6797
The ResourceLinkFactory did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.
This was fixed in revision 1757285.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1757275.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1757272 for 8.5.x and revision 1757273 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1757271.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-1-18,2016-10-27,2016-10-16,2859ac3eae132383cb6f3f2042e25d7a4a281b0d,java/org/apache/naming/factory/ResourceLinkFactory.java,"When adding and removing ResourceLinks dynamically, ensure
that the global resource is only visible via the
ResourceLinkFactory when it is meant to be.",https://github.com/apache/tomcat/commit/2859ac3eae132383cb6f3f2042e25d7a4a281b0d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-22,25,61,61,172,0,Global,0.211206896551724,98,464,Mladen Turk
CVE-2016-6797,284,NA,,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,Partial,None,None,"The ResourceLinkFactory implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.",https://www.cvedetails.com/cve/CVE-2016-6797/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Unrestricted Access to Global Resources CVE-2016-6797
The ResourceLinkFactory did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.
This was fixed in revision 1757285.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1757275.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1757272 for 8.5.x and revision 1757273 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1757271.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-1-18,2016-10-27,2016-10-16,2859ac3eae132383cb6f3f2042e25d7a4a281b0d,test/org/apache/naming/TestNamingContext.java,"When adding and removing ResourceLinks dynamically, ensure
that the global resource is only visible via the
ResourceLinkFactory when it is meant to be.",https://github.com/apache/tomcat/commit/2859ac3eae132383cb6f3f2042e25d7a4a281b0d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-22,25,87,87,172,0,Global,1,87,87,Mark Thomas
CVE-2016-6797,284,NA,,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,Partial,None,None,"The ResourceLinkFactory implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.",https://www.cvedetails.com/cve/CVE-2016-6797/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Unrestricted Access to Global Resources CVE-2016-6797
The ResourceLinkFactory did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.
This was fixed in revision 1757285.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1757275.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1757272 for 8.5.x and revision 1757273 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1757271.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-1-18,2016-10-27,2016-10-16,2859ac3eae132383cb6f3f2042e25d7a4a281b0d,webapps/docs/changelog.xml,"When adding and removing ResourceLinks dynamically, ensure
that the global resource is only visible via the
ResourceLinkFactory when it is meant to be.",https://github.com/apache/tomcat/commit/2859ac3eae132383cb6f3f2042e25d7a4a281b0d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-22,25,5,5,172,0,Global,0.057442576921577,1473,25643,Mark Emlyn David Thomas
CVE-2010-4172,79,NA,XSS,2010-11-26,2017-8-16,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Manager application in Apache Tomcat 6.0.12 through 6.0.29 and 7.0.0 through 7.0.4 allow remote attackers to inject arbitrary web script or HTML via the (1) orderBy or (2) sort parameter to sessionsList.jsp, or unspecified input to (3) sessionDetail.jsp or (4) java/org/apache/catalina/manager/JspHelper.java, related to use of untrusted web applications.",https://www.cvedetails.com/cve/CVE-2010-4172/,20101104,"Yes. Fixed in Apache Tomcat 6.0.30, 7.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Cross-site scripting CVE-2010-4172
The Manager application used the user provided parameters sort and orderBy directly without filtering thereby permitting cross-site scripting.
This was fixed in revision 1037779.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 6.0.12-6.0.29
This was fixed in revision 1037778.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 7.0.0-7.0.4",No,2010-11-15,2010-11-22,2011-1-13,291875a9af83f5e5ad8eeaafc2e83291cc5e9a3c,java/org/apache/catalina/manager/HTMLManagerServlet.java,Changes to Manager and HTML Manager to support parallel deployment,https://github.com/apache/tomcat/commit/291875a9af83f5e5ad8eeaafc2e83291cc5e9a3c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-11-19,4,130,212,248,187,Global,0.587636363636364,1616,2750,Mark Emlyn David Thomas
CVE-2010-4172,79,NA,XSS,2010-11-26,2017-8-16,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Manager application in Apache Tomcat 6.0.12 through 6.0.29 and 7.0.0 through 7.0.4 allow remote attackers to inject arbitrary web script or HTML via the (1) orderBy or (2) sort parameter to sessionsList.jsp, or unspecified input to (3) sessionDetail.jsp or (4) java/org/apache/catalina/manager/JspHelper.java, related to use of untrusted web applications.",https://www.cvedetails.com/cve/CVE-2010-4172/,20101104,"Yes. Fixed in Apache Tomcat 6.0.30, 7.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Cross-site scripting CVE-2010-4172
The Manager application used the user provided parameters sort and orderBy directly without filtering thereby permitting cross-site scripting.
This was fixed in revision 1037779.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 6.0.12-6.0.29
This was fixed in revision 1037778.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 7.0.0-7.0.4",No,2010-11-15,2010-11-22,2011-1-13,291875a9af83f5e5ad8eeaafc2e83291cc5e9a3c,java/org/apache/catalina/manager/ManagerServlet.java,Changes to Manager and HTML Manager to support parallel deployment,https://github.com/apache/tomcat/commit/291875a9af83f5e5ad8eeaafc2e83291cc5e9a3c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-11-19,4,106,205,248,187,Global,0.347316704459562,919,2646,Remy Maucherat
CVE-2010-4172,79,NA,XSS,2010-11-26,2017-8-16,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Manager application in Apache Tomcat 6.0.12 through 6.0.29 and 7.0.0 through 7.0.4 allow remote attackers to inject arbitrary web script or HTML via the (1) orderBy or (2) sort parameter to sessionsList.jsp, or unspecified input to (3) sessionDetail.jsp or (4) java/org/apache/catalina/manager/JspHelper.java, related to use of untrusted web applications.",https://www.cvedetails.com/cve/CVE-2010-4172/,20101104,"Yes. Fixed in Apache Tomcat 6.0.30, 7.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Cross-site scripting CVE-2010-4172
The Manager application used the user provided parameters sort and orderBy directly without filtering thereby permitting cross-site scripting.
This was fixed in revision 1037779.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 6.0.12-6.0.29
This was fixed in revision 1037778.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 7.0.0-7.0.4",No,2010-11-15,2010-11-22,2011-1-13,291875a9af83f5e5ad8eeaafc2e83291cc5e9a3c,webapps/manager/WEB-INF/jsp/sessionDetail.jsp,Changes to Manager and HTML Manager to support parallel deployment,https://github.com/apache/tomcat/commit/291875a9af83f5e5ad8eeaafc2e83291cc5e9a3c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-11-19,4,5,8,248,187,Global,0.744990892531876,409,549,Mark Emlyn David Thomas
CVE-2014-0050,264,NA,DoS Bypass,2014-4-1,2017-12-15,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.",https://www.cvedetails.com/cve/CVE-2014-0050/,20131203,"Yes. Fixed in Apache Tomcat 7.0.52, 8.0.3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of Service CVE-2014-0050
It was possible to craft a malformed Content-Type header for a multipart request that caused Apache Tomcat to enter an infinite loop. A malicious user could, therefore, craft a malformed request that triggered a denial of service.
The root cause of this error was a bug in Apache Commons FileUpload. Tomcat 7 uses a packaged renamed copy of Apache Commons FileUpload to implement the requirement of the Servlet 3.0 specification to support the processing of mime-multipart requests. Tomcat 7 was therefore affected by this issue.
This was fixed in revision 1565169.
This issue was reported to the Apache Software Foundation on 04 Feb 2014 and accidently made public on 06 Feb 2014.
Affects: 7.0.0-7.0.50
This was fixed in revision 1565163.
This issue was reported to the Apache Software Foundation on 04 Feb 2014 and accidently made public on 06 Feb 2014.
Affects: 8.0.0-RC1 to 8.0.1",No,2014-2-4,2014-2-6,2014-2-17,29384723d8d9645b87e05be9fa369a4deeb78b9c,java/org/apache/tomcat/util/http/fileupload/FileUploadBase.java,"Fix CVE-2014-0050 DoS with malformed Content-Type header and multipart request processing.
Update to latest code (r1565159) from Commons FileUpload",https://github.com/apache/tomcat/commit/29384723d8d9645b87e05be9fa369a4deeb78b9c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-2-6,1,13,18,26,10,Global,0.770632368703108,2157,2799,Mark Emlyn David Thomas
CVE-2014-0050,264,NA,DoS Bypass,2014-4-1,2017-12-15,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.",https://www.cvedetails.com/cve/CVE-2014-0050/,20131203,"Yes. Fixed in Apache Tomcat 7.0.52, 8.0.3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of Service CVE-2014-0050
It was possible to craft a malformed Content-Type header for a multipart request that caused Apache Tomcat to enter an infinite loop. A malicious user could, therefore, craft a malformed request that triggered a denial of service.
The root cause of this error was a bug in Apache Commons FileUpload. Tomcat 7 uses a packaged renamed copy of Apache Commons FileUpload to implement the requirement of the Servlet 3.0 specification to support the processing of mime-multipart requests. Tomcat 7 was therefore affected by this issue.
This was fixed in revision 1565169.
This issue was reported to the Apache Software Foundation on 04 Feb 2014 and accidently made public on 06 Feb 2014.
Affects: 7.0.0-7.0.50
This was fixed in revision 1565163.
This issue was reported to the Apache Software Foundation on 04 Feb 2014 and accidently made public on 06 Feb 2014.
Affects: 8.0.0-RC1 to 8.0.1",No,2014-2-4,2014-2-6,2014-2-17,29384723d8d9645b87e05be9fa369a4deeb78b9c,java/org/apache/tomcat/util/http/fileupload/MultipartStream.java,"Fix CVE-2014-0050 DoS with malformed Content-Type header and multipart request processing.
Update to latest code (r1565159) from Commons FileUpload",https://github.com/apache/tomcat/commit/29384723d8d9645b87e05be9fa369a4deeb78b9c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-2-6,1,8,13,26,10,Global,0.573135755258126,1199,2092,Mark Emlyn David Thomas
CVE-2014-0050,264,NA,DoS Bypass,2014-4-1,2017-12-15,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.",https://www.cvedetails.com/cve/CVE-2014-0050/,20131203,"Yes. Fixed in Apache Tomcat 7.0.52, 8.0.3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of Service CVE-2014-0050
It was possible to craft a malformed Content-Type header for a multipart request that caused Apache Tomcat to enter an infinite loop. A malicious user could, therefore, craft a malformed request that triggered a denial of service.
The root cause of this error was a bug in Apache Commons FileUpload. Tomcat 7 uses a packaged renamed copy of Apache Commons FileUpload to implement the requirement of the Servlet 3.0 specification to support the processing of mime-multipart requests. Tomcat 7 was therefore affected by this issue.
This was fixed in revision 1565169.
This issue was reported to the Apache Software Foundation on 04 Feb 2014 and accidently made public on 06 Feb 2014.
Affects: 7.0.0-7.0.50
This was fixed in revision 1565163.
This issue was reported to the Apache Software Foundation on 04 Feb 2014 and accidently made public on 06 Feb 2014.
Affects: 8.0.0-RC1 to 8.0.1",No,2014-2-4,2014-2-6,2014-2-17,29384723d8d9645b87e05be9fa369a4deeb78b9c,webapps/docs/changelog.xml,"Fix CVE-2014-0050 DoS with malformed Content-Type header and multipart request processing.
Update to latest code (r1565159) from Commons FileUpload",https://github.com/apache/tomcat/commit/29384723d8d9645b87e05be9fa369a4deeb78b9c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-2-6,1,5,5,26,10,Global,0.528615967041532,9495,17962,Mark Emlyn David Thomas
CVE-2011-1582,264,NA,Bypass,2011-5-20,2017-8-16,4.3,None,Remote,Medium,Not required,None,Partial,None,"Apache Tomcat 7.0.12 and 7.0.13 processes the first request to a servlet without following security constraints that have been configured through annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests. NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-1088, CVE-2011-1183, and CVE-2011-1419.",https://www.cvedetails.com/cve/CVE-2011-1582/,20110405,"Yes. Fixed in Apache Tomcat 7.0.14:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1582
An error in the fixes for CVE-2011-1088/CVE-2011-1183 meant that security constraints configured via annotations were ignored on the first request to a Servlet. Subsequent requests were secured correctly.
This was fixed in revision 1100832.
This was identified by the Tomcat security team on 13 April 2011 and made public on 17 May 2011.
Affects: 7.0.12-7.0.13",No,2011-4-13,2011-5-17,2011-5-12,299b26af66793438c323ea6b18462fa44683080f,java/org/apache/catalina/core/StandardWrapper.java,"Use the correct classloader
This is the fix for CVE-2011-1582",https://github.com/apache/tomcat/commit/299b26af66793438c323ea6b18462fa44683080f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-5-9,1,2,3,6,1,Global,0.148607664736697,1078,7254,Mladen Turk
CVE-2011-1582,264,NA,Bypass,2011-5-20,2017-8-16,4.3,None,Remote,Medium,Not required,None,Partial,None,"Apache Tomcat 7.0.12 and 7.0.13 processes the first request to a servlet without following security constraints that have been configured through annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests. NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-1088, CVE-2011-1183, and CVE-2011-1419.",https://www.cvedetails.com/cve/CVE-2011-1582/,20110405,"Yes. Fixed in Apache Tomcat 7.0.14:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1582
An error in the fixes for CVE-2011-1088/CVE-2011-1183 meant that security constraints configured via annotations were ignored on the first request to a Servlet. Subsequent requests were secured correctly.
This was fixed in revision 1100832.
This was identified by the Tomcat security team on 13 April 2011 and made public on 17 May 2011.
Affects: 7.0.12-7.0.13",No,2011-4-13,2011-5-17,2011-5-12,299b26af66793438c323ea6b18462fa44683080f,webapps/docs/changelog.xml,"Use the correct classloader
This is the fix for CVE-2011-1582",https://github.com/apache/tomcat/commit/299b26af66793438c323ea6b18462fa44683080f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-5-9,1,4,4,6,1,Global,0.365043715408679,4551,12467,Mark Emlyn David Thomas
CVE-2007-0450,22,NA,Directory Traversal,2007-3-16,2017-10-10,5,None,Remote,Low,Not required,Partial,None,None,"Directory traversal vulnerability in Apache HTTP Server and Tomcat 5.x before 5.5.22 and 6.x before 6.0.10, when using certain proxy modules (mod_proxy, mod_rewrite, mod_jk), allows remote attackers to read arbitrary files via a .. (dot dot) sequence with combinations of (1) ""/"" (slash), (2) ""\"" (backslash), and (3) URL-encoded backslash (%5C) characters in the URL, which are valid separators in Tomcat but not in Apache.",https://www.cvedetails.com/cve/CVE-2007-0450/,20070123,"Yes. Fixed in Apache Tomcat 4.1.36, 5.5.22, 5.0.SVN, 6.0.10:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Tomcat permits '\', '%2F' and '%5C' as path delimiters. When Tomcat is used behind a proxy (including, but not limited to, Apache HTTP server with mod_proxy and mod_jk) configured to only proxy some contexts, a HTTP request containing strings like ""/\../"" may allow attackers to work around the context restriction of the proxy, and access the non-proxied contexts.
The following Java system properties have been added to Tomcat to provide additional control of the handling of path delimiters in URLs (both options default to false):
org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH: true|false
org.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH: true|false
Due to the impossibility to guarantee that all URLs are handled by Tomcat as they are in proxy servers, Tomcat should always be secured as if no proxy restricting context access was used.",No,,,2007-2-28,29ac694c0b207496e510669fb6a4bd02b9efc5ce,java/org/apache/tomcat/util/buf/UDecoder.java,"Reduce overhead from exception handling, using ProxyDirContext.NOT_FOUND_EXCEPTION as an example.",https://github.com/apache/tomcat/commit/29ac694c0b207496e510669fb6a4bd02b9efc5ce,Konstatin Kolinko,,,Apache,2011-11-17,1,29,34,29,5,Local,0.229372937293729,278,1212,Mladen Turk
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,2d7dbfe4c63a4242a9b28fdb662d91ceb7a84630,java/org/apache/catalina/authenticator/AuthenticatorBase.java,CVE-2011-1088 Fix typo,https://github.com/apache/tomcat/commit/2d7dbfe4c63a4242a9b28fdb662d91ceb7a84630,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-3,7,1,2,1,1,Local,0.163488590184433,523,3199,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,2dbc6b4943fef5a914f2e32fbd5083eaf3752ad6,java/org/apache/tomcat/util/http/Parameters.java,"Parameters.java:
- Fix regression in urldecoding of parameters that contain spaces
Patch by Willem Fibbe

TestParameters.java:
- Improve the test to cover parameters that contain spaces",https://github.com/apache/tomcat/commit/2dbc6b4943fef5a914f2e32fbd5083eaf3752ad6,Konstatin Kolinko,,,,2011-11-16,561,1,1,30,23,Global,0.021651964715317,81,3741,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,2dbc6b4943fef5a914f2e32fbd5083eaf3752ad6,test/org/apache/tomcat/util/http/TestParameters.java,"Parameters.java:
- Fix regression in urldecoding of parameters that contain spaces
Patch by Willem Fibbe

TestParameters.java:
- Improve the test to cover parameters that contain spaces",https://github.com/apache/tomcat/commit/2dbc6b4943fef5a914f2e32fbd5083eaf3752ad6,Konstatin Kolinko,,,,2011-11-16,561,29,52,30,23,Global,0.068511198945982,52,759,Mark Emlyn David Thomas
CVE-2011-2526,20,NA,DoS Bypass,2011-7-14,2018-1-5,4.4,None,Local,Medium,Not required,Partial,Partial,Partial,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.19, when sendfile is enabled for the HTTP APR or HTTP NIO connector, does not validate certain request attributes, which allows local users to bypass intended file access restrictions or cause a denial of service (infinite loop or JVM crash) by leveraging an untrusted web application.",https://www.cvedetails.com/cve/CVE-2011-2526/,20110615,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2526
Tomcat provides support for sendfile with the HTTP APR connector. sendfile is used automatically for content served via the DefaultServlet and deployed web applications may use it directly via setting request attributes. These request attributes were not validated. When running under a security manager, this lack of validation allowed a malicious web application to do one or more of the following that would normally be prevented by a security manager:
return files to users that the security manager should make inaccessible
terminate (via a crash) the JVM
Additionally, these vulnerabilities only occur when all of the following are true:
untrusted web applications are being used
the SecurityManager is used to limit the untrusted web applications
the HTTP APR connector is used
sendfile is enabled for the connector (this is the default)
This was fixed in revision 1158244.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1146703.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 6.0.0-6.0.32
This was fixed in revisions 1145383, 1145489, 1145571, 1145694 and 1146005.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 7.0.0-7.0.18
Note: The issues below were fixed in Apache Tomcat 7.0.17 but the release votes for the 7.0.17 and 7.0.18 release candidates did not pass. Therefore, although users must download 7.0.19 to obtain a version that includes a fix for these issues, versions 7.0.17 and 7.0.18 are not included in the list of affected versions.",No,2011-7-7,2011-7-13,2011-9-22,2e69497fa7b1444632c6dadb64a4a82e18478ee6,java/org/apache/catalina/connector/LocalStrings.properties,"When running under a security manager and using sendfile, validate sendfile attributes to prevent sendfile being used to bypass the security manager.
Part of the fix for CVE-2011-2526",https://github.com/apache/tomcat/commit/2e69497fa7b1444632c6dadb64a4a82e18478ee6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-7-13,2,1,1,21,0,Global,0.28158844765343,78,277,Mladen Turk
CVE-2011-2526,20,NA,DoS Bypass,2011-7-14,2018-1-5,4.4,None,Local,Medium,Not required,Partial,Partial,Partial,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.19, when sendfile is enabled for the HTTP APR or HTTP NIO connector, does not validate certain request attributes, which allows local users to bypass intended file access restrictions or cause a denial of service (infinite loop or JVM crash) by leveraging an untrusted web application.",https://www.cvedetails.com/cve/CVE-2011-2526/,20110615,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2526
Tomcat provides support for sendfile with the HTTP APR connector. sendfile is used automatically for content served via the DefaultServlet and deployed web applications may use it directly via setting request attributes. These request attributes were not validated. When running under a security manager, this lack of validation allowed a malicious web application to do one or more of the following that would normally be prevented by a security manager:
return files to users that the security manager should make inaccessible
terminate (via a crash) the JVM
Additionally, these vulnerabilities only occur when all of the following are true:
untrusted web applications are being used
the SecurityManager is used to limit the untrusted web applications
the HTTP APR connector is used
sendfile is enabled for the connector (this is the default)
This was fixed in revision 1158244.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1146703.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 6.0.0-6.0.32
This was fixed in revisions 1145383, 1145489, 1145571, 1145694 and 1146005.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 7.0.0-7.0.18
Note: The issues below were fixed in Apache Tomcat 7.0.17 but the release votes for the 7.0.17 and 7.0.18 release candidates did not pass. Therefore, although users must download 7.0.19 to obtain a version that includes a fix for these issues, versions 7.0.17 and 7.0.18 are not included in the list of affected versions.",No,2011-7-7,2011-7-13,2011-9-22,2e69497fa7b1444632c6dadb64a4a82e18478ee6,java/org/apache/catalina/connector/Request.java,"When running under a security manager and using sendfile, validate sendfile attributes to prevent sendfile being used to bypass the security manager.
Part of the fix for CVE-2011-2526",https://github.com/apache/tomcat/commit/2e69497fa7b1444632c6dadb64a4a82e18478ee6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-7-13,2,20,20,21,0,Global,0.178009421669841,1776,9977,Mladen Turk
CVE-2006-7195,NA,NA,XSS,2007-5-9,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in implicit-objects.jsp in Apache Tomcat 5.0.0 through 5.0.30 and 5.5.0 through 5.5.17 allows remote attackers to inject arbitrary web script or HTML via certain header values.,https://www.cvedetails.com/cve/CVE-2006-7195/,20070418,"Yes. Fixed in Apache Tomcat 5.5.18, 5.0.SVN:
http://tomcat.apache.org/security-5.html","The implicit-objects.jsp in the examples webapp displayed a number of unfiltered header values. This enabled a XSS attack. These values are now filtered.
",No,,,Not released,2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,build.properties.default,"- Build the docs webapp.
- Docs webapps fixes.
- Small NSIS update to version 2.18.",https://github.com/apache/tomcat/commit/2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-8-3,1,3,6,164,33,Global,0.956521739130435,110,115,Remy Maucherat
CVE-2006-7195,NA,NA,XSS,2007-5-9,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in implicit-objects.jsp in Apache Tomcat 5.0.0 through 5.0.30 and 5.5.0 through 5.5.17 allows remote attackers to inject arbitrary web script or HTML via certain header values.,https://www.cvedetails.com/cve/CVE-2006-7195/,20070418,"Yes. Fixed in Apache Tomcat 5.5.18, 5.0.SVN:
http://tomcat.apache.org/security-5.html","The implicit-objects.jsp in the examples webapp displayed a number of unfiltered header values. This enabled a XSS attack. These values are now filtered.
",No,,,Not released,2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,build.xml,"- Build the docs webapp.
- Docs webapps fixes.
- Small NSIS update to version 2.18.",https://github.com/apache/tomcat/commit/2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-8-3,1,139,142,164,33,Global,0.574691640018273,1258,2189,Remy Maucherat
CVE-2006-7195,NA,NA,XSS,2007-5-9,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in implicit-objects.jsp in Apache Tomcat 5.0.0 through 5.0.30 and 5.5.0 through 5.5.17 allows remote attackers to inject arbitrary web script or HTML via certain header values.,https://www.cvedetails.com/cve/CVE-2006-7195/,20070418,"Yes. Fixed in Apache Tomcat 5.5.18, 5.0.SVN:
http://tomcat.apache.org/security-5.html","The implicit-objects.jsp in the examples webapp displayed a number of unfiltered header values. This enabled a XSS attack. These values are now filtered.
",No,,,Not released,2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,res/tomcat.nsi,"- Build the docs webapp.
- Docs webapps fixes.
- Small NSIS update to version 2.18.",https://github.com/apache/tomcat/commit/2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-8-3,1,1,4,164,33,Global,1,690,690,Remy Maucherat
CVE-2006-7195,NA,NA,XSS,2007-5-9,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in implicit-objects.jsp in Apache Tomcat 5.0.0 through 5.0.30 and 5.5.0 through 5.5.17 allows remote attackers to inject arbitrary web script or HTML via certain header values.,https://www.cvedetails.com/cve/CVE-2006-7195/,20070418,"Yes. Fixed in Apache Tomcat 5.5.18, 5.0.SVN:
http://tomcat.apache.org/security-5.html","The implicit-objects.jsp in the examples webapp displayed a number of unfiltered header values. This enabled a XSS attack. These values are now filtered.
",No,,,Not released,2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,webapps/docs/api/index.html,"- Build the docs webapp.
- Docs webapps fixes.
- Small NSIS update to version 2.18.",https://github.com/apache/tomcat/commit/2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-8-3,1,1,2,164,33,Global,1,19,19,Remy Maucherat
CVE-2006-7195,NA,NA,XSS,2007-5-9,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in implicit-objects.jsp in Apache Tomcat 5.0.0 through 5.0.30 and 5.5.0 through 5.5.17 allows remote attackers to inject arbitrary web script or HTML via certain header values.,https://www.cvedetails.com/cve/CVE-2006-7195/,20070418,"Yes. Fixed in Apache Tomcat 5.5.18, 5.0.SVN:
http://tomcat.apache.org/security-5.html","The implicit-objects.jsp in the examples webapp displayed a number of unfiltered header values. This enabled a XSS attack. These values are now filtered.
",No,,,Not released,2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,webapps/docs/appdev/project.xml,"- Build the docs webapp.
- Docs webapps fixes.
- Small NSIS update to version 2.18.",https://github.com/apache/tomcat/commit/2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-8-3,1,2,4,164,33,Global,1,33,33,Remy Maucherat
CVE-2006-7195,NA,NA,XSS,2007-5-9,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in implicit-objects.jsp in Apache Tomcat 5.0.0 through 5.0.30 and 5.5.0 through 5.5.17 allows remote attackers to inject arbitrary web script or HTML via certain header values.,https://www.cvedetails.com/cve/CVE-2006-7195/,20070418,"Yes. Fixed in Apache Tomcat 5.5.18, 5.0.SVN:
http://tomcat.apache.org/security-5.html","The implicit-objects.jsp in the examples webapp displayed a number of unfiltered header values. This enabled a XSS attack. These values are now filtered.
",No,,,Not released,2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,webapps/docs/architecture/project.xml,"- Build the docs webapp.
- Docs webapps fixes.
- Small NSIS update to version 2.18.",https://github.com/apache/tomcat/commit/2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-8-3,1,4,8,164,33,Global,1,34,34,Remy Maucherat
CVE-2006-7195,NA,NA,XSS,2007-5-9,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in implicit-objects.jsp in Apache Tomcat 5.0.0 through 5.0.30 and 5.5.0 through 5.5.17 allows remote attackers to inject arbitrary web script or HTML via certain header values.,https://www.cvedetails.com/cve/CVE-2006-7195/,20070418,"Yes. Fixed in Apache Tomcat 5.5.18, 5.0.SVN:
http://tomcat.apache.org/security-5.html","The implicit-objects.jsp in the examples webapp displayed a number of unfiltered header values. This enabled a XSS attack. These values are now filtered.
",No,,,Not released,2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,webapps/docs/config/project.xml,"- Build the docs webapp.
- Docs webapps fixes.
- Small NSIS update to version 2.18.",https://github.com/apache/tomcat/commit/2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-8-3,1,1,2,164,33,Global,1,48,48,Remy Maucherat
CVE-2006-7195,NA,NA,XSS,2007-5-9,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in implicit-objects.jsp in Apache Tomcat 5.0.0 through 5.0.30 and 5.5.0 through 5.5.17 allows remote attackers to inject arbitrary web script or HTML via certain header values.,https://www.cvedetails.com/cve/CVE-2006-7195/,20070418,"Yes. Fixed in Apache Tomcat 5.5.18, 5.0.SVN:
http://tomcat.apache.org/security-5.html","The implicit-objects.jsp in the examples webapp displayed a number of unfiltered header values. This enabled a XSS attack. These values are now filtered.
",No,,,Not released,2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,webapps/docs/funcspecs/project.xml,"- Build the docs webapp.
- Docs webapps fixes.
- Small NSIS update to version 2.18.",https://github.com/apache/tomcat/commit/2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-8-3,1,1,2,164,33,Global,1,41,41,Remy Maucherat
CVE-2006-7195,NA,NA,XSS,2007-5-9,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in implicit-objects.jsp in Apache Tomcat 5.0.0 through 5.0.30 and 5.5.0 through 5.5.17 allows remote attackers to inject arbitrary web script or HTML via certain header values.,https://www.cvedetails.com/cve/CVE-2006-7195/,20070418,"Yes. Fixed in Apache Tomcat 5.5.18, 5.0.SVN:
http://tomcat.apache.org/security-5.html","The implicit-objects.jsp in the examples webapp displayed a number of unfiltered header values. This enabled a XSS attack. These values are now filtered.
",No,,,Not released,2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,webapps/docs/project.xml,"- Build the docs webapp.
- Docs webapps fixes.
- Small NSIS update to version 2.18.",https://github.com/apache/tomcat/commit/2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-8-3,1,9,21,164,33,Global,1,93,93,Remy Maucherat
CVE-2006-7195,NA,NA,XSS,2007-5-9,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in implicit-objects.jsp in Apache Tomcat 5.0.0 through 5.0.30 and 5.5.0 through 5.5.17 allows remote attackers to inject arbitrary web script or HTML via certain header values.,https://www.cvedetails.com/cve/CVE-2006-7195/,20070418,"Yes. Fixed in Apache Tomcat 5.5.18, 5.0.SVN:
http://tomcat.apache.org/security-5.html","The implicit-objects.jsp in the examples webapp displayed a number of unfiltered header values. This enabled a XSS attack. These values are now filtered.
",No,,,Not released,2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,webapps/examples/jsp/jsp2/el/implicit-objects.jsp,"- Build the docs webapp.
- Docs webapps fixes.
- Small NSIS update to version 2.18.",https://github.com/apache/tomcat/commit/2ea3e25d8efae61a70cd77f9c6d75f81aa68ff5c,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-8-3,1,3,6,164,33,Global,1,94,94,Remy Maucherat
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,31e99502e2c602449a2f8835bd23ade772b77333,java/org/apache/catalina/webresources/AbstractFileResourceSet.java,Cache the value earlier. Followup to r1809684,https://github.com/apache/tomcat/commit/31e99502e2c602449a2f8835bd23ade772b77333,Konstatin Kolinko,,,,2017-9-26,7,2,4,2,2,Global,0.022784810126582,9,395,Mark Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,34b011beb2138f4cf268caaa3e9f1fb5d8e7f249,java/org/apache/tomcat/util/http/Parameters.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52384
Do not fail in Parameter parsing when debug logging is enabled.
Also do no flag extra '&' as errors.",https://github.com/apache/tomcat/commit/34b011beb2138f4cf268caaa3e9f1fb5d8e7f249,Konstatin Kolinko,,,,2011-12-26,561,27,33,28,6,Global,0.030720338983051,116,3776,Mark Emlyn David Thomas
CVE-2017-15706,358,NA,,2018-1-31,2018-5-31,5,None,Remote,Low,Not required,None,Partial,None,"As part of the fix for bug 61201, the documentation for Apache Tomcat 9.0.0.M22 to 9.0.1, 8.5.16 to 8.5.23, 8.0.45 to 8.0.47 and 7.0.79 to 7.0.82 included an updated description of the search algorithm used by the CGI Servlet to identify which script to execute. The update was not correct. As a result, some scripts may have failed to execute as expected and other scripts may have been executed unexpectedly. Note that the behaviour of the CGI servlet has remained unchanged in this regard. It is only the documentation of the behaviour that was wrong and has been corrected.",https://www.cvedetails.com/cve/CVE-2017-15706/,20171021,"Yes. Fixed in Apache Tomcat 7.0.84, 8.0.48, 8.5.24, 9.0.2:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Incorrectly documented CGI search algorithm CVE-2017-15706
Note: The issue below was fixed in Apache Tomcat 7.0.83 but the release vote for the 7.0.83 release candidate did not pass. Therefore, although users must download 7.0.84 to obtain a version that includes the fix for this issue, version 7.0.83 is not included in the list of affected versions.
As part of the fix for bug 61201, the description of the search algorithm used by the CGI Servlet to identify which script to execute was updated. The update was not correct. As a result, some scripts may have failed to execute as expected and other scripts may have been executed unexpectedly. Note that the behaviour of the CGI servlet has remained unchanged in this regard. It is only the documentation of the behaviour that was wrong and has been corrected.
This was fixed in revision 1814828.
This issue was reported to the Apache Tomcat Security Team by Jan Michael Greiner on 17 September 2017 and made public on 31 January 2018.
Affects: 7.0.79 to 7.0.82
This was fixed in revision 1814827.
This issue was reported to the Apache Tomcat Security Team by Jan Michael Greiner on 17 September 2017 and made public on 31 January 2018.
Affects: 8.0.45 to 8.0.47
This was fixed in revision 1814825.
This issue was reported to the Apache Tomcat Security Team by Jan Michael Greiner on 17 September 2017 and made public on 31 January 2018.
Affects: 9.0.0.M22 to 9.0.1",No,2017-9-17,2018-1-31,2018-1-24,36c24025e23612ec4e238a2bd7bccaf53c31dabb,webapps/docs/cgi-howto.xml,Correct the description of how the CGI servlet maps a request to a script in the CGI How-To.,https://github.com/apache/tomcat/commit/36c24025e23612ec4e238a2bd7bccaf53c31dabb,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-11-10,1,10,22,14,12,Global,0.293877551020408,72,245,Remy Maucherat
CVE-2017-15706,358,NA,,2018-1-31,2018-5-31,5,None,Remote,Low,Not required,None,Partial,None,"As part of the fix for bug 61201, the documentation for Apache Tomcat 9.0.0.M22 to 9.0.1, 8.5.16 to 8.5.23, 8.0.45 to 8.0.47 and 7.0.79 to 7.0.82 included an updated description of the search algorithm used by the CGI Servlet to identify which script to execute. The update was not correct. As a result, some scripts may have failed to execute as expected and other scripts may have been executed unexpectedly. Note that the behaviour of the CGI servlet has remained unchanged in this regard. It is only the documentation of the behaviour that was wrong and has been corrected.",https://www.cvedetails.com/cve/CVE-2017-15706/,20171021,"Yes. Fixed in Apache Tomcat 7.0.84, 8.0.48, 8.5.24, 9.0.2:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Incorrectly documented CGI search algorithm CVE-2017-15706
Note: The issue below was fixed in Apache Tomcat 7.0.83 but the release vote for the 7.0.83 release candidate did not pass. Therefore, although users must download 7.0.84 to obtain a version that includes the fix for this issue, version 7.0.83 is not included in the list of affected versions.
As part of the fix for bug 61201, the description of the search algorithm used by the CGI Servlet to identify which script to execute was updated. The update was not correct. As a result, some scripts may have failed to execute as expected and other scripts may have been executed unexpectedly. Note that the behaviour of the CGI servlet has remained unchanged in this regard. It is only the documentation of the behaviour that was wrong and has been corrected.
This was fixed in revision 1814828.
This issue was reported to the Apache Tomcat Security Team by Jan Michael Greiner on 17 September 2017 and made public on 31 January 2018.
Affects: 7.0.79 to 7.0.82
This was fixed in revision 1814827.
This issue was reported to the Apache Tomcat Security Team by Jan Michael Greiner on 17 September 2017 and made public on 31 January 2018.
Affects: 8.0.45 to 8.0.47
This was fixed in revision 1814825.
This issue was reported to the Apache Tomcat Security Team by Jan Michael Greiner on 17 September 2017 and made public on 31 January 2018.
Affects: 9.0.0.M22 to 9.0.1",No,2017-9-17,2018-1-31,2018-1-24,36c24025e23612ec4e238a2bd7bccaf53c31dabb,webapps/docs/changelog.xml,Correct the description of how the CGI servlet maps a request to a script in the CGI How-To.,https://github.com/apache/tomcat/commit/36c24025e23612ec4e238a2bd7bccaf53c31dabb,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-11-10,1,4,4,14,12,Global,0.127415270406216,3673,28827,Mark Emlyn David Thomas
CVE-2013-2067,287,NA,,2013-6-1,2016-11-28,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"java/org/apache/catalina/authenticator/FormAuthenticator.java in the form authentication feature in Apache Tomcat 6.0.21 through 6.0.36 and 7.x before 7.0.33 does not properly handle the relationships between authentication requirements and sessions, which allows remote attackers to inject a request into a session by sending this request during completion of the login form, a variant of a session fixation attack.",https://www.cvedetails.com/cve/CVE-2013-2067/,20130219,"Yes. Fixed in Apache Tomcat 6.0.37, 7.0.33: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Session fixation CVE-2013-2067
FORM authentication associates the most recent request requiring authentication with the current session. By repeatedly sending a request for an authenticated resource while the victim is completing the login form, an attacker could inject a request that would be executed using the victim's credentials.
Note that the option to change session ID on authentication was added in Tomcat 6.0.21. In earlier 6.0.x releases, prevention of session fixation was an application responsibility. This vulnerability represents a bug in Tomcat's session fixation protection that was added in 6.0.21. Hence, only versions 6.0.21 onwards are listed as vulnerable.
This was fixed in revision 1417891.
This issue was identified by the Tomcat security team on 15 Oct 2012 and made public on 10 May 2013.
Affects: 6.0.21-6.0.36
This was fixed in revision 1408044.
This issue was identified by the Tomcat security team on 15 Oct 2012 and made public on 10 May 2013.
Affects: 7.0.0-7.0.32",No,2012-10-15,2013-5-10,2013-5-3,39c42634909a70cc5ef1d414bb58efc01ddca055,java/org/apache/catalina/authenticator/FormAuthenticator.java,"In FormAuthenticator: If it is configured to change Session IDs,
do the change before displaying the login form.",https://github.com/apache/tomcat/commit/39c42634909a70cc5ef1d414bb58efc01ddca055,Konstatin Kolinko,,,,2012-11-11,1,10,10,10,0,Local,0.010059442158208,22,2187,Mladen Turk
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,3acfd4f3bd56287ae18c1b7e27564dede99acc37,java/org/apache/catalina/websocket/StreamHandler.java,"Rename for consistency. No functional change.
Simple testing of WebSocket (the examples) works for BIO, NIO and APR",https://github.com/apache/tomcat/commit/3acfd4f3bd56287ae18c1b7e27564dede99acc37,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,1,2,20,20,Global,0.997308209959623,1482,1486,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,3acfd4f3bd56287ae18c1b7e27564dede99acc37,java/org/apache/catalina/websocket/StreamHandler.java,"Rename for consistency. No functional change.
Simple testing of WebSocket (the examples) works for BIO, NIO and APR",https://github.com/apache/tomcat/commit/3acfd4f3bd56287ae18c1b7e27564dede99acc37,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,1,2,20,20,Global,0.997308209959623,1482,1486,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,3acfd4f3bd56287ae18c1b7e27564dede99acc37,test/org/apache/catalina/websocket/TestWebSocket.java,"Rename for consistency. No functional change.
Simple testing of WebSocket (the examples) works for BIO, NIO and APR",https://github.com/apache/tomcat/commit/3acfd4f3bd56287ae18c1b7e27564dede99acc37,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,1,2,20,20,Global,0.607,607,1000,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,3acfd4f3bd56287ae18c1b7e27564dede99acc37,webapps/examples/WEB-INF/classes/websocket/chat/ChatWebSocketServlet.java,"Rename for consistency. No functional change.
Simple testing of WebSocket (the examples) works for BIO, NIO and APR",https://github.com/apache/tomcat/commit/3acfd4f3bd56287ae18c1b7e27564dede99acc37,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,6,12,20,20,Global,1,123,123,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,3acfd4f3bd56287ae18c1b7e27564dede99acc37,webapps/examples/WEB-INF/classes/websocket/echo/EchoMessage.java,"Rename for consistency. No functional change.
Simple testing of WebSocket (the examples) works for BIO, NIO and APR",https://github.com/apache/tomcat/commit/3acfd4f3bd56287ae18c1b7e27564dede99acc37,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,2,4,20,20,Global,0.385593220338983,91,236,Konstantin Kolinko
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,3acfd4f3bd56287ae18c1b7e27564dede99acc37,webapps/examples/WEB-INF/classes/websocket/echo/EchoStream.java,"Rename for consistency. No functional change.
Simple testing of WebSocket (the examples) works for BIO, NIO and APR",https://github.com/apache/tomcat/commit/3acfd4f3bd56287ae18c1b7e27564dede99acc37,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,2,4,20,20,Global,0.412280701754386,94,228,Konstantin Kolinko
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,3acfd4f3bd56287ae18c1b7e27564dede99acc37,webapps/examples/WEB-INF/classes/websocket/snake/SnakeWebSocketServlet.java,"Rename for consistency. No functional change.
Simple testing of WebSocket (the examples) works for BIO, NIO and APR",https://github.com/apache/tomcat/commit/3acfd4f3bd56287ae18c1b7e27564dede99acc37,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,7,14,20,20,Global,1,249,249,Mark Emlyn David Thomas
CVE-2016-6816,20,NA,XSS +Info,2017-3-20,2018-6-8,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The code in Apache Tomcat 9.0.0.M1 to 9.0.0.M11, 8.5.0 to 8.5.6, 8.0.0.RC1 to 8.0.38, 7.0.0 to 7.0.72, and 6.0.0 to 6.0.47 that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.",https://www.cvedetails.com/cve/CVE-2016-6816/,20160812,"Yes. Fixed in Apache Tomcat 8.0.39, 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2016-6816
The code that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.
This was fixed in revision 1767653.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 8.0.0.RC1 to 8.0.38
This was fixed in revision 1767645.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1767641.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-11,2016-11-22,2016-11-14,3b79161ec6fb10f15527051cef685474d99bd311,java/org/apache/coyote/http11/Http11InputBuffer.java,Remove check that slows down valid case,https://github.com/apache/tomcat/commit/3b79161ec6fb10f15527051cef685474d99bd311,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-11-2,1,1,2,1,1,Local,0.497294860234445,1103,2218,Mark Thomas
CVE-2012-4534,399,NA,DoS,2012-12-19,2017-9-18,2.6,None,Remote,High,Not required,None,None,Partial,"org/apache/tomcat/util/net/NioEndpoint.java in Apache Tomcat 6.x before 6.0.36 and 7.x before 7.0.28, when the NIO connector is used in conjunction with sendfile and HTTPS, allows remote attackers to cause a denial of service (infinite loop) by terminating the connection during the reading of a response.",https://www.cvedetails.com/cve/CVE-2012-4534/,20120821,"Yes. Fixed in Apache Tomcat 6.0.36, 7.0.28: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-4534
When using the NIO connector with sendfile and HTTPS enabled, if a client breaks the connection while reading the response an infinite loop is entered leading to a denial of service. This was originally reported as bug 52858.
This was fixed in revision 1372035.
The security implications of this bug were reported to the Tomcat security team by Arun Neelicattu of the Red Hat Security Response Team on 3 October 2012 and made public on 4 December 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1340218.
The security implications of this bug were reported to the Tomcat security team by Arun Neelicattu of the Red Hat Security Response Team on 3 October 2012 and made public on 4 December 2012.
Affects: 7.0.0-7.0.27",No,2012-10-3,2012-12-4,2012-10-19,3c5c41eb19de8ee35d23ca9c74fb258b2f059af8,java/org/apache/tomcat/util/net/NioEndpoint.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52858
Fix high CPU load caused by tight(ish) loop when client doesn't read any data",https://github.com/apache/tomcat/commit/3c5c41eb19de8ee35d23ca9c74fb258b2f059af8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-3-15,65,1,2,1,1,Local,0.055570026916732,1280,23034,Filip Hanik
CVE-2009-2693,22,NA,Directory Traversal,2010-1-28,2017-9-18,5.8,None,Remote,Medium,Not required,None,Partial,Partial,"Directory traversal vulnerability in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20 allows remote attackers to create or overwrite arbitrary files via a .. (dot dot) in an entry in a WAR file, as demonstrated by a ../../bin/catalina.bat entry.",https://www.cvedetails.com/cve/CVE-2009-2693/,20090805,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Arbitrary file deletion and/or alteration on deploy CVE-2009-2693
When deploying WAR files, the WAR files were not checked for directory traversal attempts. This allows an attacker to create arbitrary content outside of the web root by including entries such as ../../bin/catalina.sh in the WAR.
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/loader/LocalStrings.properties,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,2,2,260,30,Global,0.265625,34,128,Mladen Turk
CVE-2009-2902,22,NA,Directory Traversal,2010-1-28,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Directory traversal vulnerability in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20 allows remote attackers to delete work-directory files via directory traversal sequences in a WAR filename, as demonstrated by the ...war filename.",https://www.cvedetails.com/cve/CVE-2009-2902/,20091005,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Unexpected file deletion in work directory CVE-2009-2902
When deploying WAR files, the WAR file names were not checked for directory traversal attempts. For example, deploying and undeploying ...war allows an attacker to cause the deletion of the current contents of the host's work directory which may cause problems for currently running applications.
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/loader/LocalStrings.properties,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,2,2,260,30,Global,0.265625,34,128,Mladen Turk
CVE-2009-2901,264,NA,Bypass +Info,2010-1-28,2017-8-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The autodeployment process in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20, when autoDeploy is enabled, deploys appBase files that remain from a failed undeploy, which might allow remote attackers to bypass intended authentication requirements via HTTP requests.",https://www.cvedetails.com/cve/CVE-2009-2901/,20090820,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Insecure partial deploy after failed undeploy CVE-2009-2901
By default, Tomcat automatically deploys any directories placed in a host's appBase. This behaviour is controlled by the autoDeploy attribute of a host which defaults to true. After a failed undeploy, the remaining files will be deployed as a result of the autodeployment process. Depending on circumstances, files normally protected by one or more security constraints may be deployed without those security constraints, making them accessible without authentication. This issue only affects Windows platforms
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28 (Windows only)
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20 (Windows only)",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/loader/LocalStrings.properties,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,2,2,260,30,Global,0.265625,34,128,Mladen Turk
CVE-2009-2901,264,NA,Bypass +Info,2010-1-28,2017-8-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The autodeployment process in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20, when autoDeploy is enabled, deploys appBase files that remain from a failed undeploy, which might allow remote attackers to bypass intended authentication requirements via HTTP requests.",https://www.cvedetails.com/cve/CVE-2009-2901/,20090820,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Insecure partial deploy after failed undeploy CVE-2009-2901
By default, Tomcat automatically deploys any directories placed in a host's appBase. This behaviour is controlled by the autoDeploy attribute of a host which defaults to true. After a failed undeploy, the remaining files will be deployed as a result of the autodeployment process. Depending on circumstances, files normally protected by one or more security constraints may be deployed without those security constraints, making them accessible without authentication. This issue only affects Windows platforms
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28 (Windows only)
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20 (Windows only)",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/loader/WebappClassLoader.java,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,25,26,260,30,Global,0.156293543892243,1346,8612,Mladen Turk
CVE-2009-2693,22,NA,Directory Traversal,2010-1-28,2017-9-18,5.8,None,Remote,Medium,Not required,None,Partial,Partial,"Directory traversal vulnerability in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20 allows remote attackers to create or overwrite arbitrary files via a .. (dot dot) in an entry in a WAR file, as demonstrated by a ../../bin/catalina.bat entry.",https://www.cvedetails.com/cve/CVE-2009-2693/,20090805,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Arbitrary file deletion and/or alteration on deploy CVE-2009-2693
When deploying WAR files, the WAR files were not checked for directory traversal attempts. This allows an attacker to create arbitrary content outside of the web root by including entries such as ../../bin/catalina.sh in the WAR.
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/loader/WebappClassLoader.java,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,25,26,260,30,Global,0.156293543892243,1346,8612,Mladen Turk
CVE-2009-2902,22,NA,Directory Traversal,2010-1-28,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Directory traversal vulnerability in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20 allows remote attackers to delete work-directory files via directory traversal sequences in a WAR filename, as demonstrated by the ...war filename.",https://www.cvedetails.com/cve/CVE-2009-2902/,20091005,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Unexpected file deletion in work directory CVE-2009-2902
When deploying WAR files, the WAR file names were not checked for directory traversal attempts. For example, deploying and undeploying ...war allows an attacker to cause the deletion of the current contents of the host's work directory which may cause problems for currently running applications.
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/loader/WebappClassLoader.java,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,25,26,260,30,Global,0.156293543892243,1346,8612,Mladen Turk
CVE-2009-2901,264,NA,Bypass +Info,2010-1-28,2017-8-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The autodeployment process in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20, when autoDeploy is enabled, deploys appBase files that remain from a failed undeploy, which might allow remote attackers to bypass intended authentication requirements via HTTP requests.",https://www.cvedetails.com/cve/CVE-2009-2901/,20090820,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Insecure partial deploy after failed undeploy CVE-2009-2901
By default, Tomcat automatically deploys any directories placed in a host's appBase. This behaviour is controlled by the autoDeploy attribute of a host which defaults to true. After a failed undeploy, the remaining files will be deployed as a result of the autodeployment process. Depending on circumstances, files normally protected by one or more security constraints may be deployed without those security constraints, making them accessible without authentication. This issue only affects Windows platforms
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28 (Windows only)
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20 (Windows only)",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/startup/ContextConfig.java,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,17,28,260,30,Global,0.292583120204604,1716,5865,Mladen Turk
CVE-2009-2902,22,NA,Directory Traversal,2010-1-28,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Directory traversal vulnerability in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20 allows remote attackers to delete work-directory files via directory traversal sequences in a WAR filename, as demonstrated by the ...war filename.",https://www.cvedetails.com/cve/CVE-2009-2902/,20091005,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Unexpected file deletion in work directory CVE-2009-2902
When deploying WAR files, the WAR file names were not checked for directory traversal attempts. For example, deploying and undeploying ...war allows an attacker to cause the deletion of the current contents of the host's work directory which may cause problems for currently running applications.
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/startup/ContextConfig.java,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,17,28,260,30,Global,0.292583120204604,1716,5865,Mladen Turk
CVE-2009-2693,22,NA,Directory Traversal,2010-1-28,2017-9-18,5.8,None,Remote,Medium,Not required,None,Partial,Partial,"Directory traversal vulnerability in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20 allows remote attackers to create or overwrite arbitrary files via a .. (dot dot) in an entry in a WAR file, as demonstrated by a ../../bin/catalina.bat entry.",https://www.cvedetails.com/cve/CVE-2009-2693/,20090805,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Arbitrary file deletion and/or alteration on deploy CVE-2009-2693
When deploying WAR files, the WAR files were not checked for directory traversal attempts. This allows an attacker to create arbitrary content outside of the web root by including entries such as ../../bin/catalina.sh in the WAR.
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/startup/ContextConfig.java,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,17,28,260,30,Global,0.292583120204604,1716,5865,Mladen Turk
CVE-2009-2902,22,NA,Directory Traversal,2010-1-28,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Directory traversal vulnerability in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20 allows remote attackers to delete work-directory files via directory traversal sequences in a WAR filename, as demonstrated by the ...war filename.",https://www.cvedetails.com/cve/CVE-2009-2902/,20091005,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Unexpected file deletion in work directory CVE-2009-2902
When deploying WAR files, the WAR file names were not checked for directory traversal attempts. For example, deploying and undeploying ...war allows an attacker to cause the deletion of the current contents of the host's work directory which may cause problems for currently running applications.
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/startup/ExpandWar.java,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,158,173,260,30,Global,0.190667739340306,237,1243,Mladen Turk
CVE-2009-2901,264,NA,Bypass +Info,2010-1-28,2017-8-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The autodeployment process in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20, when autoDeploy is enabled, deploys appBase files that remain from a failed undeploy, which might allow remote attackers to bypass intended authentication requirements via HTTP requests.",https://www.cvedetails.com/cve/CVE-2009-2901/,20090820,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Insecure partial deploy after failed undeploy CVE-2009-2901
By default, Tomcat automatically deploys any directories placed in a host's appBase. This behaviour is controlled by the autoDeploy attribute of a host which defaults to true. After a failed undeploy, the remaining files will be deployed as a result of the autodeployment process. Depending on circumstances, files normally protected by one or more security constraints may be deployed without those security constraints, making them accessible without authentication. This issue only affects Windows platforms
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28 (Windows only)
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20 (Windows only)",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/startup/ExpandWar.java,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,158,173,260,30,Global,0.190667739340306,237,1243,Mladen Turk
CVE-2009-2693,22,NA,Directory Traversal,2010-1-28,2017-9-18,5.8,None,Remote,Medium,Not required,None,Partial,Partial,"Directory traversal vulnerability in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20 allows remote attackers to create or overwrite arbitrary files via a .. (dot dot) in an entry in a WAR file, as demonstrated by a ../../bin/catalina.bat entry.",https://www.cvedetails.com/cve/CVE-2009-2693/,20090805,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Arbitrary file deletion and/or alteration on deploy CVE-2009-2693
When deploying WAR files, the WAR files were not checked for directory traversal attempts. This allows an attacker to create arbitrary content outside of the web root by including entries such as ../../bin/catalina.sh in the WAR.
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/startup/ExpandWar.java,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,158,173,260,30,Global,0.190667739340306,237,1243,Mladen Turk
CVE-2009-2693,22,NA,Directory Traversal,2010-1-28,2017-9-18,5.8,None,Remote,Medium,Not required,None,Partial,Partial,"Directory traversal vulnerability in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20 allows remote attackers to create or overwrite arbitrary files via a .. (dot dot) in an entry in a WAR file, as demonstrated by a ../../bin/catalina.bat entry.",https://www.cvedetails.com/cve/CVE-2009-2693/,20090805,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Arbitrary file deletion and/or alteration on deploy CVE-2009-2693
When deploying WAR files, the WAR files were not checked for directory traversal attempts. This allows an attacker to create arbitrary content outside of the web root by including entries such as ../../bin/catalina.sh in the WAR.
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/startup/HostConfig.java,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,55,58,260,30,Global,0.120112945264987,553,4604,Mladen Turk
CVE-2009-2902,22,NA,Directory Traversal,2010-1-28,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Directory traversal vulnerability in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20 allows remote attackers to delete work-directory files via directory traversal sequences in a WAR filename, as demonstrated by the ...war filename.",https://www.cvedetails.com/cve/CVE-2009-2902/,20091005,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Unexpected file deletion in work directory CVE-2009-2902
When deploying WAR files, the WAR file names were not checked for directory traversal attempts. For example, deploying and undeploying ...war allows an attacker to cause the deletion of the current contents of the host's work directory which may cause problems for currently running applications.
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/startup/HostConfig.java,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,55,58,260,30,Global,0.120112945264987,553,4604,Mladen Turk
CVE-2009-2901,264,NA,Bypass +Info,2010-1-28,2017-8-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The autodeployment process in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20, when autoDeploy is enabled, deploys appBase files that remain from a failed undeploy, which might allow remote attackers to bypass intended authentication requirements via HTTP requests.",https://www.cvedetails.com/cve/CVE-2009-2901/,20090820,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Insecure partial deploy after failed undeploy CVE-2009-2901
By default, Tomcat automatically deploys any directories placed in a host's appBase. This behaviour is controlled by the autoDeploy attribute of a host which defaults to true. After a failed undeploy, the remaining files will be deployed as a result of the autodeployment process. Depending on circumstances, files normally protected by one or more security constraints may be deployed without those security constraints, making them accessible without authentication. This issue only affects Windows platforms
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28 (Windows only)
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20 (Windows only)",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/startup/HostConfig.java,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,55,58,260,30,Global,0.120112945264987,553,4604,Mladen Turk
CVE-2009-2901,264,NA,Bypass +Info,2010-1-28,2017-8-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The autodeployment process in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20, when autoDeploy is enabled, deploys appBase files that remain from a failed undeploy, which might allow remote attackers to bypass intended authentication requirements via HTTP requests.",https://www.cvedetails.com/cve/CVE-2009-2901/,20090820,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Insecure partial deploy after failed undeploy CVE-2009-2901
By default, Tomcat automatically deploys any directories placed in a host's appBase. This behaviour is controlled by the autoDeploy attribute of a host which defaults to true. After a failed undeploy, the remaining files will be deployed as a result of the autodeployment process. Depending on circumstances, files normally protected by one or more security constraints may be deployed without those security constraints, making them accessible without authentication. This issue only affects Windows platforms
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28 (Windows only)
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20 (Windows only)",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/startup/LocalStrings.properties,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,3,3,260,30,Global,0.414572864321608,165,398,Mark Emlyn David Thomas
CVE-2009-2693,22,NA,Directory Traversal,2010-1-28,2017-9-18,5.8,None,Remote,Medium,Not required,None,Partial,Partial,"Directory traversal vulnerability in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20 allows remote attackers to create or overwrite arbitrary files via a .. (dot dot) in an entry in a WAR file, as demonstrated by a ../../bin/catalina.bat entry.",https://www.cvedetails.com/cve/CVE-2009-2693/,20090805,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Arbitrary file deletion and/or alteration on deploy CVE-2009-2693
When deploying WAR files, the WAR files were not checked for directory traversal attempts. This allows an attacker to create arbitrary content outside of the web root by including entries such as ../../bin/catalina.sh in the WAR.
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/startup/LocalStrings.properties,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,3,3,260,30,Global,0.414572864321608,165,398,Mark Emlyn David Thomas
CVE-2009-2902,22,NA,Directory Traversal,2010-1-28,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"Directory traversal vulnerability in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20 allows remote attackers to delete work-directory files via directory traversal sequences in a WAR filename, as demonstrated by the ...war filename.",https://www.cvedetails.com/cve/CVE-2009-2902/,20091005,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Unexpected file deletion in work directory CVE-2009-2902
When deploying WAR files, the WAR file names were not checked for directory traversal attempts. For example, deploying and undeploying ...war allows an attacker to cause the deletion of the current contents of the host's work directory which may cause problems for currently running applications.
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20",No,2009-7-30,2010-3-1,2010-4-20,3e1010b1a2f648581fac3d68afbf18f2979f6bf6,java/org/apache/catalina/startup/LocalStrings.properties,"Various related (un)deploy improvements including:
 - better handling of failed (un)deployment
 - adding checking for valid zip file entries that don't make sense in a WAR file
 - improved validation of WAR file names
 - make sure error messages match the action
 - the return from File.getCanonicalPath() may or may not return a final separator for directories

This fixes CVE-2009-2693, CVE-2009-2901 & CVE-2009-2902
",https://github.com/apache/tomcat/commit/3e1010b1a2f648581fac3d68afbf18f2979f6bf6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,3,3,260,30,Global,0.414572864321608,165,398,Mark Emlyn David Thomas
CVE-2018-1305,284,NA,,2018-2-23,2018-8-29,4,None,Remote,Low,Single system,Partial,None,None,"Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.",https://www.cvedetails.com/cve/CVE-2018-1305/,20171207,"Yes. Fixed in Apache Tomcat 7.0.85, 8.0.50, 8.5.28, 9.0.5:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security constraint annotations applied too late CVE-2018-1305
Security constraints defined by annotations of Servlets were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.
This was fixed in revisions 1823322 and 1824360.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 7.0.0 to 7.0.84
This was fixed in revisions 1823314 and 1824358.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 8.5.0 to 8.5.27
This was fixed in revisions 1823310 and 1824323.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 9.0.0.M1 to 9.0.4",No,2018-2-1,2018-2-23,2018-2-13,3e54b2a6314eda11617ff7a7b899c251e222b1a1,java/org/apache/catalina/authenticator/AuthenticatorBase.java,"Process all ServletSecurity annotations at web application start rather than at servlet load time to ensure constraints are applied
consistently.",https://github.com/apache/tomcat/commit/3e54b2a6314eda11617ff7a7b899c251e222b1a1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2018-2-6,10,0,8,80,78,Global,0.258258841818888,1329,5146,Mladen Turk
CVE-2018-1305,284,NA,,2018-2-23,2018-8-29,4,None,Remote,Low,Single system,Partial,None,None,"Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.",https://www.cvedetails.com/cve/CVE-2018-1305/,20171207,"Yes. Fixed in Apache Tomcat 7.0.85, 8.0.50, 8.5.28, 9.0.5:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security constraint annotations applied too late CVE-2018-1305
Security constraints defined by annotations of Servlets were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.
This was fixed in revisions 1823322 and 1824360.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 7.0.0 to 7.0.84
This was fixed in revisions 1823314 and 1824358.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 8.5.0 to 8.5.27
This was fixed in revisions 1823310 and 1824323.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 9.0.0.M1 to 9.0.4",No,2018-2-1,2018-2-23,2018-2-13,3e54b2a6314eda11617ff7a7b899c251e222b1a1,java/org/apache/catalina/core/ApplicationContext.java,"Process all ServletSecurity annotations at web application start rather than at servlet load time to ensure constraints are applied
consistently.",https://github.com/apache/tomcat/commit/3e54b2a6314eda11617ff7a7b899c251e222b1a1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2018-2-6,10,17,18,80,78,Global,0.11511811023622,731,6350,Mark Emlyn David Thomas
CVE-2018-1305,284,NA,,2018-2-23,2018-8-29,4,None,Remote,Low,Single system,Partial,None,None,"Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.",https://www.cvedetails.com/cve/CVE-2018-1305/,20171207,"Yes. Fixed in Apache Tomcat 7.0.85, 8.0.50, 8.5.28, 9.0.5:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security constraint annotations applied too late CVE-2018-1305
Security constraints defined by annotations of Servlets were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.
This was fixed in revisions 1823322 and 1824360.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 7.0.0 to 7.0.84
This was fixed in revisions 1823314 and 1824358.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 8.5.0 to 8.5.27
This was fixed in revisions 1823310 and 1824323.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 9.0.0.M1 to 9.0.4",No,2018-2-1,2018-2-23,2018-2-13,3e54b2a6314eda11617ff7a7b899c251e222b1a1,java/org/apache/catalina/core/ApplicationServletRegistration.java,"Process all ServletSecurity annotations at web application start rather than at servlet load time to ensure constraints are applied
consistently.",https://github.com/apache/tomcat/commit/3e54b2a6314eda11617ff7a7b899c251e222b1a1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2018-2-6,10,7,7,80,78,Global,0.033653846153846,14,416,Mark Emlyn David Thomas
CVE-2018-1305,284,NA,,2018-2-23,2018-8-29,4,None,Remote,Low,Single system,Partial,None,None,"Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.",https://www.cvedetails.com/cve/CVE-2018-1305/,20171207,"Yes. Fixed in Apache Tomcat 7.0.85, 8.0.50, 8.5.28, 9.0.5:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security constraint annotations applied too late CVE-2018-1305
Security constraints defined by annotations of Servlets were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.
This was fixed in revisions 1823322 and 1824360.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 7.0.0 to 7.0.84
This was fixed in revisions 1823314 and 1824358.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 8.5.0 to 8.5.27
This was fixed in revisions 1823310 and 1824323.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 9.0.0.M1 to 9.0.4",No,2018-2-1,2018-2-23,2018-2-13,3e54b2a6314eda11617ff7a7b899c251e222b1a1,java/org/apache/catalina/core/StandardContext.java,"Process all ServletSecurity annotations at web application start rather than at servlet load time to ensure constraints are applied
consistently.",https://github.com/apache/tomcat/commit/3e54b2a6314eda11617ff7a7b899c251e222b1a1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2018-2-6,10,18,30,80,78,Global,0.034450720975175,927,26908,Mladen Turk
CVE-2018-1305,284,NA,,2018-2-23,2018-8-29,4,None,Remote,Low,Single system,Partial,None,None,"Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.",https://www.cvedetails.com/cve/CVE-2018-1305/,20171207,"Yes. Fixed in Apache Tomcat 7.0.85, 8.0.50, 8.5.28, 9.0.5:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security constraint annotations applied too late CVE-2018-1305
Security constraints defined by annotations of Servlets were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.
This was fixed in revisions 1823322 and 1824360.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 7.0.0 to 7.0.84
This was fixed in revisions 1823314 and 1824358.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 8.5.0 to 8.5.27
This was fixed in revisions 1823310 and 1824323.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 9.0.0.M1 to 9.0.4",No,2018-2-1,2018-2-23,2018-2-13,3e54b2a6314eda11617ff7a7b899c251e222b1a1,java/org/apache/catalina/core/StandardWrapper.java,"Process all ServletSecurity annotations at web application start rather than at servlet load time to ensure constraints are applied
consistently.",https://github.com/apache/tomcat/commit/3e54b2a6314eda11617ff7a7b899c251e222b1a1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2018-2-6,10,2,43,80,78,Global,0.043008197695141,362,8417,Mladen Turk
CVE-2018-1305,284,NA,,2018-2-23,2018-8-29,4,None,Remote,Low,Single system,Partial,None,None,"Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.",https://www.cvedetails.com/cve/CVE-2018-1305/,20171207,"Yes. Fixed in Apache Tomcat 7.0.85, 8.0.50, 8.5.28, 9.0.5:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security constraint annotations applied too late CVE-2018-1305
Security constraints defined by annotations of Servlets were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.
This was fixed in revisions 1823322 and 1824360.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 7.0.0 to 7.0.84
This was fixed in revisions 1823314 and 1824358.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 8.5.0 to 8.5.27
This was fixed in revisions 1823310 and 1824323.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 9.0.0.M1 to 9.0.4",No,2018-2-1,2018-2-23,2018-2-13,3e54b2a6314eda11617ff7a7b899c251e222b1a1,java/org/apache/catalina/startup/Tomcat.java,"Process all ServletSecurity annotations at web application start rather than at servlet load time to ensure constraints are applied
consistently.",https://github.com/apache/tomcat/commit/3e54b2a6314eda11617ff7a7b899c251e222b1a1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2018-2-6,10,3,3,80,78,Global,0.116169544740973,370,3185,Mark Emlyn David Thomas
CVE-2018-1305,284,NA,,2018-2-23,2018-8-29,4,None,Remote,Low,Single system,Partial,None,None,"Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.",https://www.cvedetails.com/cve/CVE-2018-1305/,20171207,"Yes. Fixed in Apache Tomcat 7.0.85, 8.0.50, 8.5.28, 9.0.5:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security constraint annotations applied too late CVE-2018-1305
Security constraints defined by annotations of Servlets were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.
This was fixed in revisions 1823322 and 1824360.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 7.0.0 to 7.0.84
This was fixed in revisions 1823314 and 1824358.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 8.5.0 to 8.5.27
This was fixed in revisions 1823310 and 1824323.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 9.0.0.M1 to 9.0.4",No,2018-2-1,2018-2-23,2018-2-13,3e54b2a6314eda11617ff7a7b899c251e222b1a1,java/org/apache/catalina/startup/WebAnnotationSet.java,"Process all ServletSecurity annotations at web application start rather than at servlet load time to ensure constraints are applied
consistently.",https://github.com/apache/tomcat/commit/3e54b2a6314eda11617ff7a7b899c251e222b1a1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2018-2-6,10,14,17,80,78,Global,0.062258687258687,129,2072,Mladen Turk
CVE-2018-1305,284,NA,,2018-2-23,2018-8-29,4,None,Remote,Low,Single system,Partial,None,None,"Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.",https://www.cvedetails.com/cve/CVE-2018-1305/,20171207,"Yes. Fixed in Apache Tomcat 7.0.85, 8.0.50, 8.5.28, 9.0.5:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security constraint annotations applied too late CVE-2018-1305
Security constraints defined by annotations of Servlets were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.
This was fixed in revisions 1823322 and 1824360.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 7.0.0 to 7.0.84
This was fixed in revisions 1823314 and 1824358.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 8.5.0 to 8.5.27
This was fixed in revisions 1823310 and 1824323.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 9.0.0.M1 to 9.0.4",No,2018-2-1,2018-2-23,2018-2-13,3e54b2a6314eda11617ff7a7b899c251e222b1a1,java/org/apache/catalina/Wrapper.java,"Process all ServletSecurity annotations at web application start rather than at servlet load time to ensure constraints are applied
consistently.",https://github.com/apache/tomcat/commit/3e54b2a6314eda11617ff7a7b899c251e222b1a1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2018-2-6,10,10,18,80,78,Global,0.04078431372549,52,1275,Mladen Turk
CVE-2018-1305,284,NA,,2018-2-23,2018-8-29,4,None,Remote,Low,Single system,Partial,None,None,"Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.",https://www.cvedetails.com/cve/CVE-2018-1305/,20171207,"Yes. Fixed in Apache Tomcat 7.0.85, 8.0.50, 8.5.28, 9.0.5:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security constraint annotations applied too late CVE-2018-1305
Security constraints defined by annotations of Servlets were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.
This was fixed in revisions 1823322 and 1824360.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 7.0.0 to 7.0.84
This was fixed in revisions 1823314 and 1824358.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 8.5.0 to 8.5.27
This was fixed in revisions 1823310 and 1824323.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 9.0.0.M1 to 9.0.4",No,2018-2-1,2018-2-23,2018-2-13,3e54b2a6314eda11617ff7a7b899c251e222b1a1,webapps/docs/changelog.xml,"Process all ServletSecurity annotations at web application start rather than at servlet load time to ensure constraints are applied
consistently.",https://github.com/apache/tomcat/commit/3e54b2a6314eda11617ff7a7b899c251e222b1a1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2018-2-6,10,5,5,80,78,Global,0.140938231403277,4155,29481,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,3e5b0455483eed55752047073e92403bfca8d3ec,java/org/apache/catalina/core/StandardWrapper.java,"CVE-2011-1088
Fix unit test failures",https://github.com/apache/tomcat/commit/3e5b0455483eed55752047073e92403bfca8d3ec,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-9,7,6,7,17,4,Global,0.145781466113416,1054,7230,Mladen Turk
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,3e5b0455483eed55752047073e92403bfca8d3ec,java/org/apache/catalina/startup/ContextConfig.java,"CVE-2011-1088
Fix unit test failures",https://github.com/apache/tomcat/commit/3e5b0455483eed55752047073e92403bfca8d3ec,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-9,7,8,11,17,4,Global,0.384951522600027,2819,7323,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,3e5b0455483eed55752047073e92403bfca8d3ec,test/webapp-3.0/WEB-INF/web.xml,"CVE-2011-1088
Fix unit test failures",https://github.com/apache/tomcat/commit/3e5b0455483eed55752047073e92403bfca8d3ec,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-9,7,3,3,17,4,Global,1,129,129,Mark Emlyn David Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,3f48670e16a1bd2bc97efab05bb57ca9a83ed8d3,java/org/apache/catalina/webresources/AbstractFileResourceSet.java,Refactor and add additional comments to make intended behaviour clearer.,https://github.com/apache/tomcat/commit/3f48670e16a1bd2bc97efab05bb57ca9a83ed8d3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-21,7,52,94,52,42,Local,0.435185185185185,141,324,Mark Emlyn David Thomas
CVE-2010-2227,119,NA,DoS Overflow +Info,2010-7-13,2017-9-18,6.4,None,Remote,Low,Not required,Partial,None,Partial,"Apache Tomcat 5.5.0 through 5.5.29, 6.0.0 through 6.0.27, and 7.0.0 beta does not properly handle an invalid Transfer-Encoding header, which allows remote attackers to cause a denial of service (application outage) or obtain sensitive information via a crafted header that interferes with ""recycling of a buffer.""",https://www.cvedetails.com/cve/CVE-2010-2227/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28, 7.0.2:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Remote Denial Of Service and Information Disclosure Vulnerability CVE-2010-2227
Several flaws in the handling of the 'Transfer-Encoding' header were found that prevented the recycling of a buffer. A remote attacker could trigger this flaw which would cause subsequent requests to fail and/or information to leak between requests. This flaw is mitigated if Tomcat is behind a reverse proxy (such as Apache httpd 2.2) as the proxy should reject the invalid transfer encoding header.
This was fixed in revision 959428.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 958977.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 6.0.0-6.0.27
Note: The issue below was fixed in Apache Tomcat 6.0.27 but the release vote for the 6.0.27 release candidate did not pass. Therefore, although users must download 6.0.28 to obtain a version that includes a fix for this issue, version 6.0.27 is not included in the list of affected versions.
This was fixed in revision 958911.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 7.0.0",No,2010-6-14,2010-7-9,2010-8-2,40e5880dfc51517334acda5f12beacdec52ca283,java/org/apache/coyote/http11/AbstractHttp11Processor.java,Arrange filter logic. This is the fix for CVE-2010-2227.,https://github.com/apache/tomcat/commit/40e5880dfc51517334acda5f12beacdec52ca283,Jean-Frederic Clere,,,,2010-6-29,29,9,11,15,6,Global,0.01218161683278,11,903,Filip Hanik
CVE-2010-2227,119,NA,DoS Overflow +Info,2010-7-13,2017-9-18,6.4,None,Remote,Low,Not required,Partial,None,Partial,"Apache Tomcat 5.5.0 through 5.5.29, 6.0.0 through 6.0.27, and 7.0.0 beta does not properly handle an invalid Transfer-Encoding header, which allows remote attackers to cause a denial of service (application outage) or obtain sensitive information via a crafted header that interferes with ""recycling of a buffer.""",https://www.cvedetails.com/cve/CVE-2010-2227/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28, 7.0.2:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Remote Denial Of Service and Information Disclosure Vulnerability CVE-2010-2227
Several flaws in the handling of the 'Transfer-Encoding' header were found that prevented the recycling of a buffer. A remote attacker could trigger this flaw which would cause subsequent requests to fail and/or information to leak between requests. This flaw is mitigated if Tomcat is behind a reverse proxy (such as Apache httpd 2.2) as the proxy should reject the invalid transfer encoding header.
This was fixed in revision 959428.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 958977.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 6.0.0-6.0.27
Note: The issue below was fixed in Apache Tomcat 6.0.27 but the release vote for the 6.0.27 release candidate did not pass. Therefore, although users must download 6.0.28 to obtain a version that includes a fix for this issue, version 6.0.27 is not included in the list of affected versions.
This was fixed in revision 958911.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 7.0.0",No,2010-6-14,2010-7-9,2010-8-2,40e5880dfc51517334acda5f12beacdec52ca283,java/org/apache/coyote/http11/filters/BufferedInputFilter.java,Arrange filter logic. This is the fix for CVE-2010-2227.,https://github.com/apache/tomcat/commit/40e5880dfc51517334acda5f12beacdec52ca283,Jean-Frederic Clere,,,,2010-6-29,29,6,10,15,6,Global,0.025062656641604,10,399,Mladen Turk
CVE-2013-2071,200,NA,+Info,2013-6-1,2017-5-22,2.6,None,Remote,High,Not required,Partial,None,None,"ava/org/apache/catalina/core/AsyncContextImpl.java in Apache Tomcat 7.x before 7.0.40 does not properly handle the throwing of a RuntimeException in an AsyncListener in an application, which allows context-dependent attackers to obtain sensitive request information intended for other applications in opportunistic circumstances via an application that records the requests that it processes.",https://www.cvedetails.com/cve/CVE-2013-2071/,20130219,"Yes. Fixed in Apache Tomcat 7.0.40: 
http://tomcat.apache.org/security-7.html","Moderate: Information disclosure CVE-2013-2071
Bug 54178 described a scenario where elements of a previous request may be exposed to a current request. This was very difficult to exploit deliberately but fairly likely to happen unexpectedly if an application used AsyncListeners that threw RuntimeExceptions.
This was fixed in revision 1471372.
The root cause of the problem was identified as a Tomcat bug on 2 April 2013. The Tomcat security team identified the security implications on 24 April 2013 and made those details public on 10 May 2013.
Affects: 7.0.0-7.0.39",No,2013-4-24,2013-5-10,2013-5-9,4171bafd2b38be19a6358ba75b9d71b6dbf3072b,java/org/apache/catalina/core/AsyncContextImpl.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54178
Protect against AsyncListeners that throw RuntimeExceptions (they should normally only throw IOExceptions).
Includes a test case.",https://github.com/apache/tomcat/commit/4171bafd2b38be19a6358ba75b9d71b6dbf3072b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-4-24,2,12,20,117,9,Global,0.578903996703749,1405,2427,Mark Emlyn David Thomas
CVE-2013-2071,200,NA,+Info,2013-6-1,2017-5-22,2.6,None,Remote,High,Not required,Partial,None,None,"ava/org/apache/catalina/core/AsyncContextImpl.java in Apache Tomcat 7.x before 7.0.40 does not properly handle the throwing of a RuntimeException in an AsyncListener in an application, which allows context-dependent attackers to obtain sensitive request information intended for other applications in opportunistic circumstances via an application that records the requests that it processes.",https://www.cvedetails.com/cve/CVE-2013-2071/,20130219,"Yes. Fixed in Apache Tomcat 7.0.40: 
http://tomcat.apache.org/security-7.html","Moderate: Information disclosure CVE-2013-2071
Bug 54178 described a scenario where elements of a previous request may be exposed to a current request. This was very difficult to exploit deliberately but fairly likely to happen unexpectedly if an application used AsyncListeners that threw RuntimeExceptions.
This was fixed in revision 1471372.
The root cause of the problem was identified as a Tomcat bug on 2 April 2013. The Tomcat security team identified the security implications on 24 April 2013 and made those details public on 10 May 2013.
Affects: 7.0.0-7.0.39",No,2013-4-24,2013-5-10,2013-5-9,4171bafd2b38be19a6358ba75b9d71b6dbf3072b,test/org/apache/catalina/core/TestAsyncContextImpl.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54178
Protect against AsyncListeners that throw RuntimeExceptions (they should normally only throw IOExceptions).
Includes a test case.",https://github.com/apache/tomcat/commit/4171bafd2b38be19a6358ba75b9d71b6dbf3072b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-4-24,2,105,106,117,9,Global,0.919371370003417,2691,2927,Mark Emlyn David Thomas
CVE-2009-3548,255,NA,Gain Privileges,2009-11-12,2017-9-18,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"The Windows installer for Apache Tomcat 6.0.0 through 6.0.20, 5.5.0 through 5.5.28, and possibly earlier versions uses a blank default password for the administrative user, which allows remote attackers to gain privileges.",https://www.cvedetails.com/cve/CVE-2009-3548/,20091005,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Insecure default password CVE-2009-3548
The Windows installer defaults to a blank password for the administrative user. If this is not changed during the install process, then by default a user is created with the name admin, roles admin and manager and a blank password.
This was fixed in revision 881771.
This was first reported to the Tomcat security team on 26 Oct 2009 and made public on 9 Nov 2009.
Affects: 6.0.0-6.0.20
This was first reported to the Tomcat security team on 26 Oct 2009 and made public on 9 Nov 2009.
This was fixed in revision 919006.
Affects: 5.5.0-5.5.28",No,2009-10-26,2009-11-9,2010-4-20,43135374da8c5af49139031b98f47e1bcda18cac,res/tomcat.nsi,"1. Correct some computations in ""configure"" Function:
a) Always set initial value for $R5
b) $R4 and $R0 have to be consistent when Silent mode is used
2. Correct some messages. Do not mention Windows NT etc., as Win98 is all history now.",https://github.com/apache/tomcat/commit/43135374da8c5af49139031b98f47e1bcda18cac,Konstatin Kolinko,,,,2009-11-13,20,4,11,4,7,Local,0.006735340729002,17,2524,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,43412a5cc8af11153333f8bb7ac4332f54147989,webapps/docs/config/ajp.xml,Add links to FailedRequestFilter in several places and do other small documentation improvements.,https://github.com/apache/tomcat/commit/43412a5cc8af11153333f8bb7ac4332f54147989,Konstatin Kolinko,,,,2011-11-10,561,3,4,41,7,Global,0.02680067001675,32,1194,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,43412a5cc8af11153333f8bb7ac4332f54147989,webapps/docs/config/filter.xml,Add links to FailedRequestFilter in several places and do other small documentation improvements.,https://github.com/apache/tomcat/commit/43412a5cc8af11153333f8bb7ac4332f54147989,Konstatin Kolinko,,,,2011-11-10,561,2,2,41,7,Global,0.078007045797685,155,1987,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,43412a5cc8af11153333f8bb7ac4332f54147989,webapps/docs/config/http.xml,Add links to FailedRequestFilter in several places and do other small documentation improvements.,https://github.com/apache/tomcat/commit/43412a5cc8af11153333f8bb7ac4332f54147989,Konstatin Kolinko,,,,2011-11-10,561,3,4,41,7,Global,0.027672479150872,73,2638,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,43412a5cc8af11153333f8bb7ac4332f54147989,webapps/docs/security-howto.xml,Add links to FailedRequestFilter in several places and do other small documentation improvements.,https://github.com/apache/tomcat/commit/43412a5cc8af11153333f8bb7ac4332f54147989,Konstatin Kolinko,,,,2011-11-10,561,33,38,41,7,Global,0.095076400679117,56,589,Mark Emlyn David Thomas
CVE-2010-4172,79,NA,XSS,2010-11-26,2017-8-16,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Manager application in Apache Tomcat 6.0.12 through 6.0.29 and 7.0.0 through 7.0.4 allow remote attackers to inject arbitrary web script or HTML via the (1) orderBy or (2) sort parameter to sessionsList.jsp, or unspecified input to (3) sessionDetail.jsp or (4) java/org/apache/catalina/manager/JspHelper.java, related to use of untrusted web applications.",https://www.cvedetails.com/cve/CVE-2010-4172/,20101104,"Yes. Fixed in Apache Tomcat 6.0.30, 7.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Cross-site scripting CVE-2010-4172
The Manager application used the user provided parameters sort and orderBy directly without filtering thereby permitting cross-site scripting.
This was fixed in revision 1037779.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 6.0.12-6.0.29
This was fixed in revision 1037778.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 7.0.0-7.0.4",No,2010-11-15,2010-11-22,2011-1-13,44fa0986ff4885d84834117d572b766f4e663b26,java/org/apache/catalina/manager/JspHelper.java,Simplify escapeXml(Object),https://github.com/apache/tomcat/commit/44fa0986ff4885d84834117d572b766f4e663b26,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-11-22,4,1,2,1,1,Local,0.297450424929178,105,353,Remy Maucherat
CVE-2016-8747,200,NA,+Info,2017-3-14,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,An information disclosure issue was discovered in Apache Tomcat 8.5.7 to 8.5.9 and 9.0.0.M11 to 9.0.0.M15 in reverse-proxy configurations. Http11InputBuffer.java allows remote attackers to read data that was intended to be associated with a different request.,https://www.cvedetails.com/cve/CVE-2016-8747/,20161018,"Yes. Fixed in Apache Tomcat 8.5.11, 9.0.0.M17:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Information Disclosure CVE-2016-8747
The refactoring to make wider use of ByteBuffer introduced a regression that could cause information to leak between requests on the same connection. When running behind a reverse proxy, this could result in information leakage between users. All HTTP connector variants are affected but HTTP/2 and AJP are not affected.
This was fixed in revision 1774166.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 8.5.7 to 8.5.9
This was fixed in revision 1774161.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 9.0.0.M11 to 9.0.0.M15",No,2016-12-13,2017-3-13,2017-1-16,452c8094a665ef6375530e81c033da4eeb2e4865,java/org/apache/coyote/http11/Http11InputBuffer.java,Fix intermittent test failure spotted during some refactoring.,https://github.com/apache/tomcat/commit/452c8094a665ef6375530e81c033da4eeb2e4865,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-12-14,1,1,1,6,0,Global,0.497521406038756,1104,2219,Mark Thomas
CVE-2016-8747,200,NA,+Info,2017-3-14,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,An information disclosure issue was discovered in Apache Tomcat 8.5.7 to 8.5.9 and 9.0.0.M11 to 9.0.0.M15 in reverse-proxy configurations. Http11InputBuffer.java allows remote attackers to read data that was intended to be associated with a different request.,https://www.cvedetails.com/cve/CVE-2016-8747/,20161018,"Yes. Fixed in Apache Tomcat 8.5.11, 9.0.0.M17:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Information Disclosure CVE-2016-8747
The refactoring to make wider use of ByteBuffer introduced a regression that could cause information to leak between requests on the same connection. When running behind a reverse proxy, this could result in information leakage between users. All HTTP connector variants are affected but HTTP/2 and AJP are not affected.
This was fixed in revision 1774166.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 8.5.7 to 8.5.9
This was fixed in revision 1774161.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 9.0.0.M11 to 9.0.0.M15",No,2016-12-13,2017-3-13,2017-1-16,452c8094a665ef6375530e81c033da4eeb2e4865,webapps/docs/changelog.xml,Fix intermittent test failure spotted during some refactoring.,https://github.com/apache/tomcat/commit/452c8094a665ef6375530e81c033da4eeb2e4865,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-12-14,1,5,5,6,0,Global,0.08106686701728,2158,26620,Mark Emlyn David Thomas
CVE-2017-5664,254,NA,,2017-6-6,2018-7-18,5,None,Remote,Low,Not required,None,Partial,None,"The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method. If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. The Default Servlet in Apache Tomcat 9.0.0.M1 to 9.0.0.M20, 8.5.0 to 8.5.14, 8.0.0.RC1 to 8.0.43 and 7.0.0 to 7.0.77 did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page. Notes for other user provided error pages: (1) Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must must ensure that they handle any error dispatch as a GET request, regardless of the actual method. (2) By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.",https://www.cvedetails.com/cve/CVE-2017-5664/,20170129,"Yes. Fixed in Apache Tomcat 7.0.78, 8.0.44, 8.5.15, 9.0.0.M21:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security Constraint Bypass CVE-2017-5664
The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method.
If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. Tomcat's Default Servlet did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page.
Notes for other user provided error pages:
Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.
By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.
This was fixed in revisions 1793471 and 1793491.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 7.0.0 to 7.0.77
This was fixed in revisions 1793470 and 1793489.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 8.0.0.RC1 to 8.0.43
This was fixed in revisions 1793469 and 1793488.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 8.5.0 to 8.5.14
This was fixed in revisions 1793468 and 1793487.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 9.0.0.M1 to 9.0.0.M20",No,2017-4-21,2017-6-6,2017-5-16,4545dcce444aa619374a659cb450dbbd0be3c921,java/org/apache/catalina/servlets/DefaultServlet.java,Use a more reliable mechanism for the DefaultServlet when determining if the current request is for custom error page or not.,https://github.com/apache/tomcat/commit/4545dcce444aa619374a659cb450dbbd0be3c921,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-5-2,1,1,2,6,1,Global,0.044955352560813,438,9743,Mladen Turk
CVE-2017-5664,254,NA,,2017-6-6,2018-7-18,5,None,Remote,Low,Not required,None,Partial,None,"The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method. If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. The Default Servlet in Apache Tomcat 9.0.0.M1 to 9.0.0.M20, 8.5.0 to 8.5.14, 8.0.0.RC1 to 8.0.43 and 7.0.0 to 7.0.77 did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page. Notes for other user provided error pages: (1) Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must must ensure that they handle any error dispatch as a GET request, regardless of the actual method. (2) By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.",https://www.cvedetails.com/cve/CVE-2017-5664/,20170129,"Yes. Fixed in Apache Tomcat 7.0.78, 8.0.44, 8.5.15, 9.0.0.M21:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security Constraint Bypass CVE-2017-5664
The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method.
If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. Tomcat's Default Servlet did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page.
Notes for other user provided error pages:
Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.
By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.
This was fixed in revisions 1793471 and 1793491.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 7.0.0 to 7.0.77
This was fixed in revisions 1793470 and 1793489.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 8.0.0.RC1 to 8.0.43
This was fixed in revisions 1793469 and 1793488.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 8.5.0 to 8.5.14
This was fixed in revisions 1793468 and 1793487.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 9.0.0.M1 to 9.0.0.M20",No,2017-4-21,2017-6-6,2017-5-16,4545dcce444aa619374a659cb450dbbd0be3c921,webapps/docs/changelog.xml,Use a more reliable mechanism for the DefaultServlet when determining if the current request is for custom error page or not.,https://github.com/apache/tomcat/commit/4545dcce444aa619374a659cb450dbbd0be3c921,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-5-2,1,5,5,6,1,Global,0.101120742809474,2788,27571,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,46bfef63108a773a3e2b8a073384ab12197664c3,test/org/apache/catalina/core/TestStandardWrapper.java,Check metadata-complete=true leads to @ServletSecurity being ignored,https://github.com/apache/tomcat/commit/46bfef63108a773a3e2b8a073384ab12197664c3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-4,7,20,20,30,0,Global,1,312,312,Mark Emlyn David Thomas
CVE-2011-2526,20,NA,DoS Bypass,2011-7-14,2018-1-5,4.4,None,Local,Medium,Not required,Partial,Partial,Partial,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.19, when sendfile is enabled for the HTTP APR or HTTP NIO connector, does not validate certain request attributes, which allows local users to bypass intended file access restrictions or cause a denial of service (infinite loop or JVM crash) by leveraging an untrusted web application.",https://www.cvedetails.com/cve/CVE-2011-2526/,20110615,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2526
Tomcat provides support for sendfile with the HTTP APR connector. sendfile is used automatically for content served via the DefaultServlet and deployed web applications may use it directly via setting request attributes. These request attributes were not validated. When running under a security manager, this lack of validation allowed a malicious web application to do one or more of the following that would normally be prevented by a security manager:
return files to users that the security manager should make inaccessible
terminate (via a crash) the JVM
Additionally, these vulnerabilities only occur when all of the following are true:
untrusted web applications are being used
the SecurityManager is used to limit the untrusted web applications
the HTTP APR connector is used
sendfile is enabled for the connector (this is the default)
This was fixed in revision 1158244.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1146703.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 6.0.0-6.0.32
This was fixed in revisions 1145383, 1145489, 1145571, 1145694 and 1146005.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 7.0.0-7.0.18
Note: The issues below were fixed in Apache Tomcat 7.0.17 but the release votes for the 7.0.17 and 7.0.18 release candidates did not pass. Therefore, although users must download 7.0.19 to obtain a version that includes a fix for these issues, versions 7.0.17 and 7.0.18 are not included in the list of affected versions.",No,2011-7-7,2011-7-13,2011-9-22,48dded4ab1209a030770ab67a789d3b2528b6329,java/org/apache/tomcat/util/net/NioEndpoint.java,"Socket has been closed, return false so an attempt is not made to re-use the socket
Part of the fix for CVE-2011-2526",https://github.com/apache/tomcat/commit/48dded4ab1209a030770ab67a789d3b2528b6329,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-7-12,2,1,1,5,0,Global,0.040330783177818,912,22613,Filip Hanik
CVE-2011-2526,20,NA,DoS Bypass,2011-7-14,2018-1-5,4.4,None,Local,Medium,Not required,Partial,Partial,Partial,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.19, when sendfile is enabled for the HTTP APR or HTTP NIO connector, does not validate certain request attributes, which allows local users to bypass intended file access restrictions or cause a denial of service (infinite loop or JVM crash) by leveraging an untrusted web application.",https://www.cvedetails.com/cve/CVE-2011-2526/,20110615,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2526
Tomcat provides support for sendfile with the HTTP APR connector. sendfile is used automatically for content served via the DefaultServlet and deployed web applications may use it directly via setting request attributes. These request attributes were not validated. When running under a security manager, this lack of validation allowed a malicious web application to do one or more of the following that would normally be prevented by a security manager:
return files to users that the security manager should make inaccessible
terminate (via a crash) the JVM
Additionally, these vulnerabilities only occur when all of the following are true:
untrusted web applications are being used
the SecurityManager is used to limit the untrusted web applications
the HTTP APR connector is used
sendfile is enabled for the connector (this is the default)
This was fixed in revision 1158244.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1146703.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 6.0.0-6.0.32
This was fixed in revisions 1145383, 1145489, 1145571, 1145694 and 1146005.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 7.0.0-7.0.18
Note: The issues below were fixed in Apache Tomcat 7.0.17 but the release votes for the 7.0.17 and 7.0.18 release candidates did not pass. Therefore, although users must download 7.0.19 to obtain a version that includes a fix for these issues, versions 7.0.17 and 7.0.18 are not included in the list of affected versions.",No,2011-7-7,2011-7-13,2011-9-22,48dded4ab1209a030770ab67a789d3b2528b6329,webapps/docs/changelog.xml,"Socket has been closed, return false so an attempt is not made to re-use the socket
Part of the fix for CVE-2011-2526",https://github.com/apache/tomcat/commit/48dded4ab1209a030770ab67a789d3b2528b6329,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-7-12,2,4,4,5,0,Global,0.387637506547931,5180,13363,Mark Emlyn David Thomas
CVE-2016-5018,254,NA,Bypass,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,None,Partial,None,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 a malicious web application was able to bypass a configured SecurityManager via a Tomcat utility method that was accessible to web applications.",https://www.cvedetails.com/cve/CVE-2016-5018/,20160524,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager Bypass CVE-2016-5018
A malicious web application was able to bypass a configured SecurityManager via a Tomcat utility method that was accessible to web applications.
This was fixed in revisions 1754904 and 1761718.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revisions 1754902 and 1760309.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revisions 1754900 and 1760305 for 8.5.x and revisions 1754901 and 1760307 for 8.0.x.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revisions 1754714 and 1760300.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-7-5,2016-10-27,2016-10-16,492cbc9a1e33e6d356438bcba4fa2b67680d245a,java/org/apache/jasper/security/SecurityClassLoad.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60101
Remove preloading of the class that was deleted.",https://github.com/apache/tomcat/commit/492cbc9a1e33e6d356438bcba4fa2b67680d245a,Violeta Georgieva Georgieva,violetagg,https://github.com/violetagg,,2016-9-12,43,0,2,8,4,Global,0.004830917874396,2,414,Mladen Turk
CVE-2016-5018,254,NA,Bypass,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,None,Partial,None,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 a malicious web application was able to bypass a configured SecurityManager via a Tomcat utility method that was accessible to web applications.",https://www.cvedetails.com/cve/CVE-2016-5018/,20160524,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager Bypass CVE-2016-5018
A malicious web application was able to bypass a configured SecurityManager via a Tomcat utility method that was accessible to web applications.
This was fixed in revisions 1754904 and 1761718.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revisions 1754902 and 1760309.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revisions 1754900 and 1760305 for 8.5.x and revisions 1754901 and 1760307 for 8.0.x.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revisions 1754714 and 1760300.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-7-5,2016-10-27,2016-10-16,492cbc9a1e33e6d356438bcba4fa2b67680d245a,java/org/apache/jasper/servlet/JasperInitializer.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60101
Remove preloading of the class that was deleted.",https://github.com/apache/tomcat/commit/492cbc9a1e33e6d356438bcba4fa2b67680d245a,Violeta Georgieva Georgieva,violetagg,https://github.com/violetagg,,2016-9-12,43,0,2,8,4,Global,0.010752688172043,2,186,Jeremy Boynes
CVE-2016-5018,254,NA,Bypass,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,None,Partial,None,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 a malicious web application was able to bypass a configured SecurityManager via a Tomcat utility method that was accessible to web applications.",https://www.cvedetails.com/cve/CVE-2016-5018/,20160524,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager Bypass CVE-2016-5018
A malicious web application was able to bypass a configured SecurityManager via a Tomcat utility method that was accessible to web applications.
This was fixed in revisions 1754904 and 1761718.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revisions 1754902 and 1760309.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revisions 1754900 and 1760305 for 8.5.x and revisions 1754901 and 1760307 for 8.0.x.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revisions 1754714 and 1760300.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-7-5,2016-10-27,2016-10-16,492cbc9a1e33e6d356438bcba4fa2b67680d245a,webapps/docs/changelog.xml,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60101
Remove preloading of the class that was deleted.",https://github.com/apache/tomcat/commit/492cbc9a1e33e6d356438bcba4fa2b67680d245a,Violeta Georgieva Georgieva,violetagg,https://github.com/violetagg,,2016-9-12,43,8,8,8,4,Global,0.011884944446595,307,25831,Mark Emlyn David Thomas
CVE-2008-1947,79,NA,XSS,2008-6-4,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,Cross-site scripting (XSS) vulnerability in Apache Tomcat 5.5.9 through 5.5.26 and 6.0.0 through 6.0.16 allows remote attackers to inject arbitrary web script or HTML via the name parameter (aka the hostname attribute) to host-manager/html/add.,https://www.cvedetails.com/cve/CVE-2008-1947/,20080424,"Yes. Fixed in Apache Tomcat 5.5.27, 6.0.18:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","The Host Manager web application did not escape user provided data before including it in the output. This enabled a XSS attack. This application now filters the data before use. This issue may be mitigated by logging out (closing the browser) of the application once the management tasks have been completed.
This was fixed in revision 662585.
This was first reported to the Tomcat security team on 15 May 2008 and made public on 28 May 2008.",No,,,2008-9-8,49c71fc59c1b8f8da77aea9eb53e61db168aebab,java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java,"Fix potential XSS in host-manager.
This is CVE-2008-1947.",https://github.com/apache/tomcat/commit/49c71fc59c1b8f8da77aea9eb53e61db168aebab,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-6-2,1,8,12,8,4,Local,0.081272084805654,46,566,Remy Maucherat
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,4ab75b06e20f1649b86fd5194e14c2e592cfa50e,java/org/apache/tomcat/util/http/Parameters.java,"Followup to parameter parsing improvements.
urlDecode() sets bc.charset.
If decoding is skipped (because there is no '%' in the string) we shouldn't forget to set the charset.",https://github.com/apache/tomcat/commit/4ab75b06e20f1649b86fd5194e14c2e592cfa50e,Konstatin Kolinko,,,,2011-11-1,561,2,2,2,0,Local,0.009276944065484,34,3665,Mark Emlyn David Thomas
CVE-2018-1305,284,NA,,2018-2-23,2018-8-29,4,None,Remote,Low,Single system,Partial,None,None,"Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.",https://www.cvedetails.com/cve/CVE-2018-1305/,20171207,"Yes. Fixed in Apache Tomcat 7.0.85, 8.0.50, 8.5.28, 9.0.5:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security constraint annotations applied too late CVE-2018-1305
Security constraints defined by annotations of Servlets were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.
This was fixed in revisions 1823322 and 1824360.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 7.0.0 to 7.0.84
This was fixed in revisions 1823314 and 1824358.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 8.5.0 to 8.5.27
This was fixed in revisions 1823310 and 1824323.
This issue was identified by the Apache Tomcat Security on 1 February 2018 and made public on 23 February 2018.
Affects: 9.0.0.M1 to 9.0.4",No,2018-2-1,2018-2-23,2018-2-13,4d637bc3986e5d09b9363e2144b8ba74fa6eac3a,webapps/docs/changelog.xml,62104: Fix programmatic login regression as the NonLoginAuthenticator has to be set for it to work (if no login method is specified).,https://github.com/apache/tomcat/commit/4d637bc3986e5d09b9363e2144b8ba74fa6eac3a,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2018-2-15,10,5,5,10,13,Global,0.148260928407092,4382,29556,Mark Emlyn David Thomas
CVE-2010-2227,119,NA,DoS Overflow +Info,2010-7-13,2017-9-18,6.4,None,Remote,Low,Not required,Partial,None,Partial,"Apache Tomcat 5.5.0 through 5.5.29, 6.0.0 through 6.0.27, and 7.0.0 beta does not properly handle an invalid Transfer-Encoding header, which allows remote attackers to cause a denial of service (application outage) or obtain sensitive information via a crafted header that interferes with ""recycling of a buffer.""",https://www.cvedetails.com/cve/CVE-2010-2227/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28, 7.0.2:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Remote Denial Of Service and Information Disclosure Vulnerability CVE-2010-2227
Several flaws in the handling of the 'Transfer-Encoding' header were found that prevented the recycling of a buffer. A remote attacker could trigger this flaw which would cause subsequent requests to fail and/or information to leak between requests. This flaw is mitigated if Tomcat is behind a reverse proxy (such as Apache httpd 2.2) as the proxy should reject the invalid transfer encoding header.
This was fixed in revision 959428.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 958977.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 6.0.0-6.0.27
Note: The issue below was fixed in Apache Tomcat 6.0.27 but the release vote for the 6.0.27 release candidate did not pass. Therefore, although users must download 6.0.28 to obtain a version that includes a fix for this issue, version 6.0.27 is not included in the list of affected versions.
This was fixed in revision 958911.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 7.0.0",No,2010-6-14,2010-7-9,2010-8-2,4e97b367a97a356d2f8bb9986875e20d0807d32c,test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,Add CVE-2010-2227 test case,https://github.com/apache/tomcat/commit/4e97b367a97a356d2f8bb9986875e20d0807d32c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-7-10,29,163,163,163,0,Local,1,163,163,Mark Emlyn David Thomas
CVE-2011-3376,264,NA,Gain Privileges,2011-11-11,2017-5-22,4.4,None,Local,Medium,Not required,Partial,Partial,Partial,"org/apache/catalina/core/DefaultInstanceManager.java in Apache Tomcat 7.x before 7.0.22 does not properly restrict ContainerServlets in the Manager application, which allows local users to gain privileges by using an untrusted web application to access the Manager application's functionality.",https://www.cvedetails.com/cve/CVE-2011-3376/,20110830,"Yes. Fixed in Apache Tomcat 7.0.22:
http://tomcat.apache.org/security-7.html","Low: Privilege Escalation CVE-2011-3376
This issue only affects environments running web applications that are not trusted (e.g. shared hosting environments). The Servlets that implement the functionality of the Manager application that ships with Apache Tomcat should only be available to Contexts (web applications) that are marked as privileged. However, this check was not being made. This allowed an untrusted web application to use the functionality of the Manager application. This could be used to obtain information on running web applications as well as deploying additional web applications.
This was fixed in revision 1176588.
This was identified by Ate Douma on 27 September 2011 and made public on 8 November 2011.
Affects: 7.0.0-7.0.21",No,2011-9-27,2011-11-8,2011-10-1,4f08a48aa897f54dde61e133dc5702de1d6755d8,java/org/apache/catalina/core/DefaultInstanceManager.java,ContainerServlets are always restricted.,https://github.com/apache/tomcat/commit/4f08a48aa897f54dde61e133dc5702de1d6755d8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-9-27,1,4,4,4,0,Local,0.602247191011236,1340,2225,Mark Emlyn David Thomas
CVE-2014-0119,264,NA,,2014-5-31,2017-11-8,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.",https://www.cvedetails.com/cve/CVE-2014-0119/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.54, 8.0.8:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information Disclosure CVE-2014-0119
In limited circumstances it was possible for a malicious web application to replace the XML parsers used by Tomcat to process XSLTs for the default servlet, JSP documents, tag library descriptors (TLDs) and tag plugin configuration files. The injected XML parser(s) could then bypass the limits imposed on XML external entities and/or have visibility of the XML files processed for other web applications deployed on the same Tomcat instance.
This was fixed in revisions 1589640, 1593815 and 1593821.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1588199, 1589997, 1590028 and 1590036.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.53
This was fixed in revisions 1588193, 1589837, 1589980, 1589983, 1589985, 1589990 and 1589992.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.5",No,2014-4-12,2014-5-27,2014-5-23,50311bed8d87e452ff0e69838ba312c4fe899b2d,java/org/apache/tomcat/util/descriptor/Constants.java,Add new constant missed in previous commit,https://github.com/apache/tomcat/commit/50311bed8d87e452ff0e69838ba312c4fe899b2d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-4-25,9,1,1,1,0,Local,1,25,25,Mark Emlyn David Thomas
CVE-2013-2071,200,NA,+Info,2013-6-1,2017-5-22,2.6,None,Remote,High,Not required,Partial,None,None,"ava/org/apache/catalina/core/AsyncContextImpl.java in Apache Tomcat 7.x before 7.0.40 does not properly handle the throwing of a RuntimeException in an AsyncListener in an application, which allows context-dependent attackers to obtain sensitive request information intended for other applications in opportunistic circumstances via an application that records the requests that it processes.",https://www.cvedetails.com/cve/CVE-2013-2071/,20130219,"Yes. Fixed in Apache Tomcat 7.0.40: 
http://tomcat.apache.org/security-7.html","Moderate: Information disclosure CVE-2013-2071
Bug 54178 described a scenario where elements of a previous request may be exposed to a current request. This was very difficult to exploit deliberately but fairly likely to happen unexpectedly if an application used AsyncListeners that threw RuntimeExceptions.
This was fixed in revision 1471372.
The root cause of the problem was identified as a Tomcat bug on 2 April 2013. The Tomcat security team identified the security implications on 24 April 2013 and made those details public on 10 May 2013.
Affects: 7.0.0-7.0.39",No,2013-4-24,2013-5-10,2013-5-9,50ced511459301143e7111f4cc44a01789bc9010,test/org/apache/catalina/core/TestAsyncContextImpl.java,Fix failing unit test now that a RuntimeException in an AsyncListener is caught and logged.,https://github.com/apache/tomcat/commit/50ced511459301143e7111f4cc44a01789bc9010,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-4-25,2,2,16,2,14,Local,0.919809717974856,2707,2943,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,50f1b1da794cd93b70ab5456d3c2c984408e1506,java/org/apache/catalina/ha/session/mbeans-descriptors.xml,"Expand the session attribute filtering options
- new option to filter based on implementation class of value
- new option to log a warning message if an attribute is filtered out
- always log a message at at least debug level if an attribute is filtered out",https://github.com/apache/tomcat/commit/50f1b1da794cd93b70ab5456d3c2c984408e1506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-18,6,16,16,256,18,Global,0.007090103397341,24,3385,Filip Hanik
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,50f1b1da794cd93b70ab5456d3c2c984408e1506,java/org/apache/catalina/ha/session/mbeans-descriptors.xml,"Expand the session attribute filtering options
- new option to filter based on implementation class of value
- new option to log a warning message if an attribute is filtered out
- always log a message at at least debug level if an attribute is filtered out",https://github.com/apache/tomcat/commit/50f1b1da794cd93b70ab5456d3c2c984408e1506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-18,6,16,16,256,18,Global,0.007090103397341,24,3385,Filip Hanik
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,50f1b1da794cd93b70ab5456d3c2c984408e1506,java/org/apache/catalina/ha/session/mbeans-descriptors.xml,"Expand the session attribute filtering options
- new option to filter based on implementation class of value
- new option to log a warning message if an attribute is filtered out
- always log a message at at least debug level if an attribute is filtered out",https://github.com/apache/tomcat/commit/50f1b1da794cd93b70ab5456d3c2c984408e1506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-18,6,16,16,256,18,Global,0.007090103397341,24,3385,Filip Hanik
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,50f1b1da794cd93b70ab5456d3c2c984408e1506,java/org/apache/catalina/ha/session/mbeans-descriptors.xml,"Expand the session attribute filtering options
- new option to filter based on implementation class of value
- new option to log a warning message if an attribute is filtered out
- always log a message at at least debug level if an attribute is filtered out",https://github.com/apache/tomcat/commit/50f1b1da794cd93b70ab5456d3c2c984408e1506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-18,6,16,16,256,18,Global,0.007090103397341,24,3385,Filip Hanik
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,50f1b1da794cd93b70ab5456d3c2c984408e1506,java/org/apache/catalina/session/LocalStrings.properties,"Expand the session attribute filtering options
- new option to filter based on implementation class of value
- new option to log a warning message if an attribute is filtered out
- always log a message at at least debug level if an attribute is filtered out",https://github.com/apache/tomcat/commit/50f1b1da794cd93b70ab5456d3c2c984408e1506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-18,6,2,2,256,18,Global,0.016722408026756,5,299,Mladen Turk
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,50f1b1da794cd93b70ab5456d3c2c984408e1506,java/org/apache/catalina/session/ManagerBase.java,"Expand the session attribute filtering options
- new option to filter based on implementation class of value
- new option to log a warning message if an attribute is filtered out
- always log a message at at least debug level if an attribute is filtered out",https://github.com/apache/tomcat/commit/50f1b1da794cd93b70ab5456d3c2c984408e1506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-18,6,116,119,256,18,Global,0.035369774919614,253,7153,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,50f1b1da794cd93b70ab5456d3c2c984408e1506,webapps/docs/changelog.xml,"Expand the session attribute filtering options
- new option to filter based on implementation class of value
- new option to log a warning message if an attribute is filtered out
- always log a message at at least debug level if an attribute is filtered out",https://github.com/apache/tomcat/commit/50f1b1da794cd93b70ab5456d3c2c984408e1506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-18,6,7,7,256,18,Global,0.011104153621373,266,23955,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,50f1b1da794cd93b70ab5456d3c2c984408e1506,webapps/docs/config/cluster-manager.xml,"Expand the session attribute filtering options
- new option to filter based on implementation class of value
- new option to log a warning message if an attribute is filtered out
- always log a message at at least debug level if an attribute is filtered out",https://github.com/apache/tomcat/commit/50f1b1da794cd93b70ab5456d3c2c984408e1506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-18,6,56,67,256,18,Global,0.143307086614173,91,635,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,50f1b1da794cd93b70ab5456d3c2c984408e1506,webapps/docs/config/manager.xml,"Expand the session attribute filtering options
- new option to filter based on implementation class of value
- new option to log a warning message if an attribute is filtered out
- always log a message at at least debug level if an attribute is filtered out",https://github.com/apache/tomcat/commit/50f1b1da794cd93b70ab5456d3c2c984408e1506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-18,6,43,47,256,18,Global,0.095566502463054,97,1015,Remy Maucherat
CVE-2016-6816,20,NA,XSS +Info,2017-3-20,2018-6-8,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The code in Apache Tomcat 9.0.0.M1 to 9.0.0.M11, 8.5.0 to 8.5.6, 8.0.0.RC1 to 8.0.38, 7.0.0 to 7.0.72, and 6.0.0 to 6.0.47 that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.",https://www.cvedetails.com/cve/CVE-2016-6816/,20160812,"Yes. Fixed in Apache Tomcat 8.0.39, 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2016-6816
The code that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.
This was fixed in revision 1767653.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 8.0.0.RC1 to 8.0.38
This was fixed in revision 1767645.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1767641.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-11,2016-11-22,2016-11-14,516bda676ac8d0284da3e0295a7df70391315360,java/org/apache/coyote/http11/Http11InputBuffer.java,"Add additional checks for valid characters to the HTTP request line
parsing so invalid request lines are rejected sooner.",https://github.com/apache/tomcat/commit/516bda676ac8d0284da3e0295a7df70391315360,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-11-2,1,8,61,69,55,Global,0.496841155234657,1101,2216,Mark Thomas
CVE-2016-6816,20,NA,XSS +Info,2017-3-20,2018-6-8,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The code in Apache Tomcat 9.0.0.M1 to 9.0.0.M11, 8.5.0 to 8.5.6, 8.0.0.RC1 to 8.0.38, 7.0.0 to 7.0.72, and 6.0.0 to 6.0.47 that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.",https://www.cvedetails.com/cve/CVE-2016-6816/,20160812,"Yes. Fixed in Apache Tomcat 8.0.39, 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2016-6816
The code that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.
This was fixed in revision 1767653.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 8.0.0.RC1 to 8.0.38
This was fixed in revision 1767645.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1767641.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-11,2016-11-22,2016-11-14,516bda676ac8d0284da3e0295a7df70391315360,test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,"Add additional checks for valid characters to the HTTP request line
parsing so invalid request lines are rejected sooner.",https://github.com/apache/tomcat/commit/516bda676ac8d0284da3e0295a7df70391315360,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-11-2,1,11,11,69,55,Global,0.922734026745914,621,673,Mark Thomas
CVE-2016-6816,20,NA,XSS +Info,2017-3-20,2018-6-8,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The code in Apache Tomcat 9.0.0.M1 to 9.0.0.M11, 8.5.0 to 8.5.6, 8.0.0.RC1 to 8.0.38, 7.0.0 to 7.0.72, and 6.0.0 to 6.0.47 that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.",https://www.cvedetails.com/cve/CVE-2016-6816/,20160812,"Yes. Fixed in Apache Tomcat 8.0.39, 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2016-6816
The code that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.
This was fixed in revision 1767653.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 8.0.0.RC1 to 8.0.38
This was fixed in revision 1767645.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1767641.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-11,2016-11-22,2016-11-14,516bda676ac8d0284da3e0295a7df70391315360,webapps/docs/changelog.xml,"Add additional checks for valid characters to the HTTP request line
parsing so invalid request lines are rejected sooner.",https://github.com/apache/tomcat/commit/516bda676ac8d0284da3e0295a7df70391315360,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-11-2,1,4,4,69,55,Global,0.072636360166419,1903,26199,Mark Emlyn David Thomas
CVE-2007-3386,79,NA,XSS,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the Host Manager Servlet for Apache Tomcat 6.0.0 to 6.0.13 and 5.5.0 to 5.5.24 allows remote attackers to inject arbitrary HTML and web script via crafted requests, as demonstrated using the aliases parameter to an html/add action.",https://www.cvedetails.com/cve/CVE-2007-3386/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html",The Host Manager Servlet did not filter user supplied data before display. This enabled an XSS attack.,No,,,2007-8-13,5202986c8f2a67bb08a360e178bc04bfe986b69b,java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java,"Fix compiler warnings.
Filter output.",https://github.com/apache/tomcat/commit/5202986c8f2a67bb08a360e178bc04bfe986b69b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-7-19,3,9,14,9,5,Local,0.06640625,34,512,Remy Maucherat
CVE-2007-5342,264,NA,,2007-12-27,2017-9-28,6.4,None,Remote,Low,Not required,Partial,Partial,None,"The default catalina.policy in the JULI logging component in Apache Tomcat 5.5.9 through 5.5.25 and 6.0.0 through 6.0.15 does not restrict certain permissions for web applications, which allows attackers to modify logging configuration options and overwrite arbitrary files, as demonstrated by changing the (1) level, (2) directory, and (3) prefix attributes in the org.apache.juli.FileHandler handler.",https://www.cvedetails.com/cve/CVE-2007-5342/,20071010,"Yes. Fixed in Apache Tomcat 5.5.26, 6.0.16:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The JULI logging component allows web applications to provide their own logging configurations. The default security policy does not restrict this configuration and allows an untrusted web application to add files or overwrite existing files where the Tomcat process has the necessary file permissions to do so.,No,,,2008-2-8,52a88ae7a48916dac7cfe22d94ff888d7d63312d,conf/catalina.policy,Fix CVE-2007-5342. Limit JULI privs to just those required to prevent per web-app configurations having too many privs.,https://github.com/apache/tomcat/commit/52a88ae7a48916dac7cfe22d94ff888d7d63312d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-12-23,1,13,14,13,1,Local,0.106032906764168,58,547,Mladen Turk
CVE-2017-5650,399,NA,,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,None,None,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.",https://www.cvedetails.com/cve/CVE-2017-5650/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2017-5650
The handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.
This was fixed in revision 1788480.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788460.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-11,2017-4-10,2017-3-30,5496e193a89b8b8b3177e516358df2f07ab852b3,java/org/apache/coyote/http2/Http2UpgradeHandler.java,Close the streams as soon as we know the connection is closing,https://github.com/apache/tomcat/commit/5496e193a89b8b8b3177e516358df2f07ab852b3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-24,4,5,5,5,0,Global,0.954636692091529,4756,4982,Mark Thomas
CVE-2016-6794,200,NA,Bypass +Info,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,Partial,None,None,"When a SecurityManager is configured, a web application's ability to read system properties should be controlled by the SecurityManager. In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70, 6.0.0 to 6.0.45 the system property replacement feature for configuration files could be used by a malicious web application to bypass the SecurityManager and read system properties that should not be visible.",https://www.cvedetails.com/cve/CVE-2016-6794/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: System Property Disclosure CVE-2016-6794
When a SecurityManager is configured, a web application's ability to read system properties should be controlled by the SecurityManager. Tomcat's system property replacement feature for configuration files could be used by a malicious web application to bypass the SecurityManager and read system properties that should not be visible.
This was fixed in revision 1754733.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1754728.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1754726 for 8.5.x and revision 1754727 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1754445.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2015-12-27,2016-10-27,2016-10-16,54cafb4dfce85780eb8bfddef20a9f895c2d1e8a,java/org/apache/tomcat/util/security/PermissionCheck.java,Fix typo,https://github.com/apache/tomcat/commit/54cafb4dfce85780eb8bfddef20a9f895c2d1e8a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-7-29,2,1,2,1,1,Global,1,45,45,Mark Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,54e58c0cd52f0aad1b4ee16968ecc9f99f91ba09,webapps/docs/changelog.xml,Add the CVE info for 7.0.10,https://github.com/apache/tomcat/commit/54e58c0cd52f0aad1b4ee16968ecc9f99f91ba09,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-8,7,1,2,1,1,Local,0.341311833375325,4064,11907,Mark Emlyn David Thomas
CVE-2014-0119,264,NA,,2014-5-31,2017-11-8,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.",https://www.cvedetails.com/cve/CVE-2014-0119/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.54, 8.0.8:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information Disclosure CVE-2014-0119
In limited circumstances it was possible for a malicious web application to replace the XML parsers used by Tomcat to process XSLTs for the default servlet, JSP documents, tag library descriptors (TLDs) and tag plugin configuration files. The injected XML parser(s) could then bypass the limits imposed on XML external entities and/or have visibility of the XML files processed for other web applications deployed on the same Tomcat instance.
This was fixed in revisions 1589640, 1593815 and 1593821.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1588199, 1589997, 1590028 and 1590036.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.53
This was fixed in revisions 1588193, 1589837, 1589980, 1589983, 1589985, 1589990 and 1589992.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.5",No,2014-4-12,2014-5-27,2014-5-23,5517c5517e8a7ddb994504f0c5c05001a376b10c,java/org/apache/jasper/compiler/TagPluginManager.java,More defensive coding around some XML activities that are triggered by web applications and are therefore at potential risk of a memory leak.,https://github.com/apache/tomcat/commit/5517c5517e8a7ddb994504f0c5c05001a376b10c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-4-25,9,31,32,31,1,Local,0.377761413843888,513,1358,Mark Emlyn David Thomas
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,561941256ada7d8af5e566a7afaa5c51e29a50c5,java/org/apache/tomcat/util/http/AcceptLanguage.java,"o.a.t.util.http
Tabs -> 8 spaces
Fix compiler warnings
No functional change",https://github.com/apache/tomcat/commit/561941256ada7d8af5e566a7afaa5c51e29a50c5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-7-6,143,27,51,178,173,Global,0.123260437375746,62,503,Mladen Turk
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,561941256ada7d8af5e566a7afaa5c51e29a50c5,java/org/apache/tomcat/util/http/BaseRequest.java,"o.a.t.util.http
Tabs -> 8 spaces
Fix compiler warnings
No functional change",https://github.com/apache/tomcat/commit/561941256ada7d8af5e566a7afaa5c51e29a50c5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-7-6,143,1,2,178,173,Global,0.014285714285714,15,1050,Mladen Turk
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,561941256ada7d8af5e566a7afaa5c51e29a50c5,java/org/apache/tomcat/util/http/Cookies.java,"o.a.t.util.http
Tabs -> 8 spaces
Fix compiler warnings
No functional change",https://github.com/apache/tomcat/commit/561941256ada7d8af5e566a7afaa5c51e29a50c5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-7-6,143,0,1,178,173,Global,0.008042895442359,12,1492,Mladen Turk
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,561941256ada7d8af5e566a7afaa5c51e29a50c5,java/org/apache/tomcat/util/http/MimeMap.java,"o.a.t.util.http
Tabs -> 8 spaces
Fix compiler warnings
No functional change",https://github.com/apache/tomcat/commit/561941256ada7d8af5e566a7afaa5c51e29a50c5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-7-6,143,14,27,178,173,Global,0.063439065108514,38,599,Mladen Turk
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,561941256ada7d8af5e566a7afaa5c51e29a50c5,java/org/apache/tomcat/util/http/Parameters.java,"o.a.t.util.http
Tabs -> 8 spaces
Fix compiler warnings
No functional change",https://github.com/apache/tomcat/commit/561941256ada7d8af5e566a7afaa5c51e29a50c5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-7-6,143,7,12,178,173,Global,0.276579050608082,705,2549,Mladen Turk
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,561941256ada7d8af5e566a7afaa5c51e29a50c5,java/org/apache/tomcat/util/http/ServerCookie.java,"o.a.t.util.http
Tabs -> 8 spaces
Fix compiler warnings
No functional change",https://github.com/apache/tomcat/commit/561941256ada7d8af5e566a7afaa5c51e29a50c5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-7-6,143,129,258,178,173,Global,0.212816455696203,269,1264,Mladen Turk
CVE-2011-0013,79,NA,XSS,2011-2-18,2018-8-13,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the HTML Manager Interface in Apache Tomcat 5.5 before 5.5.32, 6.0 before 6.0.30, and 7.0 before 7.0.6 allow remote attackers to inject arbitrary web script or HTML, as demonstrated via the display-name tag.",https://www.cvedetails.com/cve/CVE-2011-0013/,20101207,"Yes. Fixed in Apache Tomcat 5.5.32, 6.0.30, 7.0.6:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Cross-site scripting CVE-2011-0013
The HTML Manager interface displayed web application provided data, such as display names, without filtering. A malicious web application could trigger script execution by an administrative user when viewing the manager pages.
This was fixed in revision 1057518.
This was identified by the Tomcat security team on 12 Nov 2010 and made public on 5 Feb 2011.
Affects: 5.5.0-5.5.31
This was fixed in revision 1057270.
This was identified by the Tomcat security team on 12 Nov 2010 and made public on 5 Feb 2011.
Affects: 6.0.0-6.0.29
This was fixed in revision 1057279.
This was identified by the Tomcat security team on 12 Nov 2010 and made public on 5 Feb 2011.
Affects: 7.0.0-7.0.5",No,2010-11-12,2011-2-5,2011-2-1,58223c5ecc0751c3642c810f291b8f033d33b97f,java/org/apache/catalina/manager/HTMLManagerServlet.java,"Prevent XSS in Manager application
This addresses CVE-2011-0013",https://github.com/apache/tomcat/commit/58223c5ecc0751c3642c810f291b8f033d33b97f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-1-10,1,21,40,28,23,Global,0.597305919886565,1685,2821,Mark Emlyn David Thomas
CVE-2011-0013,79,NA,XSS,2011-2-18,2018-8-13,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the HTML Manager Interface in Apache Tomcat 5.5 before 5.5.32, 6.0 before 6.0.30, and 7.0 before 7.0.6 allow remote attackers to inject arbitrary web script or HTML, as demonstrated via the display-name tag.",https://www.cvedetails.com/cve/CVE-2011-0013/,20101207,"Yes. Fixed in Apache Tomcat 5.5.32, 6.0.30, 7.0.6:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Cross-site scripting CVE-2011-0013
The HTML Manager interface displayed web application provided data, such as display names, without filtering. A malicious web application could trigger script execution by an administrative user when viewing the manager pages.
This was fixed in revision 1057518.
This was identified by the Tomcat security team on 12 Nov 2010 and made public on 5 Feb 2011.
Affects: 5.5.0-5.5.31
This was fixed in revision 1057270.
This was identified by the Tomcat security team on 12 Nov 2010 and made public on 5 Feb 2011.
Affects: 6.0.0-6.0.29
This was fixed in revision 1057279.
This was identified by the Tomcat security team on 12 Nov 2010 and made public on 5 Feb 2011.
Affects: 7.0.0-7.0.5",No,2010-11-12,2011-2-5,2011-2-1,58223c5ecc0751c3642c810f291b8f033d33b97f,java/org/apache/catalina/manager/StatusTransformer.java,"Prevent XSS in Manager application
This addresses CVE-2011-0013",https://github.com/apache/tomcat/commit/58223c5ecc0751c3642c810f291b8f033d33b97f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-1-10,1,4,8,28,23,Global,0.114312267657993,123,1076,Remy Maucherat
CVE-2011-0013,79,NA,XSS,2011-2-18,2018-8-13,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the HTML Manager Interface in Apache Tomcat 5.5 before 5.5.32, 6.0 before 6.0.30, and 7.0 before 7.0.6 allow remote attackers to inject arbitrary web script or HTML, as demonstrated via the display-name tag.",https://www.cvedetails.com/cve/CVE-2011-0013/,20101207,"Yes. Fixed in Apache Tomcat 5.5.32, 6.0.30, 7.0.6:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Cross-site scripting CVE-2011-0013
The HTML Manager interface displayed web application provided data, such as display names, without filtering. A malicious web application could trigger script execution by an administrative user when viewing the manager pages.
This was fixed in revision 1057518.
This was identified by the Tomcat security team on 12 Nov 2010 and made public on 5 Feb 2011.
Affects: 5.5.0-5.5.31
This was fixed in revision 1057270.
This was identified by the Tomcat security team on 12 Nov 2010 and made public on 5 Feb 2011.
Affects: 6.0.0-6.0.29
This was fixed in revision 1057279.
This was identified by the Tomcat security team on 12 Nov 2010 and made public on 5 Feb 2011.
Affects: 7.0.0-7.0.5",No,2010-11-12,2011-2-5,2011-2-1,58223c5ecc0751c3642c810f291b8f033d33b97f,webapps/docs/changelog.xml,"Prevent XSS in Manager application
This addresses CVE-2011-0013",https://github.com/apache/tomcat/commit/58223c5ecc0751c3642c810f291b8f033d33b97f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-1-10,1,3,3,28,23,Global,0.31485113210911,3532,11218,Remy Maucherat
CVE-2014-0227,19,NA,DoS,2015-2-15,2017-11-8,6.4,None,Remote,Low,Not required,None,Partial,Partial,"java/org/apache/coyote/http11/filters/ChunkedInputFilter.java in Apache Tomcat 6.x before 6.0.42, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle attempts to continue reading data after an error has occurred, which allows remote attackers to conduct HTTP request smuggling attacks or cause a denial of service (resource consumption) by streaming data with malformed chunked transfer coding.",https://www.cvedetails.com/cve/CVE-2014-0227/,20131203,"Yes. Fixed in Apache Tomcat 6.0.43, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Request Smuggling CVE-2014-0227
It was possible to craft a malformed chunk as part of a chunked request that caused Tomcat to read part of the request body as a new request.
This was fixed in revision 1603628.
This issue was identified by the Tomcat security team on 30 May 2014 and made public on 9 February 2015.
Affects: 6.0.0 to 6.0.41
This was fixed in revision 1601333.
This issue was identified by the Tomcat security team on 30 May 2014 and made public on 9 February 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revisions 1600984, 1601329, 1601330 and 1601332.
This issue was identified by the Tomcat security team on 30 May 2014 and made public on 9 February 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-5-30,2015-2-9,2014-11-22,593a2447e6ebe465585cfa07e93b5635dffa1c70,java/org/apache/coyote/http11/filters/LocalStrings.properties,"i18n for ChunkedInputFilter error message
Add error flag to allow subsequent attempts at reading after an error to fail fast",https://github.com/apache/tomcat/commit/593a2447e6ebe465585cfa07e93b5635dffa1c70,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-6,4,25,25,87,24,Global,1,25,25,Mark Emlyn David Thomas
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/catalina/connector/Response.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,3,13,486,1418,Global,1,1581,1581,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/catalina/core/StandardContext.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,0,7,486,1418,Global,1,5619,5619,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/catalina/loader/WebappClassLoader.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,9,17,486,1418,Global,1,2351,2351,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/catalina/mbeans/DefaultContextMBean.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,3,16,486,1418,Global,1,360,360,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/catalina/mbeans/GroupMBean.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,2,14,486,1418,Global,1,221,221,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/catalina/mbeans/MemoryUserDatabaseMBean.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,12,32,486,1418,Global,1,441,441,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/catalina/mbeans/StandardContextMBean.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,3,16,486,1418,Global,1,389,389,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/catalina/mbeans/UserMBean.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,2,14,486,1418,Global,1,263,263,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/catalina/valves/ErrorReportValve.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,27,32,486,1418,Global,1,316,316,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/catalina/valves/RequestFilterValve.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,1,9,486,1418,Global,1,301,301,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/compat/Jdk14Compat.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,0,120,486,1418,Global,1,240,240,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/compat/JdkCompat.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,0,221,486,1418,Global,1,442,442,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/net/jsse/JSSE13Factory.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,0,43,486,1418,Global,1,86,86,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/net/jsse/JSSE13SocketFactory.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,0,156,486,1418,Global,1,312,312,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/net/jsse/JSSE14Factory.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,0,43,486,1418,Global,1,86,86,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/net/jsse/JSSE14SocketFactory.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,0,267,486,1418,Global,1,534,534,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/net/jsse/JSSE14Support.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,0,158,486,1418,Global,1,316,316,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/net/jsse/JSSE15Factory.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,0,41,486,1418,Global,1,82,82,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/net/jsse/JSSE15SocketFactory.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,0,163,486,1418,Global,1,326,326,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/net/jsse/JSSEFactory.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,10,13,486,1418,Global,1,55,55,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/net/jsse/JSSEImplementation.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,1,29,486,1418,Global,1,117,117,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/net/jsse/JSSESocketFactory.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,321,340,486,1418,Global,1,709,709,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,5959268bd56da00377468dd5332042e14b7c6bce,java/org/apache/tomcat/util/net/jsse/JSSESupport.java,"- Remove pre 1.5 compatibility code, which is not used anymore as the new APIs require and use JDK 1.5+. I hope I didn't make any mistake merging the SSL code.",https://github.com/apache/tomcat/commit/5959268bd56da00377468dd5332042e14b7c6bce,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-4-21,4,89,124,486,1418,Global,1,302,302,Remy Maucherat
CVE-2010-4172,79,NA,XSS,2010-11-26,2017-8-16,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Manager application in Apache Tomcat 6.0.12 through 6.0.29 and 7.0.0 through 7.0.4 allow remote attackers to inject arbitrary web script or HTML via the (1) orderBy or (2) sort parameter to sessionsList.jsp, or unspecified input to (3) sessionDetail.jsp or (4) java/org/apache/catalina/manager/JspHelper.java, related to use of untrusted web applications.",https://www.cvedetails.com/cve/CVE-2010-4172/,20101104,"Yes. Fixed in Apache Tomcat 6.0.30, 7.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Cross-site scripting CVE-2010-4172
The Manager application used the user provided parameters sort and orderBy directly without filtering thereby permitting cross-site scripting.
This was fixed in revision 1037779.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 6.0.12-6.0.29
This was fixed in revision 1037778.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 7.0.0-7.0.4",No,2010-11-15,2010-11-22,2011-1-13,5971f9392edc6d70808b2599b062b050fcd11d23,java/org/apache/catalina/manager/JspHelper.java,Fix CVE-2010-4172. Multiple XSS in Manager web application,https://github.com/apache/tomcat/commit/5971f9392edc6d70808b2599b062b050fcd11d23,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-11-22,4,1,2,19,17,Global,0.301408450704225,107,355,Remy Maucherat
CVE-2010-4172,79,NA,XSS,2010-11-26,2017-8-16,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Manager application in Apache Tomcat 6.0.12 through 6.0.29 and 7.0.0 through 7.0.4 allow remote attackers to inject arbitrary web script or HTML via the (1) orderBy or (2) sort parameter to sessionsList.jsp, or unspecified input to (3) sessionDetail.jsp or (4) java/org/apache/catalina/manager/JspHelper.java, related to use of untrusted web applications.",https://www.cvedetails.com/cve/CVE-2010-4172/,20101104,"Yes. Fixed in Apache Tomcat 6.0.30, 7.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Cross-site scripting CVE-2010-4172
The Manager application used the user provided parameters sort and orderBy directly without filtering thereby permitting cross-site scripting.
This was fixed in revision 1037779.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 6.0.12-6.0.29
This was fixed in revision 1037778.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 7.0.0-7.0.4",No,2010-11-15,2010-11-22,2011-1-13,5971f9392edc6d70808b2599b062b050fcd11d23,webapps/docs/changelog.xml,Fix CVE-2010-4172. Multiple XSS in Manager web application,https://github.com/apache/tomcat/commit/5971f9392edc6d70808b2599b062b050fcd11d23,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-11-22,4,3,3,19,17,Global,0.297297297297297,3201,10767,Remy Maucherat
CVE-2010-4172,79,NA,XSS,2010-11-26,2017-8-16,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Manager application in Apache Tomcat 6.0.12 through 6.0.29 and 7.0.0 through 7.0.4 allow remote attackers to inject arbitrary web script or HTML via the (1) orderBy or (2) sort parameter to sessionsList.jsp, or unspecified input to (3) sessionDetail.jsp or (4) java/org/apache/catalina/manager/JspHelper.java, related to use of untrusted web applications.",https://www.cvedetails.com/cve/CVE-2010-4172/,20101104,"Yes. Fixed in Apache Tomcat 6.0.30, 7.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Cross-site scripting CVE-2010-4172
The Manager application used the user provided parameters sort and orderBy directly without filtering thereby permitting cross-site scripting.
This was fixed in revision 1037779.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 6.0.12-6.0.29
This was fixed in revision 1037778.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 7.0.0-7.0.4",No,2010-11-15,2010-11-22,2011-1-13,5971f9392edc6d70808b2599b062b050fcd11d23,webapps/manager/WEB-INF/jsp/sessionDetail.jsp,Fix CVE-2010-4172. Multiple XSS in Manager web application,https://github.com/apache/tomcat/commit/5971f9392edc6d70808b2599b062b050fcd11d23,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-11-22,4,6,13,19,17,Global,0.755671902268761,433,573,Mark Emlyn David Thomas
CVE-2014-0119,264,NA,,2014-5-31,2017-11-8,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.",https://www.cvedetails.com/cve/CVE-2014-0119/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.54, 8.0.8:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information Disclosure CVE-2014-0119
In limited circumstances it was possible for a malicious web application to replace the XML parsers used by Tomcat to process XSLTs for the default servlet, JSP documents, tag library descriptors (TLDs) and tag plugin configuration files. The injected XML parser(s) could then bypass the limits imposed on XML external entities and/or have visibility of the XML files processed for other web applications deployed on the same Tomcat instance.
This was fixed in revisions 1589640, 1593815 and 1593821.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1588199, 1589997, 1590028 and 1590036.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.53
This was fixed in revisions 1588193, 1589837, 1589980, 1589983, 1589985, 1589990 and 1589992.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.5",No,2014-4-12,2014-5-27,2014-5-23,5aae1323c31d643afa9f2db80713b8e97b5123af,java/org/apache/tomcat/util/descriptor/tld/TldParser.java,More defensive coding around some XML activities that are triggered by web applications and are therefore at potential risk of a memory leak.,https://github.com/apache/tomcat/commit/5aae1323c31d643afa9f2db80713b8e97b5123af,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-4-25,9,23,23,23,0,Local,0.315789473684211,42,133,Jeremy Boynes
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,5c8560f3054982abaa476d87ec031c439d58d66e,java/org/apache/catalina/authenticator/AuthenticatorBase.java,"CVE-2011-1088
Start of fix for issue reported on users list that @ServletSecurity annotations were ignored.
This fix is not yet complete. This first part:
- Triggers the loading of the Wrapper before the constraints are processed to ensure that any @ServletSecurity annotations are taken account of
- Makes sure the constraints collection is thread-safe given new usage
- Adds scanning for @ServletSecurity when a Servlet is loaded
- Ensure there is always an authenticator when using the embedded Tomcat class so that @ServletSecurity will have an effect
- Adds a simple unit test to check @ServletSecurity annotations are processed
Further commits will add additional test cases and any changes required for those test cases to pass",https://github.com/apache/tomcat/commit/5c8560f3054982abaa476d87ec031c439d58d66e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-3,7,8,8,105,2,Global,0.162965279949953,521,3197,Mladen Turk
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,5c8560f3054982abaa476d87ec031c439d58d66e,java/org/apache/catalina/core/StandardContext.java,"CVE-2011-1088
Start of fix for issue reported on users list that @ServletSecurity annotations were ignored.
This fix is not yet complete. This first part:
- Triggers the loading of the Wrapper before the constraints are processed to ensure that any @ServletSecurity annotations are taken account of
- Makes sure the constraints collection is thread-safe given new usage
- Adds scanning for @ServletSecurity when a Servlet is loaded
- Ensure there is always an authenticator when using the embedded Tomcat class so that @ServletSecurity will have an effect
- Adds a simple unit test to check @ServletSecurity annotations are processed
Further commits will add additional test cases and any changes required for those test cases to pass",https://github.com/apache/tomcat/commit/5c8560f3054982abaa476d87ec031c439d58d66e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-3,7,2,3,105,2,Global,0.155059693007391,3273,21108,Mladen Turk
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,5c8560f3054982abaa476d87ec031c439d58d66e,java/org/apache/catalina/core/StandardWrapper.java,"CVE-2011-1088
Start of fix for issue reported on users list that @ServletSecurity annotations were ignored.
This fix is not yet complete. This first part:
- Triggers the loading of the Wrapper before the constraints are processed to ensure that any @ServletSecurity annotations are taken account of
- Makes sure the constraints collection is thread-safe given new usage
- Adds scanning for @ServletSecurity when a Servlet is loaded
- Ensure there is always an authenticator when using the embedded Tomcat class so that @ServletSecurity will have an effect
- Adds a simple unit test to check @ServletSecurity annotations are processed
Further commits will add additional test cases and any changes required for those test cases to pass",https://github.com/apache/tomcat/commit/5c8560f3054982abaa476d87ec031c439d58d66e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-3,7,13,14,105,2,Global,0.136586047812107,977,7153,Mladen Turk
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,5c8560f3054982abaa476d87ec031c439d58d66e,java/org/apache/catalina/startup/Tomcat.java,"CVE-2011-1088
Start of fix for issue reported on users list that @ServletSecurity annotations were ignored.
This fix is not yet complete. This first part:
- Triggers the loading of the Wrapper before the constraints are processed to ensure that any @ServletSecurity annotations are taken account of
- Makes sure the constraints collection is thread-safe given new usage
- Adds scanning for @ServletSecurity when a Servlet is loaded
- Ensure there is always an authenticator when using the embedded Tomcat class so that @ServletSecurity will have an effect
- Adds a simple unit test to check @ServletSecurity annotations are processed
Further commits will add additional test cases and any changes required for those test cases to pass",https://github.com/apache/tomcat/commit/5c8560f3054982abaa476d87ec031c439d58d66e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-3,7,9,9,105,2,Global,0.396099024756189,528,1333,Costin Manolache
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,5c8560f3054982abaa476d87ec031c439d58d66e,test/org/apache/catalina/core/TestStandardWrapper.java,"CVE-2011-1088
Start of fix for issue reported on users list that @ServletSecurity annotations were ignored.
This fix is not yet complete. This first part:
- Triggers the loading of the Wrapper before the constraints are processed to ensure that any @ServletSecurity annotations are taken account of
- Makes sure the constraints collection is thread-safe given new usage
- Adds scanning for @ServletSecurity when a Servlet is loaded
- Ensure there is always an authenticator when using the embedded Tomcat class so that @ServletSecurity will have an effect
- Adds a simple unit test to check @ServletSecurity annotations are processed
Further commits will add additional test cases and any changes required for those test cases to pass",https://github.com/apache/tomcat/commit/5c8560f3054982abaa476d87ec031c439d58d66e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-3,7,73,73,105,2,Global,1,73,73,Mark Emlyn David Thomas
CVE-2014-7810,284,NA,Bypass,2015-6-7,2018-7-18,5,None,Remote,Low,Not required,None,Partial,None,"The Expression Language (EL) implementation in Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.58, and 8.x before 8.0.16 does not properly consider the possibility of an accessible interface implemented by an inaccessible class, which allows attackers to bypass a SecurityManager protection mechanism via a web application that leverages use of incorrect privileges during EL evaluation.",https://www.cvedetails.com/cve/CVE-2014-7810/,20141003,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.59, 8.0.17:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Moderate: Security Manager bypass CVE-2014-7810
Malicious web applications could use expression language to bypass the protections of a Security Manager as expressions were evaluated within a privileged code section.
This was fixed in revisions 1645366 and 1659538.
This issue was identified by the Tomcat security team on 2 November 2014 and made public on 14 May 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revisions 1644019 and 1645644.
This issue was identified by the Tomcat security team on 2 November 2014 and made public on 14 May 2015.
Affects: 7.0.0 to 7.0.57
This was fixed in revisions 1644018 and 1645642.
This issue was identified by the Tomcat security team on 2 November 2014 and made public on 14 May 2015.
Affects: 8.0.0-RC1 to 8.0.15",No,2014-11-2,2015-5-14,2015-5-12,619985fbf7995521acb1477877fee41d9a54a295,java/javax/el/BeanELResolver.java,"Fix potential issue with BeanELresolver when running under a security manager.
Some classes may not be accessible but may have accessible interfaces.",https://github.com/apache/tomcat/commit/619985fbf7995521acb1477877fee41d9a54a295,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-12-9,7,27,30,27,3,Local,0.011547344110855,30,2598,Mark Emlyn David Thomas
CVE-2011-1184,264,NA,Bypass,2012-1-14,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not have the expected countermeasures against replay attacks, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests, related to lack of checking of nonce (aka server nonce) and nc (aka nonce-count or client nonce count) values.",https://www.cvedetails.com/cve/CVE-2011-1184/,20110303,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,java/org/apache/catalina/authenticator/DigestAuthenticator.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,390,499,1068,111,Global,0.297802197802198,542,1820,Mladen Turk
CVE-2011-5064,310,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"DigestAuthenticator.java in the HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 uses Catalina as the hard-coded server secret (aka private key), which makes it easier for remote attackers to bypass cryptographic protection mechanisms by leveraging knowledge of this string, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5064/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,java/org/apache/catalina/authenticator/DigestAuthenticator.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,390,499,1068,111,Global,0.297802197802198,542,1820,Mladen Turk
CVE-2011-5063,287,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check realm values, which might allow remote attackers to bypass intended access restrictions by leveraging the availability of a protection space with weaker authentication or authorization requirements, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5063/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,java/org/apache/catalina/authenticator/DigestAuthenticator.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,390,499,1068,111,Global,0.297802197802198,542,1820,Mladen Turk
CVE-2011-5062,264,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check qop values, which might allow remote attackers to bypass intended integrity-protection requirements via a qop=auth value, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5062/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,java/org/apache/catalina/authenticator/DigestAuthenticator.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,390,499,1068,111,Global,0.297802197802198,542,1820,Mladen Turk
CVE-2011-5064,310,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"DigestAuthenticator.java in the HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 uses Catalina as the hard-coded server secret (aka private key), which makes it easier for remote attackers to bypass cryptographic protection mechanisms by leveraging knowledge of this string, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5064/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,java/org/apache/catalina/authenticator/mbeans-descriptors.xml,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,20,20,1068,111,Global,0.362984218077475,253,697,Mladen Turk
CVE-2011-5063,287,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check realm values, which might allow remote attackers to bypass intended access restrictions by leveraging the availability of a protection space with weaker authentication or authorization requirements, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5063/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,java/org/apache/catalina/authenticator/mbeans-descriptors.xml,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,20,20,1068,111,Global,0.362984218077475,253,697,Mladen Turk
CVE-2011-1184,264,NA,Bypass,2012-1-14,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not have the expected countermeasures against replay attacks, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests, related to lack of checking of nonce (aka server nonce) and nc (aka nonce-count or client nonce count) values.",https://www.cvedetails.com/cve/CVE-2011-1184/,20110303,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,java/org/apache/catalina/authenticator/mbeans-descriptors.xml,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,20,20,1068,111,Global,0.362984218077475,253,697,Mladen Turk
CVE-2011-5062,264,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check qop values, which might allow remote attackers to bypass intended integrity-protection requirements via a qop=auth value, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5062/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,java/org/apache/catalina/authenticator/mbeans-descriptors.xml,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,20,20,1068,111,Global,0.362984218077475,253,697,Mladen Turk
CVE-2011-5062,264,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check qop values, which might allow remote attackers to bypass intended integrity-protection requirements via a qop=auth value, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5062/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,java/org/apache/catalina/realm/RealmBase.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,7,9,1068,111,Global,0.123982084690554,609,4912,Mladen Turk
CVE-2011-5063,287,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check realm values, which might allow remote attackers to bypass intended access restrictions by leveraging the availability of a protection space with weaker authentication or authorization requirements, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5063/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,java/org/apache/catalina/realm/RealmBase.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,7,9,1068,111,Global,0.123982084690554,609,4912,Mladen Turk
CVE-2011-5064,310,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"DigestAuthenticator.java in the HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 uses Catalina as the hard-coded server secret (aka private key), which makes it easier for remote attackers to bypass cryptographic protection mechanisms by leveraging knowledge of this string, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5064/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,java/org/apache/catalina/realm/RealmBase.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,7,9,1068,111,Global,0.123982084690554,609,4912,Mladen Turk
CVE-2011-1184,264,NA,Bypass,2012-1-14,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not have the expected countermeasures against replay attacks, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests, related to lack of checking of nonce (aka server nonce) and nc (aka nonce-count or client nonce count) values.",https://www.cvedetails.com/cve/CVE-2011-1184/,20110303,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,java/org/apache/catalina/realm/RealmBase.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,7,9,1068,111,Global,0.123982084690554,609,4912,Mladen Turk
CVE-2011-5063,287,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check realm values, which might allow remote attackers to bypass intended access restrictions by leveraging the availability of a protection space with weaker authentication or authorization requirements, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5063/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,test/org/apache/catalina/authenticator/TestDigestAuthenticator.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,349,349,1068,111,Global,1,349,349,Mark Emlyn David Thomas
CVE-2011-5064,310,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"DigestAuthenticator.java in the HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 uses Catalina as the hard-coded server secret (aka private key), which makes it easier for remote attackers to bypass cryptographic protection mechanisms by leveraging knowledge of this string, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5064/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,test/org/apache/catalina/authenticator/TestDigestAuthenticator.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,349,349,1068,111,Global,1,349,349,Mark Emlyn David Thomas
CVE-2011-5062,264,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check qop values, which might allow remote attackers to bypass intended integrity-protection requirements via a qop=auth value, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5062/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,test/org/apache/catalina/authenticator/TestDigestAuthenticator.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,349,349,1068,111,Global,1,349,349,Mark Emlyn David Thomas
CVE-2011-1184,264,NA,Bypass,2012-1-14,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not have the expected countermeasures against replay attacks, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests, related to lack of checking of nonce (aka server nonce) and nc (aka nonce-count or client nonce count) values.",https://www.cvedetails.com/cve/CVE-2011-1184/,20110303,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,test/org/apache/catalina/authenticator/TestDigestAuthenticator.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,349,349,1068,111,Global,1,349,349,Mark Emlyn David Thomas
CVE-2011-5062,264,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check qop values, which might allow remote attackers to bypass intended integrity-protection requirements via a qop=auth value, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5062/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,test/org/apache/catalina/authenticator/TesterDigestAuthenticatorPerformance.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,262,262,1068,111,Global,1,262,262,Mark Emlyn David Thomas
CVE-2011-5064,310,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"DigestAuthenticator.java in the HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 uses Catalina as the hard-coded server secret (aka private key), which makes it easier for remote attackers to bypass cryptographic protection mechanisms by leveraging knowledge of this string, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5064/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,test/org/apache/catalina/authenticator/TesterDigestAuthenticatorPerformance.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,262,262,1068,111,Global,1,262,262,Mark Emlyn David Thomas
CVE-2011-5063,287,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check realm values, which might allow remote attackers to bypass intended access restrictions by leveraging the availability of a protection space with weaker authentication or authorization requirements, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5063/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,test/org/apache/catalina/authenticator/TesterDigestAuthenticatorPerformance.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,262,262,1068,111,Global,1,262,262,Mark Emlyn David Thomas
CVE-2011-1184,264,NA,Bypass,2012-1-14,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not have the expected countermeasures against replay attacks, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests, related to lack of checking of nonce (aka server nonce) and nc (aka nonce-count or client nonce count) values.",https://www.cvedetails.com/cve/CVE-2011-1184/,20110303,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,test/org/apache/catalina/authenticator/TesterDigestAuthenticatorPerformance.java,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,262,262,1068,111,Global,1,262,262,Mark Emlyn David Thomas
CVE-2011-5064,310,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"DigestAuthenticator.java in the HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 uses Catalina as the hard-coded server secret (aka private key), which makes it easier for remote attackers to bypass cryptographic protection mechanisms by leveraging knowledge of this string, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5064/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,webapps/docs/changelog.xml,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,4,4,1068,111,Global,0.35571405148385,4339,12198,Mark Emlyn David Thomas
CVE-2011-5063,287,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check realm values, which might allow remote attackers to bypass intended access restrictions by leveraging the availability of a protection space with weaker authentication or authorization requirements, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5063/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,webapps/docs/changelog.xml,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,4,4,1068,111,Global,0.35571405148385,4339,12198,Mark Emlyn David Thomas
CVE-2011-1184,264,NA,Bypass,2012-1-14,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not have the expected countermeasures against replay attacks, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests, related to lack of checking of nonce (aka server nonce) and nc (aka nonce-count or client nonce count) values.",https://www.cvedetails.com/cve/CVE-2011-1184/,20110303,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,webapps/docs/changelog.xml,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,4,4,1068,111,Global,0.35571405148385,4339,12198,Mark Emlyn David Thomas
CVE-2011-5062,264,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check qop values, which might allow remote attackers to bypass intended integrity-protection requirements via a qop=auth value, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5062/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,webapps/docs/changelog.xml,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,4,4,1068,111,Global,0.35571405148385,4339,12198,Mark Emlyn David Thomas
CVE-2011-5064,310,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"DigestAuthenticator.java in the HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 uses Catalina as the hard-coded server secret (aka private key), which makes it easier for remote attackers to bypass cryptographic protection mechanisms by leveraging knowledge of this string, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5064/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,webapps/docs/config/valve.xml,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,34,34,1068,111,Global,0.702489374620522,1157,1647,Mark Emlyn David Thomas
CVE-2011-5063,287,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check realm values, which might allow remote attackers to bypass intended access restrictions by leveraging the availability of a protection space with weaker authentication or authorization requirements, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5063/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,webapps/docs/config/valve.xml,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,34,34,1068,111,Global,0.702489374620522,1157,1647,Mark Emlyn David Thomas
CVE-2011-1184,264,NA,Bypass,2012-1-14,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not have the expected countermeasures against replay attacks, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests, related to lack of checking of nonce (aka server nonce) and nc (aka nonce-count or client nonce count) values.",https://www.cvedetails.com/cve/CVE-2011-1184/,20110303,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,webapps/docs/config/valve.xml,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,34,34,1068,111,Global,0.702489374620522,1157,1647,Mark Emlyn David Thomas
CVE-2011-5062,264,NA,Bypass,2012-1-14,2014-3-16,4.3,None,Remote,Low,Not required,Partial,None,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.12 does not check qop values, which might allow remote attackers to bypass intended integrity-protection requirements via a qop=auth value, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2011-5062/,20120114,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.12:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Multiple weaknesses in HTTP DIGEST authentication CVE-2011-1184
Note: Mitre elected to break this issue down into multiple issues and have allocated the following additional references to parts of this issue: CVE-2011-5062, CVE-2011-5063 and CVE-2011-5064. The Apache Tomcat security team will continue to treat this as a single issue using the reference CVE-2011-1184.
The implementation of HTTP DIGEST authentication was discovered to have several weaknesses:
replay attacks were permitted
server nonces were not checked
client nonce counts were not checked
qop values were not checked
realm values were not checked
the server secret was hard-coded to a known string
The result of these weaknesses is that DIGEST authentication was only as secure as BASIC authentication.
This was fixed in revision 1159309.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1158180.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1087655.
This was identified by the Tomcat security team on 16 March 2011 and made public on 26 September 2011.
Affects: 7.0.0-7.0.11",No,2011-3-16,2011-9-26,2011-9-22,639e20992a66d7a42fb59c974db91c8a0f730a1e,webapps/docs/config/valve.xml,"Add additional configuration options to the DIGEST authenticator
This is the fix for CVE-2011-1184",https://github.com/apache/tomcat/commit/639e20992a66d7a42fb59c974db91c8a0f730a1e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,34,34,1068,111,Global,0.702489374620522,1157,1647,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,68930d283221554b30ed7b8c410ae70955b2049c,java/org/apache/catalina/connector/Request.java,"Followup to r1198696:
- Fix bug in Request#parseParameters():
Forgot to flag the main use case of parsing POST parameters as successful.
- Update comment in FailedRequestFilter.",https://github.com/apache/tomcat/commit/68930d283221554b30ed7b8c410ae70955b2049c,Konstatin Kolinko,,,,2011-11-7,561,1,1,5,3,Global,0.035194064959739,389,11053,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,68930d283221554b30ed7b8c410ae70955b2049c,java/org/apache/catalina/filters/FailedRequestFilter.java,"Followup to r1198696:
- Fix bug in Request#parseParameters():
Forgot to flag the main use case of parsing POST parameters as successful.
- Update comment in FailedRequestFilter.",https://github.com/apache/tomcat/commit/68930d283221554b30ed7b8c410ae70955b2049c,Konstatin Kolinko,,,,2011-11-7,561,4,7,5,3,Global,1,100,100,Konstantin Kolinko
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,6b2cfacf749be186ea77249a979af1d4863e47ba,test/org/apache/catalina/core/TestSwallowAbortedUploads.java,Grr. Different behaviours on different OSes,https://github.com/apache/tomcat/commit/6b2cfacf749be186ea77249a979af1d4863e47ba,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,0,1,0,1,Local,0.222222222222222,120,540,Rainer Jung
CVE-2008-5515,22,NA,Directory Traversal Bypass,2009-6-16,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, 6.0.0 through 6.0.18, and possibly earlier versions normalizes the target pathname before filtering the query string when using the RequestDispatcher method, which allows remote attackers to bypass intended access restrictions and conduct directory traversal attacks via .. (dot dot) sequences and the WEB-INF directory in a Request.",https://www.cvedetails.com/cve/CVE-2008-5515/,20081212,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Important: Information Disclosure CVE-2008-5515
When using a RequestDispatcher obtained from the Request, the target path was normalised before the query string was removed. A request that included a specially crafted request parameter could be used to access content that would otherwise be protected by a security constraint or by locating it in under the WEB-INF directory.
This was fixed in revisions 782763 and 783292.
Affects: 4.1.0-4.1.39
This was fixed in revisions 782757 and 783291.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revision 734734.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 6.0.0-6.0.18",No,2008-12-11,2009-6-8,2009-9-4,6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,java/org/apache/catalina/connector/Request.java,"Remove 3 of the essentially 4 duplicate normalise implementations.
Minor tweaks where required to use the new single implementation.
Remove unnecessary normalisation calls.
This includes the fix for CVE-2008-5515.",https://github.com/apache/tomcat/commit/6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-1-15,1,2,5,40,166,Global,0.03429271279853,280,8165,Mladen Turk
CVE-2008-5515,22,NA,Directory Traversal Bypass,2009-6-16,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, 6.0.0 through 6.0.18, and possibly earlier versions normalizes the target pathname before filtering the query string when using the RequestDispatcher method, which allows remote attackers to bypass intended access restrictions and conduct directory traversal attacks via .. (dot dot) sequences and the WEB-INF directory in a Request.",https://www.cvedetails.com/cve/CVE-2008-5515/,20081212,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Important: Information Disclosure CVE-2008-5515
When using a RequestDispatcher obtained from the Request, the target path was normalised before the query string was removed. A request that included a specially crafted request parameter could be used to access content that would otherwise be protected by a security constraint or by locating it in under the WEB-INF directory.
This was fixed in revisions 782763 and 783292.
Affects: 4.1.0-4.1.39
This was fixed in revisions 782757 and 783291.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revision 734734.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 6.0.0-6.0.18",No,2008-12-11,2009-6-8,2009-9-4,6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,java/org/apache/catalina/core/ApplicationContext.java,"Remove 3 of the essentially 4 duplicate normalise implementations.
Minor tweaks where required to use the new single implementation.
Remove unnecessary normalisation calls.
This includes the fix for CVE-2008-5515.",https://github.com/apache/tomcat/commit/6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-1-15,1,9,53,40,166,Global,0.113348676639816,394,3476,Mladen Turk
CVE-2008-5515,22,NA,Directory Traversal Bypass,2009-6-16,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, 6.0.0 through 6.0.18, and possibly earlier versions normalizes the target pathname before filtering the query string when using the RequestDispatcher method, which allows remote attackers to bypass intended access restrictions and conduct directory traversal attacks via .. (dot dot) sequences and the WEB-INF directory in a Request.",https://www.cvedetails.com/cve/CVE-2008-5515/,20081212,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Important: Information Disclosure CVE-2008-5515
When using a RequestDispatcher obtained from the Request, the target path was normalised before the query string was removed. A request that included a specially crafted request parameter could be used to access content that would otherwise be protected by a security constraint or by locating it in under the WEB-INF directory.
This was fixed in revisions 782763 and 783292.
Affects: 4.1.0-4.1.39
This was fixed in revisions 782757 and 783291.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revision 734734.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 6.0.0-6.0.18",No,2008-12-11,2009-6-8,2009-9-4,6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,java/org/apache/catalina/core/ApplicationHttpRequest.java,"Remove 3 of the essentially 4 duplicate normalise implementations.
Minor tweaks where required to use the new single implementation.
Remove unnecessary normalisation calls.
This includes the fix for CVE-2008-5515.",https://github.com/apache/tomcat/commit/6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-1-15,1,2,5,40,166,Global,0.021291208791209,62,2912,Mladen Turk
CVE-2008-5515,22,NA,Directory Traversal Bypass,2009-6-16,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, 6.0.0 through 6.0.18, and possibly earlier versions normalizes the target pathname before filtering the query string when using the RequestDispatcher method, which allows remote attackers to bypass intended access restrictions and conduct directory traversal attacks via .. (dot dot) sequences and the WEB-INF directory in a Request.",https://www.cvedetails.com/cve/CVE-2008-5515/,20081212,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Important: Information Disclosure CVE-2008-5515
When using a RequestDispatcher obtained from the Request, the target path was normalised before the query string was removed. A request that included a specially crafted request parameter could be used to access content that would otherwise be protected by a security constraint or by locating it in under the WEB-INF directory.
This was fixed in revisions 782763 and 783292.
Affects: 4.1.0-4.1.39
This was fixed in revisions 782757 and 783291.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revision 734734.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 6.0.0-6.0.18",No,2008-12-11,2009-6-8,2009-9-4,6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,java/org/apache/catalina/servlets/WebdavServlet.java,"Remove 3 of the essentially 4 duplicate normalise implementations.
Minor tweaks where required to use the new single implementation.
Remove unnecessary normalisation calls.
This includes the fix for CVE-2008-5515.",https://github.com/apache/tomcat/commit/6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-1-15,1,3,67,40,166,Global,0.047295907875797,460,9726,Mladen Turk
CVE-2008-5515,22,NA,Directory Traversal Bypass,2009-6-16,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, 6.0.0 through 6.0.18, and possibly earlier versions normalizes the target pathname before filtering the query string when using the RequestDispatcher method, which allows remote attackers to bypass intended access restrictions and conduct directory traversal attacks via .. (dot dot) sequences and the WEB-INF directory in a Request.",https://www.cvedetails.com/cve/CVE-2008-5515/,20081212,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Important: Information Disclosure CVE-2008-5515
When using a RequestDispatcher obtained from the Request, the target path was normalised before the query string was removed. A request that included a specially crafted request parameter could be used to access content that would otherwise be protected by a security constraint or by locating it in under the WEB-INF directory.
This was fixed in revisions 782763 and 783292.
Affects: 4.1.0-4.1.39
This was fixed in revisions 782757 and 783291.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revision 734734.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 6.0.0-6.0.18",No,2008-12-11,2009-6-8,2009-9-4,6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,java/org/apache/catalina/ssi/SSIServletExternalResolver.java,"Remove 3 of the essentially 4 duplicate normalise implementations.
Minor tweaks where required to use the new single implementation.
Remove unnecessary normalisation calls.
This includes the fix for CVE-2008-5515.",https://github.com/apache/tomcat/commit/6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-1-15,1,3,5,40,166,Global,0.023269012485812,41,1762,Mladen Turk
CVE-2008-5515,22,NA,Directory Traversal Bypass,2009-6-16,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, 6.0.0 through 6.0.18, and possibly earlier versions normalizes the target pathname before filtering the query string when using the RequestDispatcher method, which allows remote attackers to bypass intended access restrictions and conduct directory traversal attacks via .. (dot dot) sequences and the WEB-INF directory in a Request.",https://www.cvedetails.com/cve/CVE-2008-5515/,20081212,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Important: Information Disclosure CVE-2008-5515
When using a RequestDispatcher obtained from the Request, the target path was normalised before the query string was removed. A request that included a specially crafted request parameter could be used to access content that would otherwise be protected by a security constraint or by locating it in under the WEB-INF directory.
This was fixed in revisions 782763 and 783292.
Affects: 4.1.0-4.1.39
This was fixed in revisions 782757 and 783291.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revision 734734.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 6.0.0-6.0.18",No,2008-12-11,2009-6-8,2009-9-4,6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,java/org/apache/catalina/util/RequestUtil.java,"Remove 3 of the essentially 4 duplicate normalise implementations.
Minor tweaks where required to use the new single implementation.
Remove unnecessary normalisation calls.
This includes the fix for CVE-2008-5515.",https://github.com/apache/tomcat/commit/6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-1-15,1,16,16,40,166,Global,0.118634583100168,212,1787,Mladen Turk
CVE-2008-5515,22,NA,Directory Traversal Bypass,2009-6-16,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, 6.0.0 through 6.0.18, and possibly earlier versions normalizes the target pathname before filtering the query string when using the RequestDispatcher method, which allows remote attackers to bypass intended access restrictions and conduct directory traversal attacks via .. (dot dot) sequences and the WEB-INF directory in a Request.",https://www.cvedetails.com/cve/CVE-2008-5515/,20081212,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Important: Information Disclosure CVE-2008-5515
When using a RequestDispatcher obtained from the Request, the target path was normalised before the query string was removed. A request that included a specially crafted request parameter could be used to access content that would otherwise be protected by a security constraint or by locating it in under the WEB-INF directory.
This was fixed in revisions 782763 and 783292.
Affects: 4.1.0-4.1.39
This was fixed in revisions 782757 and 783291.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revision 734734.
This was first reported to the Tomcat security team on 11 Dec 2008 and made public on 8 Jun 2009.
Affects: 6.0.0-6.0.18",No,2008-12-11,2009-6-8,2009-9-4,6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,java/org/apache/naming/resources/FileDirContext.java,"Remove 3 of the essentially 4 duplicate normalise implementations.
Minor tweaks where required to use the new single implementation.
Remove unnecessary normalisation calls.
This includes the fix for CVE-2008-5515.",https://github.com/apache/tomcat/commit/6b61911f94d6d8d49ee933c5f1882a7e7c336d2c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-1-15,1,2,43,40,166,Global,0.02572347266881,104,4043,Mladen Turk
CVE-2007-5333,200,NA,+Info,2008-2-11,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.0 through 6.0.14, 5.5.0 through 5.5.25, and 4.1.0 through 4.1.36 does not properly handle (1) double quote ("") characters or (2) %5C (encoded backslash) sequences in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks. NOTE: this issue exists because of an incomplete fix for CVE-2007-3385.",https://www.cvedetails.com/cve/CVE-2007-5333/,20071010,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The previous fix for CVE-2007-3385 was incomplete. It did not consider the use of quotes or %5C within a cookie value.,No,,,2008-2-8,6d31b36cd4a8c69b2cd799420011ef78e2d1ef44,java/org/apache/catalina/connector/Request.java,Add cookie patch to trunk to keep it up to date,https://github.com/apache/tomcat/commit/6d31b36cd4a8c69b2cd799420011ef78e2d1ef44,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-11-14,117,27,34,87,30,Global,0.006562342251388,52,7924,Mladen Turk
CVE-2007-5333,200,NA,+Info,2008-2-11,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.0 through 6.0.14, 5.5.0 through 5.5.25, and 4.1.0 through 4.1.36 does not properly handle (1) double quote ("") characters or (2) %5C (encoded backslash) sequences in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks. NOTE: this issue exists because of an incomplete fix for CVE-2007-3385.",https://www.cvedetails.com/cve/CVE-2007-5333/,20071010,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The previous fix for CVE-2007-3385 was incomplete. It did not consider the use of quotes or %5C within a cookie value.,No,,,2008-2-8,6d31b36cd4a8c69b2cd799420011ef78e2d1ef44,java/org/apache/catalina/connector/Response.java,Add cookie patch to trunk to keep it up to date,https://github.com/apache/tomcat/commit/6d31b36cd4a8c69b2cd799420011ef78e2d1ef44,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-11-14,117,4,7,87,30,Global,0.004158004158004,20,4810,Mladen Turk
CVE-2007-5333,200,NA,+Info,2008-2-11,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.0 through 6.0.14, 5.5.0 through 5.5.25, and 4.1.0 through 4.1.36 does not properly handle (1) double quote ("") characters or (2) %5C (encoded backslash) sequences in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks. NOTE: this issue exists because of an incomplete fix for CVE-2007-3385.",https://www.cvedetails.com/cve/CVE-2007-5333/,20071010,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The previous fix for CVE-2007-3385 was incomplete. It did not consider the use of quotes or %5C within a cookie value.,No,,,2008-2-8,6d31b36cd4a8c69b2cd799420011ef78e2d1ef44,java/org/apache/tomcat/util/http/Cookies.java,Add cookie patch to trunk to keep it up to date,https://github.com/apache/tomcat/commit/6d31b36cd4a8c69b2cd799420011ef78e2d1ef44,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-11-14,117,1,2,87,30,Global,0.015004840271055,31,2066,Remy Maucherat
CVE-2007-5333,200,NA,+Info,2008-2-11,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.0 through 6.0.14, 5.5.0 through 5.5.25, and 4.1.0 through 4.1.36 does not properly handle (1) double quote ("") characters or (2) %5C (encoded backslash) sequences in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks. NOTE: this issue exists because of an incomplete fix for CVE-2007-3385.",https://www.cvedetails.com/cve/CVE-2007-5333/,20071010,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The previous fix for CVE-2007-3385 was incomplete. It did not consider the use of quotes or %5C within a cookie value.,No,,,2008-2-8,6d31b36cd4a8c69b2cd799420011ef78e2d1ef44,java/org/apache/tomcat/util/http/ServerCookie.java,Add cookie patch to trunk to keep it up to date,https://github.com/apache/tomcat/commit/6d31b36cd4a8c69b2cd799420011ef78e2d1ef44,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-11-14,117,55,74,87,30,Global,0.292171995589857,530,1814,Mladen Turk
CVE-2017-5650,399,NA,,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,None,None,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.",https://www.cvedetails.com/cve/CVE-2017-5650/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2017-5650
The handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.
This was fixed in revision 1788480.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788460.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-11,2017-4-10,2017-3-30,6f973cd8bb271f19098a1731e6b28d3c7ea4f9b5,java/org/apache/coyote/http2/Http2UpgradeHandler.java,"Should be tracking max *active* stream ID
Found with the h2spec tool written by Moto Ishizawa.",https://github.com/apache/tomcat/commit/6f973cd8bb271f19098a1731e6b28d3c7ea4f9b5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-26,4,5,14,5,9,Local,0.95493519441675,4789,5015,Mark Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,6fe2d55f19df843ab8ac1be336aa769d6a996af2,java/org/apache/catalina/ha/ClusterManager.java,Review Javadoc for Manager hierarchy. Remove unnecessary duplication.,https://github.com/apache/tomcat/commit/6fe2d55f19df843ab8ac1be336aa769d6a996af2,asf-sync-process,,,,2016-1-16,6,8,8,52,296,Global,0.01305057096248,8,613,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,6fe2d55f19df843ab8ac1be336aa769d6a996af2,java/org/apache/catalina/ha/session/ClusterManagerBase.java,Review Javadoc for Manager hierarchy. Remove unnecessary duplication.,https://github.com/apache/tomcat/commit/6fe2d55f19df843ab8ac1be336aa769d6a996af2,asf-sync-process,,,,2016-1-16,6,4,15,52,296,Global,0.020215633423181,15,742,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,6fe2d55f19df843ab8ac1be336aa769d6a996af2,java/org/apache/catalina/ha/session/DeltaManager.java,Review Javadoc for Manager hierarchy. Remove unnecessary duplication.,https://github.com/apache/tomcat/commit/6fe2d55f19df843ab8ac1be336aa769d6a996af2,asf-sync-process,,,,2016-1-16,6,5,50,52,296,Global,0.00531406100542,50,9409,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,6fe2d55f19df843ab8ac1be336aa769d6a996af2,java/org/apache/catalina/session/ManagerBase.java,Review Javadoc for Manager hierarchy. Remove unnecessary duplication.,https://github.com/apache/tomcat/commit/6fe2d55f19df843ab8ac1be336aa769d6a996af2,asf-sync-process,,,,2016-1-16,6,25,215,52,296,Global,0.030904125341383,215,6957,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,6fe2d55f19df843ab8ac1be336aa769d6a996af2,java/org/apache/catalina/session/PersistentManager.java,Review Javadoc for Manager hierarchy. Remove unnecessary duplication.,https://github.com/apache/tomcat/commit/6fe2d55f19df843ab8ac1be336aa769d6a996af2,asf-sync-process,,,,2016-1-16,6,2,9,52,296,Global,0.031358885017422,9,287,Mladen Turk
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,6fe2d55f19df843ab8ac1be336aa769d6a996af2,java/org/apache/catalina/session/PersistentManagerBase.java,Review Javadoc for Manager hierarchy. Remove unnecessary duplication.,https://github.com/apache/tomcat/commit/6fe2d55f19df843ab8ac1be336aa769d6a996af2,asf-sync-process,,,,2016-1-16,6,8,32,52,296,Global,0.006936917407327,32,4613,Mladen Turk
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,6fe2d55f19df843ab8ac1be336aa769d6a996af2,java/org/apache/catalina/session/StandardManager.java,Review Javadoc for Manager hierarchy. Remove unnecessary duplication.,https://github.com/apache/tomcat/commit/6fe2d55f19df843ab8ac1be336aa769d6a996af2,asf-sync-process,,,,2016-1-16,6,0,19,52,296,Global,0.005681818181818,19,3344,Mladen Turk
CVE-2009-2901,264,NA,Bypass +Info,2010-1-28,2017-8-16,4.3,None,Remote,Medium,Not required,Partial,None,None,"The autodeployment process in Apache Tomcat 5.5.0 through 5.5.28 and 6.0.0 through 6.0.20, when autoDeploy is enabled, deploys appBase files that remain from a failed undeploy, which might allow remote attackers to bypass intended authentication requirements via HTTP requests.",https://www.cvedetails.com/cve/CVE-2009-2901/,20090820,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Insecure partial deploy after failed undeploy CVE-2009-2901
By default, Tomcat automatically deploys any directories placed in a host's appBase. This behaviour is controlled by the autoDeploy attribute of a host which defaults to true. After a failed undeploy, the remaining files will be deployed as a result of the autodeployment process. Depending on circumstances, files normally protected by one or more security constraints may be deployed without those security constraints, making them accessible without authentication. This issue only affects Windows platforms
This was fixed in revision 902650.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 5.5.0-5.5.28 (Windows only)
This was fixed in revision 892815.
This was first reported to the Tomcat security team on 30 Jul 2009 and made public on 1 Mar 2010.
Affects: 6.0.0-6.0.20 (Windows only)",No,2009-7-30,2010-3-1,2010-4-20,6feb6d785cc18708195404ca44f6963c4f509947,java/org/apache/catalina/startup/HostConfig.java,Fix comment typo,https://github.com/apache/tomcat/commit/6feb6d785cc18708195404ca44f6963c4f509947,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-12-21,1,1,2,1,1,Local,0.120495006513244,555,4606,Mladen Turk
CVE-2018-1304,254,NA,,2018-2-28,2018-8-29,4.3,None,Remote,Medium,Not required,Partial,None,None,"The URL pattern of """" (the empty string) which exactly maps to the context root was not correctly handled in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 when used as part of a security constraint definition. This caused the constraint to be ignored. It was, therefore, possible for unauthorised users to gain access to web application resources that should have been protected. Only security constraints with a URL pattern of the empty string were affected.",https://www.cvedetails.com/cve/CVE-2018-1304/,20171207,"Yes. Fixed in Apache Tomcat 7.0.85, 8.0.50, 8.5.28, 9.0.5:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security constraints mapped to context root are ignored CVE-2018-1304
The URL pattern of """" (the empty string) which exactly maps to the context root was not correctly handled when used as part of a security constraint definition. This caused the constraint to be ignored. It was, therefore, possible for unauthorised users to gain access to web application resources that should have been protected. Only security constraints with a URL pattern of the empty string were affected.
This was fixed in revision 1823309.
This issue was reported publicly as 62067 on 31 January 2018 and the security implications identified by the Apache Tomcat Security Team the same day. It was made public on 23 February 2018.
Affects: 7.0.0 to 7.0.84
This was fixed in revision 1823308.
This issue was reported publicly as 62067 on 31 January 2018 and the security implications identified by the Apache Tomcat Security Team the same day. It was made public on 23 February 2018.
Affects: 8.0.0.RC1 to 8.0.49
This was fixed in revision 1823307.
This issue was reported publicly as 62067 on 31 January 2018 and the security implications identified by the Apache Tomcat Security Team the same day. It was made public on 23 February 2018.
Affects: 8.5.0 to 8.5.27
This was fixed in revision 1823306.
This issue was reported publicly as 62067 on 31 January 2018 and the security implications identified by the Apache Tomcat Security Team the same day. It was made public on 23 February 2018.
Affects: 9.0.0.M1 to 9.0.4",No,2018-1-31,2018-2-23,2018-2-13,723ea6a5bc5e7bc49e5ef84273c3b3c164a6a4fd,java/org/apache/catalina/realm/RealmBase.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=62067
Correctly apply security constraints mapped to the context root using a URL pattern of """"",https://github.com/apache/tomcat/commit/723ea6a5bc5e7bc49e5ef84273c3b3c164a6a4fd,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2018-2-6,1,4,7,8,3,Global,0.084873690696242,551,6492,Mladen Turk
CVE-2018-1304,254,NA,,2018-2-28,2018-8-29,4.3,None,Remote,Medium,Not required,Partial,None,None,"The URL pattern of """" (the empty string) which exactly maps to the context root was not correctly handled in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 when used as part of a security constraint definition. This caused the constraint to be ignored. It was, therefore, possible for unauthorised users to gain access to web application resources that should have been protected. Only security constraints with a URL pattern of the empty string were affected.",https://www.cvedetails.com/cve/CVE-2018-1304/,20171207,"Yes. Fixed in Apache Tomcat 7.0.85, 8.0.50, 8.5.28, 9.0.5:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security constraints mapped to context root are ignored CVE-2018-1304
The URL pattern of """" (the empty string) which exactly maps to the context root was not correctly handled when used as part of a security constraint definition. This caused the constraint to be ignored. It was, therefore, possible for unauthorised users to gain access to web application resources that should have been protected. Only security constraints with a URL pattern of the empty string were affected.
This was fixed in revision 1823309.
This issue was reported publicly as 62067 on 31 January 2018 and the security implications identified by the Apache Tomcat Security Team the same day. It was made public on 23 February 2018.
Affects: 7.0.0 to 7.0.84
This was fixed in revision 1823308.
This issue was reported publicly as 62067 on 31 January 2018 and the security implications identified by the Apache Tomcat Security Team the same day. It was made public on 23 February 2018.
Affects: 8.0.0.RC1 to 8.0.49
This was fixed in revision 1823307.
This issue was reported publicly as 62067 on 31 January 2018 and the security implications identified by the Apache Tomcat Security Team the same day. It was made public on 23 February 2018.
Affects: 8.5.0 to 8.5.27
This was fixed in revision 1823306.
This issue was reported publicly as 62067 on 31 January 2018 and the security implications identified by the Apache Tomcat Security Team the same day. It was made public on 23 February 2018.
Affects: 9.0.0.M1 to 9.0.4",No,2018-1-31,2018-2-23,2018-2-13,723ea6a5bc5e7bc49e5ef84273c3b3c164a6a4fd,webapps/docs/changelog.xml,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=62067
Correctly apply security constraints mapped to the context root using a URL pattern of """"",https://github.com/apache/tomcat/commit/723ea6a5bc5e7bc49e5ef84273c3b3c164a6a4fd,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2018-2-6,1,4,4,8,3,Global,0.140792509159995,4150,29476,Mark Emlyn David Thomas
CVE-2011-2204,200,NA,+Info,2011-6-29,2018-1-5,1.9,None,Local,Medium,Not required,Partial,None,None,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.17, when the MemoryUserDatabase is used, creates log entries containing passwords upon encountering errors in JMX user creation, which allows local users to obtain sensitive information by reading a log file.",https://www.cvedetails.com/cve/CVE-2011-2204/,20110531,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2204
When using the MemoryUserDatabase (based on tomcat-users.xml) and creating users via JMX, an exception during the user creation process may trigger an error message in the JMX client that includes the user's password. This error message is also written to the Tomcat logs. User passwords are visible to administrators with JMX access and/or administrators with read access to the tomcat-users.xml file. Users that do not have these permissions but are able to read log files may be able to discover a user's password.
This was fixed in revision 1140072.
This was identified by Polina Genova on 14 June 2011 and made public on 27 June 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1140071.
This was identified by Polina Genova on 14 June 2011 and made public on 27 June 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1140070.
This was identified by Polina Genova on 14 June 2011 and made public on 27 June 2011.
Affects: 7.0.0-7.0.16",No,2011-6-14,2011-6-27,2011-9-22,763a56b45999653ce648a18462b8a826809215b1,java/org/apache/catalina/mbeans/MemoryUserDatabaseMBean.java,"Fix CVE-2011-2204.
Prevent user passwords appearing in log files if a runtime exception (e.g. OOME) occurs while creating a new user for a MemoryUserDatabase via JMX.",https://github.com/apache/tomcat/commit/763a56b45999653ce648a18462b8a826809215b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-27,1,9,18,63,12,Global,0.047876447876448,62,1295,Mladen Turk
CVE-2011-2204,200,NA,+Info,2011-6-29,2018-1-5,1.9,None,Local,Medium,Not required,Partial,None,None,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.17, when the MemoryUserDatabase is used, creates log entries containing passwords upon encountering errors in JMX user creation, which allows local users to obtain sensitive information by reading a log file.",https://www.cvedetails.com/cve/CVE-2011-2204/,20110531,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2204
When using the MemoryUserDatabase (based on tomcat-users.xml) and creating users via JMX, an exception during the user creation process may trigger an error message in the JMX client that includes the user's password. This error message is also written to the Tomcat logs. User passwords are visible to administrators with JMX access and/or administrators with read access to the tomcat-users.xml file. Users that do not have these permissions but are able to read log files may be able to discover a user's password.
This was fixed in revision 1140072.
This was identified by Polina Genova on 14 June 2011 and made public on 27 June 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1140071.
This was identified by Polina Genova on 14 June 2011 and made public on 27 June 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1140070.
This was identified by Polina Genova on 14 June 2011 and made public on 27 June 2011.
Affects: 7.0.0-7.0.16",No,2011-6-14,2011-6-27,2011-9-22,763a56b45999653ce648a18462b8a826809215b1,java/org/apache/catalina/users/MemoryUser.java,"Fix CVE-2011-2204.
Prevent user passwords appearing in log files if a runtime exception (e.g. OOME) occurs while creating a new user for a MemoryUserDatabase via JMX.",https://github.com/apache/tomcat/commit/763a56b45999653ce648a18462b8a826809215b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-27,1,48,50,63,12,Global,0.094608341810783,93,983,Mladen Turk
CVE-2011-2204,200,NA,+Info,2011-6-29,2018-1-5,1.9,None,Local,Medium,Not required,Partial,None,None,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.17, when the MemoryUserDatabase is used, creates log entries containing passwords upon encountering errors in JMX user creation, which allows local users to obtain sensitive information by reading a log file.",https://www.cvedetails.com/cve/CVE-2011-2204/,20110531,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2204
When using the MemoryUserDatabase (based on tomcat-users.xml) and creating users via JMX, an exception during the user creation process may trigger an error message in the JMX client that includes the user's password. This error message is also written to the Tomcat logs. User passwords are visible to administrators with JMX access and/or administrators with read access to the tomcat-users.xml file. Users that do not have these permissions but are able to read log files may be able to discover a user's password.
This was fixed in revision 1140072.
This was identified by Polina Genova on 14 June 2011 and made public on 27 June 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1140071.
This was identified by Polina Genova on 14 June 2011 and made public on 27 June 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1140070.
This was identified by Polina Genova on 14 June 2011 and made public on 27 June 2011.
Affects: 7.0.0-7.0.16",No,2011-6-14,2011-6-27,2011-9-22,763a56b45999653ce648a18462b8a826809215b1,java/org/apache/catalina/users/MemoryUserDatabase.java,"Fix CVE-2011-2204.
Prevent user passwords appearing in log files if a runtime exception (e.g. OOME) occurs while creating a new user for a MemoryUserDatabase via JMX.",https://github.com/apache/tomcat/commit/763a56b45999653ce648a18462b8a826809215b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-27,1,1,2,63,12,Global,0.067998463311564,177,2603,Mladen Turk
CVE-2011-2204,200,NA,+Info,2011-6-29,2018-1-5,1.9,None,Local,Medium,Not required,Partial,None,None,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.17, when the MemoryUserDatabase is used, creates log entries containing passwords upon encountering errors in JMX user creation, which allows local users to obtain sensitive information by reading a log file.",https://www.cvedetails.com/cve/CVE-2011-2204/,20110531,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2204
When using the MemoryUserDatabase (based on tomcat-users.xml) and creating users via JMX, an exception during the user creation process may trigger an error message in the JMX client that includes the user's password. This error message is also written to the Tomcat logs. User passwords are visible to administrators with JMX access and/or administrators with read access to the tomcat-users.xml file. Users that do not have these permissions but are able to read log files may be able to discover a user's password.
This was fixed in revision 1140072.
This was identified by Polina Genova on 14 June 2011 and made public on 27 June 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1140071.
This was identified by Polina Genova on 14 June 2011 and made public on 27 June 2011.
Affects: 6.0.0-6.0.32
This was fixed in revision 1140070.
This was identified by Polina Genova on 14 June 2011 and made public on 27 June 2011.
Affects: 7.0.0-7.0.16",No,2011-6-14,2011-6-27,2011-9-22,763a56b45999653ce648a18462b8a826809215b1,webapps/docs/changelog.xml,"Fix CVE-2011-2204.
Prevent user passwords appearing in log files if a runtime exception (e.g. OOME) occurs while creating a new user for a MemoryUserDatabase via JMX.",https://github.com/apache/tomcat/commit/763a56b45999653ce648a18462b8a826809215b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-27,1,5,5,63,12,Global,0.380700544186403,4967,13047,Mark Emlyn David Thomas
CVE-2014-0119,264,NA,,2014-5-31,2017-11-8,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.",https://www.cvedetails.com/cve/CVE-2014-0119/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.54, 8.0.8:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information Disclosure CVE-2014-0119
In limited circumstances it was possible for a malicious web application to replace the XML parsers used by Tomcat to process XSLTs for the default servlet, JSP documents, tag library descriptors (TLDs) and tag plugin configuration files. The injected XML parser(s) could then bypass the limits imposed on XML external entities and/or have visibility of the XML files processed for other web applications deployed on the same Tomcat instance.
This was fixed in revisions 1589640, 1593815 and 1593821.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1588199, 1589997, 1590028 and 1590036.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.53
This was fixed in revisions 1588193, 1589837, 1589980, 1589983, 1589985, 1589990 and 1589992.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.5",No,2014-4-12,2014-5-27,2014-5-23,769477b9bc8442db3f571385fa0c3e206242cbf1,java/org/apache/catalina/servlets/DefaultServlet.java,Add some defensive coding around some XML activities that are triggered by web applications and are therefore at potential risk of a memory leak.,https://github.com/apache/tomcat/commit/769477b9bc8442db3f571385fa0c3e206242cbf1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-4-24,9,28,30,85,25,Global,0.217750027873787,1953,8969,Mladen Turk
CVE-2014-0119,264,NA,,2014-5-31,2017-11-8,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.",https://www.cvedetails.com/cve/CVE-2014-0119/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.54, 8.0.8:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information Disclosure CVE-2014-0119
In limited circumstances it was possible for a malicious web application to replace the XML parsers used by Tomcat to process XSLTs for the default servlet, JSP documents, tag library descriptors (TLDs) and tag plugin configuration files. The injected XML parser(s) could then bypass the limits imposed on XML external entities and/or have visibility of the XML files processed for other web applications deployed on the same Tomcat instance.
This was fixed in revisions 1589640, 1593815 and 1593821.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1588199, 1589997, 1590028 and 1590036.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.53
This was fixed in revisions 1588193, 1589837, 1589980, 1589983, 1589985, 1589990 and 1589992.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.5",No,2014-4-12,2014-5-27,2014-5-23,769477b9bc8442db3f571385fa0c3e206242cbf1,java/org/apache/jasper/compiler/JspDocumentParser.java,Add some defensive coding around some XML activities that are triggered by web applications and are therefore at potential risk of a memory leak.,https://github.com/apache/tomcat/commit/769477b9bc8442db3f571385fa0c3e206242cbf1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-4-24,9,51,74,85,25,Global,0.10751818916734,532,4948,Mladen Turk
CVE-2014-0119,264,NA,,2014-5-31,2017-11-8,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.",https://www.cvedetails.com/cve/CVE-2014-0119/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.54, 8.0.8:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information Disclosure CVE-2014-0119
In limited circumstances it was possible for a malicious web application to replace the XML parsers used by Tomcat to process XSLTs for the default servlet, JSP documents, tag library descriptors (TLDs) and tag plugin configuration files. The injected XML parser(s) could then bypass the limits imposed on XML external entities and/or have visibility of the XML files processed for other web applications deployed on the same Tomcat instance.
This was fixed in revisions 1589640, 1593815 and 1593821.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1588199, 1589997, 1590028 and 1590036.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.53
This was fixed in revisions 1588193, 1589837, 1589980, 1589983, 1589985, 1589990 and 1589992.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.5",No,2014-4-12,2014-5-27,2014-5-23,769477b9bc8442db3f571385fa0c3e206242cbf1,res/checkstyle/org-import-control.xml,Add some defensive coding around some XML activities that are triggered by web applications and are therefore at potential risk of a memory leak.,https://github.com/apache/tomcat/commit/769477b9bc8442db3f571385fa0c3e206242cbf1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-4-24,9,1,1,85,25,Global,0.980582524271845,202,206,Mark Emlyn David Thomas
CVE-2014-0119,264,NA,,2014-5-31,2017-11-8,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.",https://www.cvedetails.com/cve/CVE-2014-0119/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.54, 8.0.8:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information Disclosure CVE-2014-0119
In limited circumstances it was possible for a malicious web application to replace the XML parsers used by Tomcat to process XSLTs for the default servlet, JSP documents, tag library descriptors (TLDs) and tag plugin configuration files. The injected XML parser(s) could then bypass the limits imposed on XML external entities and/or have visibility of the XML files processed for other web applications deployed on the same Tomcat instance.
This was fixed in revisions 1589640, 1593815 and 1593821.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1588199, 1589997, 1590028 and 1590036.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.53
This was fixed in revisions 1588193, 1589837, 1589980, 1589983, 1589985, 1589990 and 1589992.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.5",No,2014-4-12,2014-5-27,2014-5-23,769477b9bc8442db3f571385fa0c3e206242cbf1,webapps/docs/changelog.xml,Add some defensive coding around some XML activities that are triggered by web applications and are therefore at potential risk of a memory leak.,https://github.com/apache/tomcat/commit/769477b9bc8442db3f571385fa0c3e206242cbf1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-4-24,9,5,5,85,25,Global,0.531264992803454,9966,18759,Mark Emlyn David Thomas
CVE-2016-0763,264,NA,DoS Bypass,2016-2-24,2018-6-1,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The setGlobalContext method in org/apache/naming/factory/ResourceLinkFactory.java in Apache Tomcat 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M3 does not consider whether ResourceLinkFactory.setGlobalContext callers are authorized, which allows remote authenticated users to bypass intended SecurityManager restrictions and read or write to arbitrary application data, or cause a denial of service (application disruption), via a web application that sets a crafted global context.",https://www.cvedetails.com/cve/CVE-2016-0763/,20151216,"Yes. Fixed in Apache Tomcat 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0763
This issue only affects users running untrusted web applications under a security manager.
ResourceLinkFactory.setGlobalContext() is a public method and was accessible to web applications even when running under a security manager. This allowed a malicious web application to inject a malicious global context that could in turn be used to disrupt other web applications and/or read and write data owned by other web applications.
This was fixed in revision 1725931.
This issue was identified by the Tomcat security team on 18 January 2016 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revision 1725929.
This issue was identified by the Tomcat security team on 18 January 2016 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revision 1725926.
This issue was identified by the Tomcat security team on 18 January 2016 and made public on 22 February 2016.
Affects: 9.0.0.M1 to 9.0.0.M2
Note: The issues below were fixed in Apache Tomcat 9.0.0.M2 but the release vote for the 9.0.0.M2 release candidate did not pass. Therefore, although users must download 9.0.0.M3 to obtain a version that includes fixes for these issues, version 9.0.0.M2 is not included in the list of affected versions.",No,2016-1-18,2016-2-22,2016-2-16,76ebc9007567c8326217dd94844540e1e27d8468,java/org/apache/naming/factory/ResourceLinkFactory.java,Protect initialization of ResourceLinkFactory when running with a SecurityManager.,https://github.com/apache/tomcat/commit/76ebc9007567c8326217dd94844540e1e27d8468,Konstatin Kolinko,,,,2016-1-21,1,5,5,13,0,Global,0.024590163934426,9,366,Mladen Turk
CVE-2016-0763,264,NA,DoS Bypass,2016-2-24,2018-6-1,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The setGlobalContext method in org/apache/naming/factory/ResourceLinkFactory.java in Apache Tomcat 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M3 does not consider whether ResourceLinkFactory.setGlobalContext callers are authorized, which allows remote authenticated users to bypass intended SecurityManager restrictions and read or write to arbitrary application data, or cause a denial of service (application disruption), via a web application that sets a crafted global context.",https://www.cvedetails.com/cve/CVE-2016-0763/,20151216,"Yes. Fixed in Apache Tomcat 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0763
This issue only affects users running untrusted web applications under a security manager.
ResourceLinkFactory.setGlobalContext() is a public method and was accessible to web applications even when running under a security manager. This allowed a malicious web application to inject a malicious global context that could in turn be used to disrupt other web applications and/or read and write data owned by other web applications.
This was fixed in revision 1725931.
This issue was identified by the Tomcat security team on 18 January 2016 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revision 1725929.
This issue was identified by the Tomcat security team on 18 January 2016 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revision 1725926.
This issue was identified by the Tomcat security team on 18 January 2016 and made public on 22 February 2016.
Affects: 9.0.0.M1 to 9.0.0.M2
Note: The issues below were fixed in Apache Tomcat 9.0.0.M2 but the release vote for the 9.0.0.M2 release candidate did not pass. Therefore, although users must download 9.0.0.M3 to obtain a version that includes fixes for these issues, version 9.0.0.M2 is not included in the list of affected versions.",No,2016-1-18,2016-2-22,2016-2-16,76ebc9007567c8326217dd94844540e1e27d8468,webapps/docs/changelog.xml,Protect initialization of ResourceLinkFactory when running with a SecurityManager.,https://github.com/apache/tomcat/commit/76ebc9007567c8326217dd94844540e1e27d8468,Konstatin Kolinko,,,,2016-1-21,1,8,8,13,0,Global,0.051993500812399,1248,24003,Mark Emlyn David Thomas
CVE-2012-3544,20,NA,DoS,2013-6-1,2014-2-11,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 6.x before 6.0.37 and 7.x before 7.0.30 does not properly handle chunk extensions in chunked transfer coding, which allows remote attackers to cause a denial of service by streaming data.",https://www.cvedetails.com/cve/CVE-2012-3544/,20120614,"Yes. Fixed in Apache Tomcat 6.0.37, 7.0.30: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-3544
When processing a request submitted using the chunked transfer encoding, Tomcat ignored but did not limit any extensions that were included. This allows a client to perform a limited DOS by streaming an unlimited amount of data to the server.
This was fixed in revision 1476592.
This issue was reported to the Tomcat security team on 10 November 2011 and made public on 10 May 2013.
Affects: 6.0.0-6.0.36
This was fixed in revisions 1378702 and 1378921.
This issue was reported to the Tomcat security team on 10 November 2011 and made public on 10 May 2013.
Affects: 7.0.0-7.0.29",No,2011-11-10,2013-5-10,2013-5-3,77534eb9ed1ac005966f7f17f393aa69cb976244,test/org/apache/catalina/startup/SimpleHttpClient.java,"More chunked encoding improvements
- Expand unit tests for chunked encoding
- Fix a parsing error at eol when multiple headers are present (regression in r1378699)
- Make parsing of terminating CRLF non-tolerant (RFC2616 only suggests to be tolerant of LF at the end of headers)
- Revert previous unnecessary change to SimpleHttpClient",https://github.com/apache/tomcat/commit/77534eb9ed1ac005966f7f17f393aa69cb976244,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-8-30,2,1,8,46,34,Global,0.880758807588076,325,369,Mark Emlyn David Thomas
CVE-2012-3544,20,NA,DoS,2013-6-1,2014-2-11,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 6.x before 6.0.37 and 7.x before 7.0.30 does not properly handle chunk extensions in chunked transfer coding, which allows remote attackers to cause a denial of service by streaming data.",https://www.cvedetails.com/cve/CVE-2012-3544/,20120614,"Yes. Fixed in Apache Tomcat 6.0.37, 7.0.30: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-3544
When processing a request submitted using the chunked transfer encoding, Tomcat ignored but did not limit any extensions that were included. This allows a client to perform a limited DOS by streaming an unlimited amount of data to the server.
This was fixed in revision 1476592.
This issue was reported to the Tomcat security team on 10 November 2011 and made public on 10 May 2013.
Affects: 6.0.0-6.0.36
This was fixed in revisions 1378702 and 1378921.
This issue was reported to the Tomcat security team on 10 November 2011 and made public on 10 May 2013.
Affects: 7.0.0-7.0.29",No,2011-11-10,2013-5-10,2013-5-3,775d5fa422c231f9de36d6cc0aabd9a0e5d5feab,test/org/apache/catalina/startup/SimpleHttpClient.java,Resolve a FIXME and expand unit tests to cover CRLF vs LF checking.,https://github.com/apache/tomcat/commit/775d5fa422c231f9de36d6cc0aabd9a0e5d5feab,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-8-29,2,7,8,101,36,Global,0.878116343490305,317,361,Mark Emlyn David Thomas
CVE-2007-3386,79,NA,XSS,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the Host Manager Servlet for Apache Tomcat 6.0.0 to 6.0.13 and 5.5.0 to 5.5.24 allows remote attackers to inject arbitrary HTML and web script via crafted requests, as demonstrated using the aliases parameter to an html/add action.",https://www.cvedetails.com/cve/CVE-2007-3386/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html",The Host Manager Servlet did not filter user supplied data before display. This enabled an XSS attack.,No,,,2007-8-13,78485ff2b12c098a907ff94f2a4dfaf6bb7d5d2b,java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java,"upsync from 6.0
http://svn.apache.org/viewvc?view=rev&rev=557454
http://svn.apache.org/viewvc?view=rev&rev=557467 ",https://github.com/apache/tomcat/commit/78485ff2b12c098a907ff94f2a4dfaf6bb7d5d2b,Filip Hanik,,,,2007-7-21,3,9,14,28,25,Global,0.026615969581749,14,526,Remy Maucherat
CVE-2007-3386,79,NA,XSS,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the Host Manager Servlet for Apache Tomcat 6.0.0 to 6.0.13 and 5.5.0 to 5.5.24 allows remote attackers to inject arbitrary HTML and web script via crafted requests, as demonstrated using the aliases parameter to an html/add action.",https://www.cvedetails.com/cve/CVE-2007-3386/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html",The Host Manager Servlet did not filter user supplied data before display. This enabled an XSS attack.,No,,,2007-8-13,78485ff2b12c098a907ff94f2a4dfaf6bb7d5d2b,java/org/apache/tomcat/util/http/Cookies.java,"upsync from 6.0
http://svn.apache.org/viewvc?view=rev&rev=557454
http://svn.apache.org/viewvc?view=rev&rev=557467 ",https://github.com/apache/tomcat/commit/78485ff2b12c098a907ff94f2a4dfaf6bb7d5d2b,Filip Hanik,,,,2007-7-21,3,19,39,28,25,Global,0.025357607282185,39,1538,Mladen Turk
CVE-2012-5885,264,NA,Bypass,2012-11-17,2017-9-18,5,None,Reote,Low,Not required,Partial,None,None,"The replay-countermeasure functionality in the HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.36, 6.x before 6.0.36, and 7.x before 7.0.30 tracks cnonce (aka client nonce) values instead of nonce (aka server nonce) and nc (aka nonce-count) values, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2012-5885/,20121117,"Yes. Fixed in Apache Tomcat 5.5.36, 6.0.36, 7.0.30:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: DIGEST authentication weakness CVE-2012-3439
Three weaknesses in Tomcat's implementation of DIGEST authentication were identified and resolved:
Tomcat tracked client rather than server nonces and nonce count.
When a session ID was present, authentication was bypassed.
The user name and password were not checked before when indicating that a nonce was stale.
These issues reduced the security of DIGEST authentication making replay attacks possible in some circumstances.
This was fixed in revision 1392248.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 5.5.0-5.5.35
This was fixed in revision 1380829.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1377807.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 7.0.0-7.0.29",No,2012-7-19,2012-11-5,2012-10-19,786df62181ded8f5bda75887707478c64e564994,java/org/apache/catalina/authenticator/DigestAuthenticator.java,"Digest improvements:
- disable caching of authenticated user in session by default
- track server rather than client nonces
- better handling of stale nonce values",https://github.com/apache/tomcat/commit/786df62181ded8f5bda75887707478c64e564994,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-8-27,1,75,127,194,77,Global,0.426133812303547,949,2227,Mark Emlyn David Thomas
CVE-2012-5887,287,NA,Bypass,2012-11-17,2017-8-28,5,None,Remote,Low,Not required,None,Partial,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.36, 6.x before 6.0.36, and 7.x before 7.0.30 does not properly check for stale nonce values in conjunction with enforcement of proper credentials, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests.",https://www.cvedetails.com/cve/CVE-2012-5887/,20121117,"Yes. Fixed in Apache Tomcat 5.5.36, 6.0.36, 7.0.30:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: DIGEST authentication weakness CVE-2012-3439
Three weaknesses in Tomcat's implementation of DIGEST authentication were identified and resolved:
Tomcat tracked client rather than server nonces and nonce count.
When a session ID was present, authentication was bypassed.
The user name and password were not checked before when indicating that a nonce was stale.
These issues reduced the security of DIGEST authentication making replay attacks possible in some circumstances.
This was fixed in revision 1392248.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 5.5.0-5.5.35
This was fixed in revision 1380829.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1377807.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 7.0.0-7.0.29",No,2012-7-19,2012-11-5,2012-10-19,786df62181ded8f5bda75887707478c64e564994,java/org/apache/catalina/authenticator/DigestAuthenticator.java,"Digest improvements:
- disable caching of authenticated user in session by default
- track server rather than client nonces
- better handling of stale nonce values",https://github.com/apache/tomcat/commit/786df62181ded8f5bda75887707478c64e564994,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-8-27,1,75,127,194,77,Global,0.426133812303547,949,2227,Mark Emlyn David Thomas
CVE-2012-5886,287,NA,Bypass,2012-11-17,2017-9-18,5,None,Reote,Low,Not required,None,Partial,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.36, 6.x before 6.0.36, and 7.x before 7.0.30 caches information about the authenticated user within the session state, which makes it easier for remote attackers to bypass authentication via vectors related to the session ID.",https://www.cvedetails.com/cve/CVE-2012-5886/,20121117,"Yes. Fixed in Apache Tomcat 5.5.36, 6.0.36, 7.0.30:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: DIGEST authentication weakness CVE-2012-3439
Three weaknesses in Tomcat's implementation of DIGEST authentication were identified and resolved:
Tomcat tracked client rather than server nonces and nonce count.
When a session ID was present, authentication was bypassed.
The user name and password were not checked before when indicating that a nonce was stale.
These issues reduced the security of DIGEST authentication making replay attacks possible in some circumstances.
This was fixed in revision 1392248.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 5.5.0-5.5.35
This was fixed in revision 1380829.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1377807.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 7.0.0-7.0.29",No,2012-7-19,2012-11-5,2012-10-19,786df62181ded8f5bda75887707478c64e564994,java/org/apache/catalina/authenticator/DigestAuthenticator.java,"Digest improvements:
- disable caching of authenticated user in session by default
- track server rather than client nonces
- better handling of stale nonce values",https://github.com/apache/tomcat/commit/786df62181ded8f5bda75887707478c64e564994,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-8-27,1,75,127,194,77,Global,0.426133812303547,949,2227,Mark Emlyn David Thomas
CVE-2012-5885,264,NA,Bypass,2012-11-17,2017-9-18,5,None,Reote,Low,Not required,Partial,None,None,"The replay-countermeasure functionality in the HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.36, 6.x before 6.0.36, and 7.x before 7.0.30 tracks cnonce (aka client nonce) values instead of nonce (aka server nonce) and nc (aka nonce-count) values, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2012-5885/,20121117,"Yes. Fixed in Apache Tomcat 5.5.36, 6.0.36, 7.0.30:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: DIGEST authentication weakness CVE-2012-3439
Three weaknesses in Tomcat's implementation of DIGEST authentication were identified and resolved:
Tomcat tracked client rather than server nonces and nonce count.
When a session ID was present, authentication was bypassed.
The user name and password were not checked before when indicating that a nonce was stale.
These issues reduced the security of DIGEST authentication making replay attacks possible in some circumstances.
This was fixed in revision 1392248.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 5.5.0-5.5.35
This was fixed in revision 1380829.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1377807.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 7.0.0-7.0.29",No,2012-7-19,2012-11-5,2012-10-19,786df62181ded8f5bda75887707478c64e564994,java/org/apache/catalina/util/ConcurrentMessageDigest.java,"Digest improvements:
- disable caching of authenticated user in session by default
- track server rather than client nonces
- better handling of stale nonce values",https://github.com/apache/tomcat/commit/786df62181ded8f5bda75887707478c64e564994,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-8-27,1,90,90,194,77,Global,1,90,90,Mark Emlyn David Thomas
CVE-2012-5886,287,NA,Bypass,2012-11-17,2017-9-18,5,None,Reote,Low,Not required,None,Partial,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.36, 6.x before 6.0.36, and 7.x before 7.0.30 caches information about the authenticated user within the session state, which makes it easier for remote attackers to bypass authentication via vectors related to the session ID.",https://www.cvedetails.com/cve/CVE-2012-5886/,20121117,"Yes. Fixed in Apache Tomcat 5.5.36, 6.0.36, 7.0.30:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: DIGEST authentication weakness CVE-2012-3439
Three weaknesses in Tomcat's implementation of DIGEST authentication were identified and resolved:
Tomcat tracked client rather than server nonces and nonce count.
When a session ID was present, authentication was bypassed.
The user name and password were not checked before when indicating that a nonce was stale.
These issues reduced the security of DIGEST authentication making replay attacks possible in some circumstances.
This was fixed in revision 1392248.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 5.5.0-5.5.35
This was fixed in revision 1380829.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1377807.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 7.0.0-7.0.29",No,2012-7-19,2012-11-5,2012-10-19,786df62181ded8f5bda75887707478c64e564994,java/org/apache/catalina/util/ConcurrentMessageDigest.java,"Digest improvements:
- disable caching of authenticated user in session by default
- track server rather than client nonces
- better handling of stale nonce values",https://github.com/apache/tomcat/commit/786df62181ded8f5bda75887707478c64e564994,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-8-27,1,90,90,194,77,Global,1,90,90,Mark Emlyn David Thomas
CVE-2012-5887,287,NA,Bypass,2012-11-17,2017-8-28,5,None,Remote,Low,Not required,None,Partial,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.36, 6.x before 6.0.36, and 7.x before 7.0.30 does not properly check for stale nonce values in conjunction with enforcement of proper credentials, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests.",https://www.cvedetails.com/cve/CVE-2012-5887/,20121117,"Yes. Fixed in Apache Tomcat 5.5.36, 6.0.36, 7.0.30:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: DIGEST authentication weakness CVE-2012-3439
Three weaknesses in Tomcat's implementation of DIGEST authentication were identified and resolved:
Tomcat tracked client rather than server nonces and nonce count.
When a session ID was present, authentication was bypassed.
The user name and password were not checked before when indicating that a nonce was stale.
These issues reduced the security of DIGEST authentication making replay attacks possible in some circumstances.
This was fixed in revision 1392248.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 5.5.0-5.5.35
This was fixed in revision 1380829.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1377807.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 7.0.0-7.0.29",No,2012-7-19,2012-11-5,2012-10-19,786df62181ded8f5bda75887707478c64e564994,java/org/apache/catalina/util/ConcurrentMessageDigest.java,"Digest improvements:
- disable caching of authenticated user in session by default
- track server rather than client nonces
- better handling of stale nonce values",https://github.com/apache/tomcat/commit/786df62181ded8f5bda75887707478c64e564994,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-8-27,1,90,90,194,77,Global,1,90,90,Mark Emlyn David Thomas
CVE-2012-5886,287,NA,Bypass,2012-11-17,2017-9-18,5,None,Reote,Low,Not required,None,Partial,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.36, 6.x before 6.0.36, and 7.x before 7.0.30 caches information about the authenticated user within the session state, which makes it easier for remote attackers to bypass authentication via vectors related to the session ID.",https://www.cvedetails.com/cve/CVE-2012-5886/,20121117,"Yes. Fixed in Apache Tomcat 5.5.36, 6.0.36, 7.0.30:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: DIGEST authentication weakness CVE-2012-3439
Three weaknesses in Tomcat's implementation of DIGEST authentication were identified and resolved:
Tomcat tracked client rather than server nonces and nonce count.
When a session ID was present, authentication was bypassed.
The user name and password were not checked before when indicating that a nonce was stale.
These issues reduced the security of DIGEST authentication making replay attacks possible in some circumstances.
This was fixed in revision 1392248.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 5.5.0-5.5.35
This was fixed in revision 1380829.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1377807.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 7.0.0-7.0.29",No,2012-7-19,2012-11-5,2012-10-19,786df62181ded8f5bda75887707478c64e564994,webapps/docs/config/valve.xml,"Digest improvements:
- disable caching of authenticated user in session by default
- track server rather than client nonces
- better handling of stale nonce values",https://github.com/apache/tomcat/commit/786df62181ded8f5bda75887707478c64e564994,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-8-27,1,6,12,194,77,Global,0.568811438784629,1273,2238,Mark Emlyn David Thomas
CVE-2012-5885,264,NA,Bypass,2012-11-17,2017-9-18,5,None,Reote,Low,Not required,Partial,None,None,"The replay-countermeasure functionality in the HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.36, 6.x before 6.0.36, and 7.x before 7.0.30 tracks cnonce (aka client nonce) values instead of nonce (aka server nonce) and nc (aka nonce-count) values, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests, a different vulnerability than CVE-2011-1184.",https://www.cvedetails.com/cve/CVE-2012-5885/,20121117,"Yes. Fixed in Apache Tomcat 5.5.36, 6.0.36, 7.0.30:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: DIGEST authentication weakness CVE-2012-3439
Three weaknesses in Tomcat's implementation of DIGEST authentication were identified and resolved:
Tomcat tracked client rather than server nonces and nonce count.
When a session ID was present, authentication was bypassed.
The user name and password were not checked before when indicating that a nonce was stale.
These issues reduced the security of DIGEST authentication making replay attacks possible in some circumstances.
This was fixed in revision 1392248.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 5.5.0-5.5.35
This was fixed in revision 1380829.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1377807.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 7.0.0-7.0.29",No,2012-7-19,2012-11-5,2012-10-19,786df62181ded8f5bda75887707478c64e564994,webapps/docs/config/valve.xml,"Digest improvements:
- disable caching of authenticated user in session by default
- track server rather than client nonces
- better handling of stale nonce values",https://github.com/apache/tomcat/commit/786df62181ded8f5bda75887707478c64e564994,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-8-27,1,6,12,194,77,Global,0.568811438784629,1273,2238,Mark Emlyn David Thomas
CVE-2012-5887,287,NA,Bypass,2012-11-17,2017-8-28,5,None,Remote,Low,Not required,None,Partial,None,"The HTTP Digest Access Authentication implementation in Apache Tomcat 5.5.x before 5.5.36, 6.x before 6.0.36, and 7.x before 7.0.30 does not properly check for stale nonce values in conjunction with enforcement of proper credentials, which makes it easier for remote attackers to bypass intended access restrictions by sniffing the network for valid requests.",https://www.cvedetails.com/cve/CVE-2012-5887/,20121117,"Yes. Fixed in Apache Tomcat 5.5.36, 6.0.36, 7.0.30:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: DIGEST authentication weakness CVE-2012-3439
Three weaknesses in Tomcat's implementation of DIGEST authentication were identified and resolved:
Tomcat tracked client rather than server nonces and nonce count.
When a session ID was present, authentication was bypassed.
The user name and password were not checked before when indicating that a nonce was stale.
These issues reduced the security of DIGEST authentication making replay attacks possible in some circumstances.
This was fixed in revision 1392248.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 5.5.0-5.5.35
This was fixed in revision 1380829.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1377807.
The first issue was reported by Tilmann Kuhn to the Tomcat security team on 19 July 2012. The second and third issues were discovered by the Tomcat security team during the resulting code review. All three issues were made public on 5 November 2012.
Affects: 7.0.0-7.0.29",No,2012-7-19,2012-11-5,2012-10-19,786df62181ded8f5bda75887707478c64e564994,webapps/docs/config/valve.xml,"Digest improvements:
- disable caching of authenticated user in session by default
- track server rather than client nonces
- better handling of stale nonce values",https://github.com/apache/tomcat/commit/786df62181ded8f5bda75887707478c64e564994,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-8-27,1,6,12,194,77,Global,0.568811438784629,1273,2238,Mark Emlyn David Thomas
CVE-2009-0781,79,NA,XSS,2009-3-9,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in jsp/cal/cal2.jsp in the calendar application in the examples web application in Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, and 6.0.0 through 6.0.18 allows remote attackers to inject arbitrary web script or HTML via the time parameter, related to ""invalid HTML.""",https://www.cvedetails.com/cve/CVE-2009-0781/,20090304,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The calendar application in the examples web application contains an XSS flaw due to invalid HTML which renders the XSS filtering protection ineffective.,No,2009-3-5,2009-3-6,2009-9-4,7c50fe16ea70ccf6691fc4d2909efe007fce198d,webapps/examples/jsp/cal/cal2.jsp,"Fix XSS in examples web application.
This is CVE-2009-0781.
Security page updates and formal announcement to follow.",https://github.com/apache/tomcat/commit/7c50fe16ea70ccf6691fc4d2909efe007fce198d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-3-6,1,1,2,1,1,Local,0.228070175438596,13,57,Remy Maucherat
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,7c55155a86b927a1734eceffbdd0dd2399650ab3,java/org/apache/tomcat/util/http/Cookies.java,"- Cookie parser update.
- Submitted by John Kew, with an update to the initialization of the boolean array (hopefully easier to read and modify).",https://github.com/apache/tomcat/commit/7c55155a86b927a1734eceffbdd0dd2399650ab3,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2007-9-30,143,307,516,310,215,Local,0.487341772151899,1001,2054,Remy Maucherat
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,7c55155a86b927a1734eceffbdd0dd2399650ab3,STATUS,"- Cookie parser update.
- Submitted by John Kew, with an update to the initialization of the boolean array (hopefully easier to read and modify).",https://github.com/apache/tomcat/commit/7c55155a86b927a1734eceffbdd0dd2399650ab3,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2007-9-30,143,0,6,310,215,Local,0.506493506493506,585,1155,Remy Maucherat
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,7c55155a86b927a1734eceffbdd0dd2399650ab3,webapps/docs/changelog.xml,"- Cookie parser update.
- Submitted by John Kew, with an update to the initialization of the boolean array (hopefully easier to read and modify).",https://github.com/apache/tomcat/commit/7c55155a86b927a1734eceffbdd0dd2399650ab3,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2007-9-30,143,3,3,310,215,Local,0.489765886287625,3661,7475,Remy Maucherat
CVE-2017-5664,254,NA,,2017-6-6,2018-7-18,5,None,Remote,Low,Not required,None,Partial,None,"The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method. If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. The Default Servlet in Apache Tomcat 9.0.0.M1 to 9.0.0.M20, 8.5.0 to 8.5.14, 8.0.0.RC1 to 8.0.43 and 7.0.0 to 7.0.77 did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page. Notes for other user provided error pages: (1) Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must must ensure that they handle any error dispatch as a GET request, regardless of the actual method. (2) By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.",https://www.cvedetails.com/cve/CVE-2017-5664/,20170129,"Yes. Fixed in Apache Tomcat 7.0.78, 8.0.44, 8.5.15, 9.0.0.M21:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security Constraint Bypass CVE-2017-5664
The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method.
If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. Tomcat's Default Servlet did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page.
Notes for other user provided error pages:
Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.
By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.
This was fixed in revisions 1793471 and 1793491.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 7.0.0 to 7.0.77
This was fixed in revisions 1793470 and 1793489.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 8.0.0.RC1 to 8.0.43
This was fixed in revisions 1793469 and 1793488.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 8.5.0 to 8.5.14
This was fixed in revisions 1793468 and 1793487.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 9.0.0.M1 to 9.0.0.M20",No,2017-4-21,2017-6-6,2017-5-16,7d93527254d9e9371b342800617f20d13c8b85ad,java/org/apache/catalina/servlets/DefaultServlet.java,Ensure that when the Default or WebDAV servlets process an error dispatch that the error resource is processed via the doGet() method irrespective of the method used for the original request that triggered the error.,https://github.com/apache/tomcat/commit/7d93527254d9e9371b342800617f20d13c8b85ad,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-5-2,1,12,12,24,0,Global,0.046130189646335,450,9755,Mladen Turk
CVE-2017-5664,254,NA,,2017-6-6,2018-7-18,5,None,Remote,Low,Not required,None,Partial,None,"The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method. If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. The Default Servlet in Apache Tomcat 9.0.0.M1 to 9.0.0.M20, 8.5.0 to 8.5.14, 8.0.0.RC1 to 8.0.43 and 7.0.0 to 7.0.77 did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page. Notes for other user provided error pages: (1) Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must must ensure that they handle any error dispatch as a GET request, regardless of the actual method. (2) By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.",https://www.cvedetails.com/cve/CVE-2017-5664/,20170129,"Yes. Fixed in Apache Tomcat 7.0.78, 8.0.44, 8.5.15, 9.0.0.M21:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security Constraint Bypass CVE-2017-5664
The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method.
If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. Tomcat's Default Servlet did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page.
Notes for other user provided error pages:
Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.
By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.
This was fixed in revisions 1793471 and 1793491.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 7.0.0 to 7.0.77
This was fixed in revisions 1793470 and 1793489.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 8.0.0.RC1 to 8.0.43
This was fixed in revisions 1793469 and 1793488.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 8.5.0 to 8.5.14
This was fixed in revisions 1793468 and 1793487.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 9.0.0.M1 to 9.0.0.M20",No,2017-4-21,2017-6-6,2017-5-16,7d93527254d9e9371b342800617f20d13c8b85ad,java/org/apache/catalina/servlets/WebdavServlet.java,Ensure that when the Default or WebDAV servlets process an error dispatch that the error resource is processed via the doGet() method irrespective of the method used for the original request that triggered the error.,https://github.com/apache/tomcat/commit/7d93527254d9e9371b342800617f20d13c8b85ad,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-5-2,1,6,6,24,0,Global,0.039410058027079,489,12408,Mladen Turk
CVE-2017-5664,254,NA,,2017-6-6,2018-7-18,5,None,Remote,Low,Not required,None,Partial,None,"The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method. If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. The Default Servlet in Apache Tomcat 9.0.0.M1 to 9.0.0.M20, 8.5.0 to 8.5.14, 8.0.0.RC1 to 8.0.43 and 7.0.0 to 7.0.77 did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page. Notes for other user provided error pages: (1) Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must must ensure that they handle any error dispatch as a GET request, regardless of the actual method. (2) By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.",https://www.cvedetails.com/cve/CVE-2017-5664/,20170129,"Yes. Fixed in Apache Tomcat 7.0.78, 8.0.44, 8.5.15, 9.0.0.M21:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security Constraint Bypass CVE-2017-5664
The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method.
If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. Tomcat's Default Servlet did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page.
Notes for other user provided error pages:
Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.
By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.
This was fixed in revisions 1793471 and 1793491.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 7.0.0 to 7.0.77
This was fixed in revisions 1793470 and 1793489.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 8.0.0.RC1 to 8.0.43
This was fixed in revisions 1793469 and 1793488.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 8.5.0 to 8.5.14
This was fixed in revisions 1793468 and 1793487.
This issue was reported responsibly to the Apache Tomcat Security Team by Aniket Nandkishor Kulkarni from Tata Consultancy Services Ltd, Mumbai, India as a vulnerability that allowed the restrictions on OPTIONS and TRACE requests to be bypassed on 21 April 2017. The full implications of this issue were identified by the Tomcat Security Team on 24 April 2017. This issue was made public on 6 June 2017.
Affects: 9.0.0.M1 to 9.0.0.M20",No,2017-4-21,2017-6-6,2017-5-16,7d93527254d9e9371b342800617f20d13c8b85ad,webapps/docs/changelog.xml,Ensure that when the Default or WebDAV servlets process an error dispatch that the error resource is processed via the doGet() method irrespective of the method used for the original request that triggered the error.,https://github.com/apache/tomcat/commit/7d93527254d9e9371b342800617f20d13c8b85ad,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-5-2,1,6,6,24,0,Global,0.101316314319904,2794,27577,Mark Emlyn David Thomas
CVE-2007-3382,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 treats single quotes (""'"") as delimiters in cookies, which might cause sensitive information such as session IDs to be leaked and allow remote attackers to conduct session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3382/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html",Tomcat incorrectly treated a single quote character (') in a cookie value as a delimiter. In some circumstances this lead to the leaking of information such as session ID to an attacker.,No,,,2007-8-13,7db95169f35da0392a4382007aa40ea19784ad4f,java/org/apache/tomcat/util/http/Cookies.java,Arrange the handling of cookies values.,https://github.com/apache/tomcat/commit/7db95169f35da0392a4382007aa40ea19784ad4f,Jean-Frederic Clere,,,,2007-7-4,17,17,33,17,16,Local,0.022132796780684,33,1491,Mladen Turk
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,7db95169f35da0392a4382007aa40ea19784ad4f,java/org/apache/tomcat/util/http/Cookies.java,Arrange the handling of cookies values.,https://github.com/apache/tomcat/commit/7db95169f35da0392a4382007aa40ea19784ad4f,Jean-Frederic Clere,,,,2007-7-4,143,17,33,17,16,Local,0.022132796780684,33,1491,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,7f8fa746e81fb3dd851a107717e37d519b922157,java/org/apache/tomcat/util/http/Parameters.java,Fix NPE in parameter re-factoring identified by JSP TCK.,https://github.com/apache/tomcat/commit/7f8fa746e81fb3dd851a107717e37d519b922157,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-28,561,3,3,3,0,Local,0.47322680123353,1688,3567,Mark Emlyn David Thomas
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,805357866ae06d59605df4e1ec265fb79fc19ad7,java/org/apache/tomcat/util/http/Cookies.java,Make cookie handling conform to RFC2965. Don't treat the single quote character as special.,https://github.com/apache/tomcat/commit/805357866ae06d59605df4e1ec265fb79fc19ad7,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-7-19,143,3,7,3,4,Local,0.012675116744496,19,1499,Mladen Turk
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,816552abf6735fa37dfd37c8a7bfbdbd045477e0,java/org/apache/catalina/authenticator/FormAuthenticator.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58660
With mapperContextRootRedirectEnabled ste to false, the redirect needs to be handled elsewhere.
- Ensure the Mapper does not add the '/'
- Handle the redirect in the DefaultServlet
- Add a redirect to FORM auth if auth is occurring at the context root else the login page could be submitted to the wrong web application",https://github.com/apache/tomcat/commit/816552abf6735fa37dfd37c8a7bfbdbd045477e0,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-27,9,14,14,47,19,Global,0.034737299174989,80,2303,Mladen Turk
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,816552abf6735fa37dfd37c8a7bfbdbd045477e0,java/org/apache/catalina/mapper/Mapper.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58660
With mapperContextRootRedirectEnabled ste to false, the redirect needs to be handled elsewhere.
- Ensure the Mapper does not add the '/'
- Handle the redirect in the DefaultServlet
- Add a redirect to FORM auth if auth is occurring at the context root else the login page could be submitted to the wrong web application",https://github.com/apache/tomcat/commit/816552abf6735fa37dfd37c8a7bfbdbd045477e0,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-27,9,9,19,47,19,Global,0.016153319644079,118,7305,Mladen Turk
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,816552abf6735fa37dfd37c8a7bfbdbd045477e0,java/org/apache/catalina/servlets/DefaultServlet.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58660
With mapperContextRootRedirectEnabled ste to false, the redirect needs to be handled elsewhere.
- Ensure the Mapper does not add the '/'
- Handle the redirect in the DefaultServlet
- Add a redirect to FORM auth if auth is occurring at the context root else the login page could be submitted to the wrong web application",https://github.com/apache/tomcat/commit/816552abf6735fa37dfd37c8a7bfbdbd045477e0,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-27,9,24,33,47,19,Global,0.015092290988057,139,9210,Mladen Turk
CVE-2014-7810,284,NA,Bypass,2015-6-7,2018-7-18,5,None,Remote,Low,Not required,None,Partial,None,"The Expression Language (EL) implementation in Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.58, and 8.x before 8.0.16 does not properly consider the possibility of an accessible interface implemented by an inaccessible class, which allows attackers to bypass a SecurityManager protection mechanism via a web application that leverages use of incorrect privileges during EL evaluation.",https://www.cvedetails.com/cve/CVE-2014-7810/,20141003,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.59, 8.0.17:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Moderate: Security Manager bypass CVE-2014-7810
Malicious web applications could use expression language to bypass the protections of a Security Manager as expressions were evaluated within a privileged code section.
This was fixed in revisions 1645366 and 1659538.
This issue was identified by the Tomcat security team on 2 November 2014 and made public on 14 May 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revisions 1644019 and 1645644.
This issue was identified by the Tomcat security team on 2 November 2014 and made public on 14 May 2015.
Affects: 7.0.0 to 7.0.57
This was fixed in revisions 1644018 and 1645642.
This issue was identified by the Tomcat security team on 2 November 2014 and made public on 14 May 2015.
Affects: 8.0.0-RC1 to 8.0.15",No,2014-11-2,2015-5-14,2015-5-12,8179973033de39e8100c5a7f825a8f05dc775424,java/org/apache/jasper/runtime/PageContextImpl.java,Remove some more unnecessary code.,https://github.com/apache/tomcat/commit/8179973033de39e8100c5a7f825a8f05dc775424,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-12-15,7,4,34,4,32,Global,0.01074649779313,56,5211,Mark Emlyn David Thomas
CVE-2014-7810,284,NA,Bypass,2015-6-7,2018-7-18,5,None,Remote,Low,Not required,None,Partial,None,"The Expression Language (EL) implementation in Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.58, and 8.x before 8.0.16 does not properly consider the possibility of an accessible interface implemented by an inaccessible class, which allows attackers to bypass a SecurityManager protection mechanism via a web application that leverages use of incorrect privileges during EL evaluation.",https://www.cvedetails.com/cve/CVE-2014-7810/,20141003,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.59, 8.0.17:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Moderate: Security Manager bypass CVE-2014-7810
Malicious web applications could use expression language to bypass the protections of a Security Manager as expressions were evaluated within a privileged code section.
This was fixed in revisions 1645366 and 1659538.
This issue was identified by the Tomcat security team on 2 November 2014 and made public on 14 May 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revisions 1644019 and 1645644.
This issue was identified by the Tomcat security team on 2 November 2014 and made public on 14 May 2015.
Affects: 7.0.0 to 7.0.57
This was fixed in revisions 1644018 and 1645642.
This issue was identified by the Tomcat security team on 2 November 2014 and made public on 14 May 2015.
Affects: 8.0.0-RC1 to 8.0.15",No,2014-11-2,2015-5-14,2015-5-12,8179973033de39e8100c5a7f825a8f05dc775424,java/org/apache/jasper/security/SecurityClassLoad.java,Remove some more unnecessary code.,https://github.com/apache/tomcat/commit/8179973033de39e8100c5a7f825a8f05dc775424,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-12-15,7,0,2,4,32,Global,0.005025125628141,2,398,Mladen Turk
CVE-2011-2481,NA,NA,,2011-8-15,2017-5-22,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"Apache Tomcat 7.0.x before 7.0.17 permits web applications to replace an XML parser used for other web applications, which allows local users to read or modify the (1) web.xml, (2) context.xml, or (3) tld files of arbitrary web applications via a crafted application that is loaded earlier than the target application. NOTE: this vulnerability exists because of a CVE-2009-0783 regression.",https://www.cvedetails.com/cve/CVE-2011-2481/,20110615,"Yes. Fixed in Apache Tomcat 7.0.19:
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2481
The re-factoring of XML validation for Tomcat 7.0.x re-introduced the vulnerability previously reported as CVE-2009-0783. This was initially reported as a memory leak. If a web application is the first web application loaded, this bugs allows that web application to potentially view and/or alter the web.xml, context.xml and tld files of other web applications deployed on the Tomcat instance.
This was first fixed in revision 1137753, but reverted in revision 1138776 and finally fixed in revision 1138788.
This was identified by the Tomcat security team on 20 June 2011 and made public on 12 August 2011.
Affects: 7.0.0-7.0.16",No,2011-6-20,2011-8-12,2011-7-9,81bb49ad58fc7b1177a86ba82abf0271d07ceeb7,java/org/apache/catalina/startup/ContextConfig.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51395
Better fix for memory leak that aligns ContextConfig with TldConfig
Fix part 3 of 3 for CVE-2011-2481",https://github.com/apache/tomcat/commit/81bb49ad58fc7b1177a86ba82abf0271d07ceeb7,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-23,4,11,13,15,2,Global,0.429367088607595,3392,7900,Mark Emlyn David Thomas
CVE-2011-2481,NA,NA,,2011-8-15,2017-5-22,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"Apache Tomcat 7.0.x before 7.0.17 permits web applications to replace an XML parser used for other web applications, which allows local users to read or modify the (1) web.xml, (2) context.xml, or (3) tld files of arbitrary web applications via a crafted application that is loaded earlier than the target application. NOTE: this vulnerability exists because of a CVE-2009-0783 regression.",https://www.cvedetails.com/cve/CVE-2011-2481/,20110615,"Yes. Fixed in Apache Tomcat 7.0.19:
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2481
The re-factoring of XML validation for Tomcat 7.0.x re-introduced the vulnerability previously reported as CVE-2009-0783. This was initially reported as a memory leak. If a web application is the first web application loaded, this bugs allows that web application to potentially view and/or alter the web.xml, context.xml and tld files of other web applications deployed on the Tomcat instance.
This was first fixed in revision 1137753, but reverted in revision 1138776 and finally fixed in revision 1138788.
This was identified by the Tomcat security team on 20 June 2011 and made public on 12 August 2011.
Affects: 7.0.0-7.0.16",No,2011-6-20,2011-8-12,2011-7-9,81bb49ad58fc7b1177a86ba82abf0271d07ceeb7,java/org/apache/catalina/startup/TldConfig.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51395
Better fix for memory leak that aligns ContextConfig with TldConfig
Fix part 3 of 3 for CVE-2011-2481",https://github.com/apache/tomcat/commit/81bb49ad58fc7b1177a86ba82abf0271d07ceeb7,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-23,4,4,4,15,2,Global,0.573665346161102,3041,5301,Mark Emlyn David Thomas
CVE-2015-5346,NA,NA,,2016-2-24,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"Session fixation vulnerability in Apache Tomcat 7.x before 7.0.66, 8.x before 8.0.30, and 9.x before 9.0.0.M2, when different session settings are used for deployments of multiple versions of the same web application, might allow remote attackers to hijack web sessions by leveraging use of a requestedSessionSSL field for an unintended request, related to CoyoteAdapter.java and Request.java.",https://www.cvedetails.com/cve/CVE-2015-5346/,20150701,"Yes. Fixed in Apache Tomcat 7.0.67, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Session Fixation CVE-2015-5346
When recycling the Request object to use for a new request, the requestedSessionSSL field was not recycled. This meant that a session ID provided in the next request to be processed using the recycled Request object could be used when it should not have been. This gave the client the ability to control the session ID. In theory, this could have been used as part of a session fixation attack but it would have been hard to achieve as the attacker would not have been able to force the victim to use the 'correct' Request object. It was also necessary for at least one web application to be configured to use the SSL session ID as the HTTP session ID. This is not a common configuration.
This was fixed in revision 1713187.
This issue was identified by the Tomcat security team on 22 June 2014 and made public on 22 February 2016.
Affects: 7.0.5 to 7.0.65
This was fixed in revisions 1713185 and 1723506.
This issue was identified by the Tomcat security team on 22 June 2014 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1713184 and 1723414.
This issue was identified by the Tomcat security team on 22 June 2014 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2014-6-22,2016-2-22,2016-2-8,83679b99cd40caa401d173c8f8e72fc98eb5d5be,java/org/apache/catalina/connector/CoyoteAdapter.java,Handle the unlikely case where different versions of a web application are deployed with different session settings,https://github.com/apache/tomcat/commit/83679b99cd40caa401d173c8f8e72fc98eb5d5be,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-7,61,4,6,22,14,Global,0.037074657186389,219,5907,Mark Emlyn David Thomas
CVE-2015-5346,NA,NA,,2016-2-24,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"Session fixation vulnerability in Apache Tomcat 7.x before 7.0.66, 8.x before 8.0.30, and 9.x before 9.0.0.M2, when different session settings are used for deployments of multiple versions of the same web application, might allow remote attackers to hijack web sessions by leveraging use of a requestedSessionSSL field for an unintended request, related to CoyoteAdapter.java and Request.java.",https://www.cvedetails.com/cve/CVE-2015-5346/,20150701,"Yes. Fixed in Apache Tomcat 7.0.67, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Session Fixation CVE-2015-5346
When recycling the Request object to use for a new request, the requestedSessionSSL field was not recycled. This meant that a session ID provided in the next request to be processed using the recycled Request object could be used when it should not have been. This gave the client the ability to control the session ID. In theory, this could have been used as part of a session fixation attack but it would have been hard to achieve as the attacker would not have been able to force the victim to use the 'correct' Request object. It was also necessary for at least one web application to be configured to use the SSL session ID as the HTTP session ID. This is not a common configuration.
This was fixed in revision 1713187.
This issue was identified by the Tomcat security team on 22 June 2014 and made public on 22 February 2016.
Affects: 7.0.5 to 7.0.65
This was fixed in revisions 1713185 and 1723506.
This issue was identified by the Tomcat security team on 22 June 2014 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1713184 and 1723414.
This issue was identified by the Tomcat security team on 22 June 2014 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2014-6-22,2016-2-22,2016-2-8,83679b99cd40caa401d173c8f8e72fc98eb5d5be,java/org/apache/catalina/connector/Request.java,Handle the unlikely case where different versions of a web application are deployed with different session settings,https://github.com/apache/tomcat/commit/83679b99cd40caa401d173c8f8e72fc98eb5d5be,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-7,61,18,30,22,14,Global,0.017583299879566,219,12455,Mladen Turk
CVE-2017-5647,200,NA,+Info,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,"A bug in the handling of the pipelined requests in Apache Tomcat 9.0.0.M1 to 9.0.0.M18, 8.5.0 to 8.5.12, 8.0.0.RC1 to 8.0.42, 7.0.0 to 7.0.76, and 6.0.0 to 6.0.52, when send file was used, results in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.",https://www.cvedetails.com/cve/CVE-2017-5647/,20170129,"Yes. Fixed in Apache Tomcat, 8.0.43, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2017-5647
A bug in the handling of the pipelined requests when send file was used resulted in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.
This was fixed in revision 1788999.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.0.0.RC1 to 8.0.42
This was fixed in revision 1788932.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788890.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-20,2017-4-10,2017-3-30,864aa1199ad2cccc9a7e7c6b977f7d7f812c9910,java/org/apache/coyote/AbstractProtocol.java,Improve sendfile handling when requests are pipelined.,https://github.com/apache/tomcat/commit/864aa1199ad2cccc9a7e7c6b977f7d7f812c9910,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-27,4,3,7,118,34,Global,0.355183469896687,997,2807,Mark Emlyn David Thomas
CVE-2017-5647,200,NA,+Info,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,"A bug in the handling of the pipelined requests in Apache Tomcat 9.0.0.M1 to 9.0.0.M18, 8.5.0 to 8.5.12, 8.0.0.RC1 to 8.0.42, 7.0.0 to 7.0.76, and 6.0.0 to 6.0.52, when send file was used, results in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.",https://www.cvedetails.com/cve/CVE-2017-5647/,20170129,"Yes. Fixed in Apache Tomcat, 8.0.43, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2017-5647
A bug in the handling of the pipelined requests when send file was used resulted in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.
This was fixed in revision 1788999.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.0.0.RC1 to 8.0.42
This was fixed in revision 1788932.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788890.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-20,2017-4-10,2017-3-30,864aa1199ad2cccc9a7e7c6b977f7d7f812c9910,java/org/apache/coyote/http11/Http11Processor.java,Improve sendfile handling when requests are pipelined.,https://github.com/apache/tomcat/commit/864aa1199ad2cccc9a7e7c6b977f7d7f812c9910,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-27,4,10,11,118,34,Global,0.405574439157036,2983,7355,Mark Emlyn David Thomas
CVE-2017-5647,200,NA,+Info,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,"A bug in the handling of the pipelined requests in Apache Tomcat 9.0.0.M1 to 9.0.0.M18, 8.5.0 to 8.5.12, 8.0.0.RC1 to 8.0.42, 7.0.0 to 7.0.76, and 6.0.0 to 6.0.52, when send file was used, results in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.",https://www.cvedetails.com/cve/CVE-2017-5647/,20170129,"Yes. Fixed in Apache Tomcat, 8.0.43, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2017-5647
A bug in the handling of the pipelined requests when send file was used resulted in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.
This was fixed in revision 1788999.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.0.0.RC1 to 8.0.42
This was fixed in revision 1788932.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788890.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-20,2017-4-10,2017-3-30,864aa1199ad2cccc9a7e7c6b977f7d7f812c9910,java/org/apache/tomcat/util/net/Nio2Endpoint.java,Improve sendfile handling when requests are pipelined.,https://github.com/apache/tomcat/commit/864aa1199ad2cccc9a7e7c6b977f7d7f812c9910,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-27,4,16,25,118,34,Global,0.406880022557451,2886,7093,Remy Maucherat
CVE-2017-5647,200,NA,+Info,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,"A bug in the handling of the pipelined requests in Apache Tomcat 9.0.0.M1 to 9.0.0.M18, 8.5.0 to 8.5.12, 8.0.0.RC1 to 8.0.42, 7.0.0 to 7.0.76, and 6.0.0 to 6.0.52, when send file was used, results in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.",https://www.cvedetails.com/cve/CVE-2017-5647/,20170129,"Yes. Fixed in Apache Tomcat, 8.0.43, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2017-5647
A bug in the handling of the pipelined requests when send file was used resulted in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.
This was fixed in revision 1788999.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.0.0.RC1 to 8.0.42
This was fixed in revision 1788932.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788890.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-20,2017-4-10,2017-3-30,864aa1199ad2cccc9a7e7c6b977f7d7f812c9910,java/org/apache/tomcat/util/net/NioEndpoint.java,Improve sendfile handling when requests are pipelined.,https://github.com/apache/tomcat/commit/864aa1199ad2cccc9a7e7c6b977f7d7f812c9910,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-27,4,20,26,118,34,Global,0.093468101293338,2580,27603,Filip Hanik
CVE-2017-5647,200,NA,+Info,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,"A bug in the handling of the pipelined requests in Apache Tomcat 9.0.0.M1 to 9.0.0.M18, 8.5.0 to 8.5.12, 8.0.0.RC1 to 8.0.42, 7.0.0 to 7.0.76, and 6.0.0 to 6.0.52, when send file was used, results in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.",https://www.cvedetails.com/cve/CVE-2017-5647/,20170129,"Yes. Fixed in Apache Tomcat, 8.0.43, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2017-5647
A bug in the handling of the pipelined requests when send file was used resulted in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.
This was fixed in revision 1788999.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.0.0.RC1 to 8.0.42
This was fixed in revision 1788932.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788890.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-20,2017-4-10,2017-3-30,864aa1199ad2cccc9a7e7c6b977f7d7f812c9910,java/org/apache/tomcat/util/net/SendfileKeepAliveState.java,Improve sendfile handling when requests are pipelined.,https://github.com/apache/tomcat/commit/864aa1199ad2cccc9a7e7c6b977f7d7f812c9910,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-27,4,39,39,118,34,Global,1,39,39,Mark Thomas
CVE-2017-5647,200,NA,+Info,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,"A bug in the handling of the pipelined requests in Apache Tomcat 9.0.0.M1 to 9.0.0.M18, 8.5.0 to 8.5.12, 8.0.0.RC1 to 8.0.42, 7.0.0 to 7.0.76, and 6.0.0 to 6.0.52, when send file was used, results in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.",https://www.cvedetails.com/cve/CVE-2017-5647/,20170129,"Yes. Fixed in Apache Tomcat, 8.0.43, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2017-5647
A bug in the handling of the pipelined requests when send file was used resulted in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.
This was fixed in revision 1788999.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.0.0.RC1 to 8.0.42
This was fixed in revision 1788932.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788890.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-20,2017-4-10,2017-3-30,864aa1199ad2cccc9a7e7c6b977f7d7f812c9910,webapps/docs/changelog.xml,Improve sendfile handling when requests are pipelined.,https://github.com/apache/tomcat/commit/864aa1199ad2cccc9a7e7c6b977f7d7f812c9910,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-27,4,3,3,118,34,Global,0.095739219712526,2611,27272,Mark Emlyn David Thomas
CVE-2016-0762,264,NA,,2017-8-10,2018-6-5,4.3,None,Remote,Medium,Not required,Partial,None,None,"The Realm implementations in Apache Tomcat versions 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not process the supplied password if the supplied user name did not exist. This made a timing attack possible to determine valid user names. Note that the default configuration includes the LockOutRealm which makes exploitation of this vulnerability harder.",https://www.cvedetails.com/cve/CVE-2016-0762/,20151216,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Timing Attack CVE-2016-0762
The Realm implementations did not process the supplied password if the supplied user name did not exist. This made a timing attack possible to determine valid user names. Note that the default configuration includes the LockOutRealm which makes exploitation of this vulnerability harder.
This was fixed in revision 1758506.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1758502.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1758500 for 8.5.x and revision 1758501 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1758499.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-1-1,2016-10-27,2016-10-16,86b2e436099cb48f30dad950175c5beeeb763756,java/org/apache/catalina/realm/DataSourceRealm.java,Make timing attacks against the Realm implementations harder. (schultz),https://github.com/apache/tomcat/commit/86b2e436099cb48f30dad950175c5beeeb763756,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-31,1,2,2,12,1,Global,0.000787401574803,2,2540,Mladen Turk
CVE-2016-0762,264,NA,,2017-8-10,2018-6-5,4.3,None,Remote,Medium,Not required,Partial,None,None,"The Realm implementations in Apache Tomcat versions 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not process the supplied password if the supplied user name did not exist. This made a timing attack possible to determine valid user names. Note that the default configuration includes the LockOutRealm which makes exploitation of this vulnerability harder.",https://www.cvedetails.com/cve/CVE-2016-0762/,20151216,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Timing Attack CVE-2016-0762
The Realm implementations did not process the supplied password if the supplied user name did not exist. This made a timing attack possible to determine valid user names. Note that the default configuration includes the LockOutRealm which makes exploitation of this vulnerability harder.
This was fixed in revision 1758506.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1758502.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1758500 for 8.5.x and revision 1758501 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1758499.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-1-1,2016-10-27,2016-10-16,86b2e436099cb48f30dad950175c5beeeb763756,java/org/apache/catalina/realm/JDBCRealm.java,Make timing attacks against the Realm implementations harder. (schultz),https://github.com/apache/tomcat/commit/86b2e436099cb48f30dad950175c5beeeb763756,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-31,1,2,2,12,1,Global,0.004917456972251,14,2847,Mladen Turk
CVE-2016-0762,264,NA,,2017-8-10,2018-6-5,4.3,None,Remote,Medium,Not required,Partial,None,None,"The Realm implementations in Apache Tomcat versions 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not process the supplied password if the supplied user name did not exist. This made a timing attack possible to determine valid user names. Note that the default configuration includes the LockOutRealm which makes exploitation of this vulnerability harder.",https://www.cvedetails.com/cve/CVE-2016-0762/,20151216,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Timing Attack CVE-2016-0762
The Realm implementations did not process the supplied password if the supplied user name did not exist. This made a timing attack possible to determine valid user names. Note that the default configuration includes the LockOutRealm which makes exploitation of this vulnerability harder.
This was fixed in revision 1758506.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1758502.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1758500 for 8.5.x and revision 1758501 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1758499.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-1-1,2016-10-27,2016-10-16,86b2e436099cb48f30dad950175c5beeeb763756,java/org/apache/catalina/realm/MemoryRealm.java,Make timing attacks against the Realm implementations harder. (schultz),https://github.com/apache/tomcat/commit/86b2e436099cb48f30dad950175c5beeeb763756,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-31,1,3,4,12,1,Global,0.037205770690964,49,1317,Mladen Turk
CVE-2016-0762,264,NA,,2017-8-10,2018-6-5,4.3,None,Remote,Medium,Not required,Partial,None,None,"The Realm implementations in Apache Tomcat versions 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not process the supplied password if the supplied user name did not exist. This made a timing attack possible to determine valid user names. Note that the default configuration includes the LockOutRealm which makes exploitation of this vulnerability harder.",https://www.cvedetails.com/cve/CVE-2016-0762/,20151216,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Timing Attack CVE-2016-0762
The Realm implementations did not process the supplied password if the supplied user name did not exist. This made a timing attack possible to determine valid user names. Note that the default configuration includes the LockOutRealm which makes exploitation of this vulnerability harder.
This was fixed in revision 1758506.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1758502.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1758500 for 8.5.x and revision 1758501 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1758499.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-1-1,2016-10-27,2016-10-16,86b2e436099cb48f30dad950175c5beeeb763756,java/org/apache/catalina/realm/RealmBase.java,Make timing attacks against the Realm implementations harder. (schultz),https://github.com/apache/tomcat/commit/86b2e436099cb48f30dad950175c5beeeb763756,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-31,1,2,2,12,1,Global,0.059869779259965,377,6297,Mladen Turk
CVE-2016-0762,264,NA,,2017-8-10,2018-6-5,4.3,None,Remote,Medium,Not required,Partial,None,None,"The Realm implementations in Apache Tomcat versions 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not process the supplied password if the supplied user name did not exist. This made a timing attack possible to determine valid user names. Note that the default configuration includes the LockOutRealm which makes exploitation of this vulnerability harder.",https://www.cvedetails.com/cve/CVE-2016-0762/,20151216,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Timing Attack CVE-2016-0762
The Realm implementations did not process the supplied password if the supplied user name did not exist. This made a timing attack possible to determine valid user names. Note that the default configuration includes the LockOutRealm which makes exploitation of this vulnerability harder.
This was fixed in revision 1758506.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1758502.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1758500 for 8.5.x and revision 1758501 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1758499.
This issue was identified by the Apache Tomcat Security Team on 1 January 2016 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-1-1,2016-10-27,2016-10-16,86b2e436099cb48f30dad950175c5beeeb763756,webapps/docs/changelog.xml,Make timing attacks against the Realm implementations harder. (schultz),https://github.com/apache/tomcat/commit/86b2e436099cb48f30dad950175c5beeeb763756,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-31,1,3,3,12,1,Global,0.060827345115556,1566,25745,Mark Emlyn David Thomas
CVE-2014-0095,20,NA,DoS,2014-5-31,2017-11-14,5,None,Remote,Low,Not required,None,None,Partial,"java/org/apache/coyote/ajp/AbstractAjpProcessor.java in Apache Tomcat 8.x before 8.0.4 allows remote attackers to cause a denial of service (thread consumption) by using a ""Content-Length: 0"" AJP request to trigger a hang in request processing.",https://www.cvedetails.com/cve/CVE-2014-0095/,20131203,"Yes. Fixed in Apache Tomcat 8.0.5:
http://tomcat.apache.org/security-8.html","Important: Denial of Service CVE-2014-0095
A regression was introduced in 1519838 that caused AJP requests to hang if an explicit content length of zero was set on the request. The hanging request consumed a request processing thread which could lead to a denial of service.
This was fixed in revision 1578392.
This issue was reported as a possible bug via the Tomcat users mailing list on 3 March 2014 and the security implications were identified by the Tomcat security team on the same day. This issue was made public on 27 May 2014.
Affects: 8.0.0-RC2 to 8.0.3",No,2014-3-3,2014-5-27,2014-3-27,8884dae60ace77a87ed9385442ce429e98c3a479,java/org/apache/coyote/ajp/AbstractAjpProcessor.java,Correct regression introduced in 8.0.0-RC2 as part of the Servlet 3.1 non-blocking IO support that broke handling of requests with an explicit content length of zero.,https://github.com/apache/tomcat/commit/8884dae60ace77a87ed9385442ce429e98c3a479,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,24,51,166,27,Global,0.994772218073189,3996,4017,Mark Emlyn David Thomas
CVE-2014-0095,20,NA,DoS,2014-5-31,2017-11-14,5,None,Remote,Low,Not required,None,None,Partial,"java/org/apache/coyote/ajp/AbstractAjpProcessor.java in Apache Tomcat 8.x before 8.0.4 allows remote attackers to cause a denial of service (thread consumption) by using a ""Content-Length: 0"" AJP request to trigger a hang in request processing.",https://www.cvedetails.com/cve/CVE-2014-0095/,20131203,"Yes. Fixed in Apache Tomcat 8.0.5:
http://tomcat.apache.org/security-8.html","Important: Denial of Service CVE-2014-0095
A regression was introduced in 1519838 that caused AJP requests to hang if an explicit content length of zero was set on the request. The hanging request consumed a request processing thread which could lead to a denial of service.
This was fixed in revision 1578392.
This issue was reported as a possible bug via the Tomcat users mailing list on 3 March 2014 and the security implications were identified by the Tomcat security team on the same day. This issue was made public on 27 May 2014.
Affects: 8.0.0-RC2 to 8.0.3",No,2014-3-3,2014-5-27,2014-3-27,8884dae60ace77a87ed9385442ce429e98c3a479,test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java,Correct regression introduced in 8.0.0-RC2 as part of the Servlet 3.1 non-blocking IO support that broke handling of requests with an explicit content length of zero.,https://github.com/apache/tomcat/commit/8884dae60ace77a87ed9385442ce429e98c3a479,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,137,137,166,27,Global,0.961061946902655,543,565,Mark Emlyn David Thomas
CVE-2014-0095,20,NA,DoS,2014-5-31,2017-11-14,5,None,Remote,Low,Not required,None,None,Partial,"java/org/apache/coyote/ajp/AbstractAjpProcessor.java in Apache Tomcat 8.x before 8.0.4 allows remote attackers to cause a denial of service (thread consumption) by using a ""Content-Length: 0"" AJP request to trigger a hang in request processing.",https://www.cvedetails.com/cve/CVE-2014-0095/,20131203,"Yes. Fixed in Apache Tomcat 8.0.5:
http://tomcat.apache.org/security-8.html","Important: Denial of Service CVE-2014-0095
A regression was introduced in 1519838 that caused AJP requests to hang if an explicit content length of zero was set on the request. The hanging request consumed a request processing thread which could lead to a denial of service.
This was fixed in revision 1578392.
This issue was reported as a possible bug via the Tomcat users mailing list on 3 March 2014 and the security implications were identified by the Tomcat security team on the same day. This issue was made public on 27 May 2014.
Affects: 8.0.0-RC2 to 8.0.3",No,2014-3-3,2014-5-27,2014-3-27,8884dae60ace77a87ed9385442ce429e98c3a479,webapps/docs/changelog.xml,Correct regression introduced in 8.0.0-RC2 as part of the Servlet 3.1 non-blocking IO support that broke handling of requests with an explicit content length of zero.,https://github.com/apache/tomcat/commit/8884dae60ace77a87ed9385442ce429e98c3a479,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,5,5,166,27,Global,0.530789387487717,9723,18318,Mark Emlyn David Thomas
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,89cd0cf33a99dbbcf5c69050a83b6876e39269d7,java/org/apache/catalina/Context.java,Move the functionality that provides redirects for context roots and directories where a trailing <code>/</code> is added from the Mapper to the DefaultServlet. This enables such requests to be processed by any configured Valves and Filters before the redirect is made. This behaviour is configurable via the mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled attributes of the Context which may be used to restore the previous behaviour.,https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-19,9,40,40,232,8,Global,0.027032561949621,132,4883,Mladen Turk
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,89cd0cf33a99dbbcf5c69050a83b6876e39269d7,java/org/apache/catalina/core/mbeans-descriptors.xml,Move the functionality that provides redirects for context roots and directories where a trailing <code>/</code> is added from the Mapper to the DefaultServlet. This enables such requests to be processed by any configured Valves and Filters before the redirect is made. This behaviour is configurable via the mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled attributes of the Context which may be used to restore the previous behaviour.,https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-19,9,8,8,232,8,Global,0.001649824706125,8,4849,Mark Emlyn David Thomas
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,89cd0cf33a99dbbcf5c69050a83b6876e39269d7,java/org/apache/catalina/core/StandardContext.java,Move the functionality that provides redirects for context roots and directories where a trailing <code>/</code> is added from the Mapper to the DefaultServlet. This enables such requests to be processed by any configured Valves and Filters before the redirect is made. This behaviour is configurable via the mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled attributes of the Context which may be used to restore the previous behaviour.,https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-19,9,41,41,232,8,Global,0.01360781577111,351,25794,Mladen Turk
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,89cd0cf33a99dbbcf5c69050a83b6876e39269d7,java/org/apache/catalina/mapper/Mapper.java,Move the functionality that provides redirects for context roots and directories where a trailing <code>/</code> is added from the Mapper to the DefaultServlet. This enables such requests to be processed by any configured Valves and Filters before the redirect is made. This behaviour is configurable via the mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled attributes of the Context which may be used to restore the previous behaviour.,https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-19,9,5,10,232,8,Global,0.013587702443041,99,7286,Mladen Turk
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,89cd0cf33a99dbbcf5c69050a83b6876e39269d7,java/org/apache/catalina/servlets/DefaultServlet.java,Move the functionality that provides redirects for context roots and directories where a trailing <code>/</code> is added from the Mapper to the DefaultServlet. This enables such requests to be processed by any configured Valves and Filters before the redirect is made. This behaviour is configurable via the mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled attributes of the Context which may be used to restore the previous behaviour.,https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-19,9,11,11,232,8,Global,0.005917808219178,54,9125,Mladen Turk
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,89cd0cf33a99dbbcf5c69050a83b6876e39269d7,java/org/apache/catalina/startup/FailedContext.java,Move the functionality that provides redirects for context roots and directories where a trailing <code>/</code> is added from the Mapper to the DefaultServlet. This enables such requests to be processed by any configured Valves and Filters before the redirect is made. This behaviour is configurable via the mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled attributes of the Context which may be used to restore the previous behaviour.,https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-19,9,17,18,232,8,Global,0.011638316920322,26,2234,Mark Emlyn David Thomas
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,89cd0cf33a99dbbcf5c69050a83b6876e39269d7,test/org/apache/catalina/core/TesterContext.java,Move the functionality that provides redirects for context roots and directories where a trailing <code>/</code> is added from the Mapper to the DefaultServlet. This enables such requests to be processed by any configured Valves and Filters before the redirect is made. This behaviour is configurable via the mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled attributes of the Context which may be used to restore the previous behaviour.,https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-19,9,16,16,232,8,Global,0.01656314699793,24,1449,Mark Emlyn David Thomas
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,89cd0cf33a99dbbcf5c69050a83b6876e39269d7,test/org/apache/catalina/mapper/TestMapperWebapps.java,Move the functionality that provides redirects for context roots and directories where a trailing <code>/</code> is added from the Mapper to the DefaultServlet. This enables such requests to be processed by any configured Valves and Filters before the redirect is made. This behaviour is configurable via the mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled attributes of the Context which may be used to restore the previous behaviour.,https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-19,9,64,64,232,8,Global,0.203821656050955,64,314,Konstantin Kolinko
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,89cd0cf33a99dbbcf5c69050a83b6876e39269d7,test/org/apache/catalina/startup/TomcatBaseTest.java,Move the functionality that provides redirects for context roots and directories where a trailing <code>/</code> is added from the Mapper to the DefaultServlet. This enables such requests to be processed by any configured Valves and Filters before the redirect is made. This behaviour is configurable via the mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled attributes of the Context which may be used to restore the previous behaviour.,https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-19,9,1,3,232,8,Global,0.081547619047619,137,1680,Mark Emlyn David Thomas
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,89cd0cf33a99dbbcf5c69050a83b6876e39269d7,test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,Move the functionality that provides redirects for context roots and directories where a trailing <code>/</code> is added from the Mapper to the DefaultServlet. This enables such requests to be processed by any configured Valves and Filters before the redirect is made. This behaviour is configurable via the mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled attributes of the Context which may be used to restore the previous behaviour.,https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-19,9,3,3,232,8,Global,0.914529914529915,107,117,Mark Thomas
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,89cd0cf33a99dbbcf5c69050a83b6876e39269d7,webapps/docs/changelog.xml,Move the functionality that provides redirects for context roots and directories where a trailing <code>/</code> is added from the Mapper to the DefaultServlet. This enables such requests to be processed by any configured Valves and Filters before the redirect is made. This behaviour is configurable via the mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled attributes of the Context which may be used to restore the previous behaviour.,https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-19,9,10,10,232,8,Global,0.00351858917292,83,23589,Mark Emlyn David Thomas
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,89cd0cf33a99dbbcf5c69050a83b6876e39269d7,webapps/docs/config/context.xml,Move the functionality that provides redirects for context roots and directories where a trailing <code>/</code> is added from the Mapper to the DefaultServlet. This enables such requests to be processed by any configured Valves and Filters before the redirect is made. This behaviour is configurable via the mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled attributes of the Context which may be used to restore the previous behaviour.,https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-19,9,16,16,232,8,Global,0.014174822814715,42,2963,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,8a313689a31c23e2f5e4ff70b39f2ae25c447dc0,java/org/apache/catalina/session/StandardManager.java,"Refactor handling of failed loading of persisted sessions.
Old behaviour:
 - sessions loaded up to point where error occurred
 - serialized session data deleted
 - web app started
i.e. session data after the failure was lost
New behaviour
 - serialized session data deleted only if all sessions loaded without error
 - web application only starts if all sessions loaded without error",https://github.com/apache/tomcat/commit/8a313689a31c23e2f5e4ff70b39f2ae25c447dc0,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-18,6,10,12,10,2,Local,0.0873063170441,293,3356,Mladen Turk
CVE-2016-3092,20,NA,DoS,2016-7-4,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The MultipartStream class in Apache Commons Fileupload before 1.3.2, as used in Apache Tomcat 7.x before 7.0.70, 8.x before 8.0.36, 8.5.x before 8.5.3, and 9.x before 9.0.0.M7 and other products, allows remote attackers to cause a denial of service (CPU consumption) via a long boundary string.",https://www.cvedetails.com/cve/CVE-2016-3092/,20160310,"Yes. Fixed in Apache Tomcat 7.0.70, 8.5.3, 8.0.36, 9.0.0.M8:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Denial of Service CVE-2016-3092
Apache Tomcat uses a package renamed copy of Apache Commons FileUpload to implement the file upload requirements of the Servlet specification. A denial of service vulnerability was identified in Commons FileUpload that occurred when the length of the multipart boundary was just below the size of the buffer (4096 bytes) used to read the uploaded file. This caused the file upload process to take several orders of magnitude longer than if the boundary was the typical tens of bytes long.
This was fixed in revision 1743742.
This issue was identified by the TERASOLUNA Framework Development Team and reported to the Apache Commons team via JPCERT on 9 May 2016. It was made public on 21 June 2016.
Affects: 7.0.0 to 7.0.69
This was fixed in revision 1743722 for 8.5.x and revision 1743738 for 8.0.x.
This issue was identified by the TERASOLUNA Framework Development Team and reported to the Apache Commons team via JPCERT on 9 May 2016. It was made public on 21 June 2016.
Affects: 8.5.0 to 8.5.2, 8.0.0.RC1 to 8.0.35
This was fixed in revision 1743700.
This issue was identified by the TERASOLUNA Framework Development Team and reported to the Apache Commons team via JPCERT on 9 May 2016. It was made public on 21 June 2016.
Affects: 9.0.0.M1 to 9.0.0.M6",No,2016-5-9,2016-6-21,2016-6-20,8e67e4a4799a9765b3bd777eed3ee17f00514441,java/org/apache/tomcat/util/http/fileupload/MultipartStream.java,Update internal fork of Commons File Upload,https://github.com/apache/tomcat/commit/8e67e4a4799a9765b3bd777eed3ee17f00514441,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-5-13,1,6,12,10,6,Global,0.006578947368421,14,2128,Mark Emlyn David Thomas
CVE-2016-3092,20,NA,DoS,2016-7-4,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"The MultipartStream class in Apache Commons Fileupload before 1.3.2, as used in Apache Tomcat 7.x before 7.0.70, 8.x before 8.0.36, 8.5.x before 8.5.3, and 9.x before 9.0.0.M7 and other products, allows remote attackers to cause a denial of service (CPU consumption) via a long boundary string.",https://www.cvedetails.com/cve/CVE-2016-3092/,20160310,"Yes. Fixed in Apache Tomcat 7.0.70, 8.5.3, 8.0.36, 9.0.0.M8:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Denial of Service CVE-2016-3092
Apache Tomcat uses a package renamed copy of Apache Commons FileUpload to implement the file upload requirements of the Servlet specification. A denial of service vulnerability was identified in Commons FileUpload that occurred when the length of the multipart boundary was just below the size of the buffer (4096 bytes) used to read the uploaded file. This caused the file upload process to take several orders of magnitude longer than if the boundary was the typical tens of bytes long.
This was fixed in revision 1743742.
This issue was identified by the TERASOLUNA Framework Development Team and reported to the Apache Commons team via JPCERT on 9 May 2016. It was made public on 21 June 2016.
Affects: 7.0.0 to 7.0.69
This was fixed in revision 1743722 for 8.5.x and revision 1743738 for 8.0.x.
This issue was identified by the TERASOLUNA Framework Development Team and reported to the Apache Commons team via JPCERT on 9 May 2016. It was made public on 21 June 2016.
Affects: 8.5.0 to 8.5.2, 8.0.0.RC1 to 8.0.35
This was fixed in revision 1743700.
This issue was identified by the TERASOLUNA Framework Development Team and reported to the Apache Commons team via JPCERT on 9 May 2016. It was made public on 21 June 2016.
Affects: 9.0.0.M1 to 9.0.0.M6",No,2016-5-9,2016-6-21,2016-6-20,8e67e4a4799a9765b3bd777eed3ee17f00514441,webapps/docs/changelog.xml,Update internal fork of Commons File Upload,https://github.com/apache/tomcat/commit/8e67e4a4799a9765b3bd777eed3ee17f00514441,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-5-13,1,4,4,10,6,Global,0.037774395128986,943,24964,Mark Emlyn David Thomas
CVE-2011-2481,NA,NA,,2011-8-15,2017-5-22,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"Apache Tomcat 7.0.x before 7.0.17 permits web applications to replace an XML parser used for other web applications, which allows local users to read or modify the (1) web.xml, (2) context.xml, or (3) tld files of arbitrary web applications via a crafted application that is loaded earlier than the target application. NOTE: this vulnerability exists because of a CVE-2009-0783 regression.",https://www.cvedetails.com/cve/CVE-2011-2481/,20110615,"Yes. Fixed in Apache Tomcat 7.0.19:
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2481
The re-factoring of XML validation for Tomcat 7.0.x re-introduced the vulnerability previously reported as CVE-2009-0783. This was initially reported as a memory leak. If a web application is the first web application loaded, this bugs allows that web application to potentially view and/or alter the web.xml, context.xml and tld files of other web applications deployed on the Tomcat instance.
This was first fixed in revision 1137753, but reverted in revision 1138776 and finally fixed in revision 1138788.
This was identified by the Tomcat security team on 20 June 2011 and made public on 12 August 2011.
Affects: 7.0.0-7.0.16",No,2011-6-20,2011-8-12,2011-7-9,8fa210147ffd98e8971cba56395726cc4a893ad7,java/org/apache/catalina/startup/ContextConfig.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51395
Fix memory leak triggered when an application that includes a SAXParserFactory is the first web application to be loaded.
Fix part 1 of 3 for CVE-2011-2481",https://github.com/apache/tomcat/commit/8fa210147ffd98e8971cba56395726cc4a893ad7,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-20,4,27,52,32,25,Global,0.423229606863875,3305,7809,Mark Emlyn David Thomas
CVE-2011-2481,NA,NA,,2011-8-15,2017-5-22,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"Apache Tomcat 7.0.x before 7.0.17 permits web applications to replace an XML parser used for other web applications, which allows local users to read or modify the (1) web.xml, (2) context.xml, or (3) tld files of arbitrary web applications via a crafted application that is loaded earlier than the target application. NOTE: this vulnerability exists because of a CVE-2009-0783 regression.",https://www.cvedetails.com/cve/CVE-2011-2481/,20110615,"Yes. Fixed in Apache Tomcat 7.0.19:
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2481
The re-factoring of XML validation for Tomcat 7.0.x re-introduced the vulnerability previously reported as CVE-2009-0783. This was initially reported as a memory leak. If a web application is the first web application loaded, this bugs allows that web application to potentially view and/or alter the web.xml, context.xml and tld files of other web applications deployed on the Tomcat instance.
This was first fixed in revision 1137753, but reverted in revision 1138776 and finally fixed in revision 1138788.
This was identified by the Tomcat security team on 20 June 2011 and made public on 12 August 2011.
Affects: 7.0.0-7.0.16",No,2011-6-20,2011-8-12,2011-7-9,8fa210147ffd98e8971cba56395726cc4a893ad7,webapps/docs/changelog.xml,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51395
Fix memory leak triggered when an application that includes a SAXParserFactory is the first web application to be loaded.
Fix part 1 of 3 for CVE-2011-2481",https://github.com/apache/tomcat/commit/8fa210147ffd98e8971cba56395726cc4a893ad7,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-20,4,5,5,32,25,Global,0.378893537889354,4890,12906,Mark Emlyn David Thomas
CVE-2007-5461,22,NA,Directory Traversal,2007-10-15,2017-9-28,3.5,None,Remote,Medium,Single system,Partial,None,None,"Absolute path traversal vulnerability in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0, 5.0.0, 5.5.0 through 5.5.25, and 6.0.0 through 6.0.14, under certain configurations, allows remote authenticated users to read arbitrary files via a WebDAV write request that specifies an entity with a SYSTEM tag.",https://www.cvedetails.com/cve/CVE-2007-5461/,20071015,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","When Tomcat's WebDAV servlet is configured for use with a context and has been enabled for write, some WebDAV requests that specify an entity with a SYSTEM tag can result in the contents of arbitary files being returned to the client.",No,,,2008-2-8,901292cf9d7d8225f8a3b96c7583e2bd8b41772d,java/org/apache/catalina/servlets/WebdavServlet.java,Fix CVE-2007-5461.,https://github.com/apache/tomcat/commit/901292cf9d7d8225f8a3b96c7583e2bd8b41772d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-18,5,1,1,5,5,Global,0.0183282127344,173,9439,Mladen Turk
CVE-2007-5461,22,NA,Directory Traversal,2007-10-15,2017-9-28,3.5,None,Remote,Medium,Single system,Partial,None,None,"Absolute path traversal vulnerability in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0, 5.0.0, 5.5.0 through 5.5.25, and 6.0.0 through 6.0.14, under certain configurations, allows remote authenticated users to read arbitrary files via a WebDAV write request that specifies an entity with a SYSTEM tag.",https://www.cvedetails.com/cve/CVE-2007-5461/,20071015,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","When Tomcat's WebDAV servlet is configured for use with a context and has been enabled for write, some WebDAV requests that specify an entity with a SYSTEM tag can result in the contents of arbitary files being returned to the client.",No,,,2008-2-8,901292cf9d7d8225f8a3b96c7583e2bd8b41772d,STATUS,Fix CVE-2007-5461.,https://github.com/apache/tomcat/commit/901292cf9d7d8225f8a3b96c7583e2bd8b41772d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-18,5,0,5,5,5,Global,0.008391608391608,12,1430,Remy Maucherat
CVE-2007-5461,22,NA,Directory Traversal,2007-10-15,2017-9-28,3.5,None,Remote,Medium,Single system,Partial,None,None,"Absolute path traversal vulnerability in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0, 5.0.0, 5.5.0 through 5.5.25, and 6.0.0 through 6.0.14, under certain configurations, allows remote authenticated users to read arbitrary files via a WebDAV write request that specifies an entity with a SYSTEM tag.",https://www.cvedetails.com/cve/CVE-2007-5461/,20071015,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","When Tomcat's WebDAV servlet is configured for use with a context and has been enabled for write, some WebDAV requests that specify an entity with a SYSTEM tag can result in the contents of arbitary files being returned to the client.",No,,,2008-2-8,901292cf9d7d8225f8a3b96c7583e2bd8b41772d,webapps/docs/changelog.xml,Fix CVE-2007-5461.,https://github.com/apache/tomcat/commit/901292cf9d7d8225f8a3b96c7583e2bd8b41772d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-18,5,4,4,5,5,Global,0.055148528040496,414,7507,Remy Maucherat
CVE-2014-0096,264,NA,Bypass,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2014-0096/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0096
The default servlet allows web applications to define (at multiple levels) an XSLT to be used to format a directory listing. When running under a security manager, the processing of these was not subject to the same constraints as the web application. This enabled a malicious web application to bypass the file access constraints imposed by the security manager via the use of external XML entities.
This was fixed in revision 1585853.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1578637 and 1578655.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revisions 1578610 and 1578611.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-27,2014-5-27,2014-5-23,913d94b289e056107e521dbab8e79cc72a62a331,conf/web.xml,Prevent user supplied XSLTs from defining external entities,https://github.com/apache/tomcat/commit/913d94b289e056107e521dbab8e79cc72a62a331,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,6,10,126,35,Global,0.137405886379192,803,5844,Rainer Jung
CVE-2014-0096,264,NA,Bypass,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2014-0096/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0096
The default servlet allows web applications to define (at multiple levels) an XSLT to be used to format a directory listing. When running under a security manager, the processing of these was not subject to the same constraints as the web application. This enabled a malicious web application to bypass the file access constraints imposed by the security manager via the use of external XML entities.
This was fixed in revision 1585853.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1578637 and 1578655.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revisions 1578610 and 1578611.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-27,2014-5-27,2014-5-23,913d94b289e056107e521dbab8e79cc72a62a331,java/org/apache/catalina/servlets/DefaultServlet.java,Prevent user supplied XSLTs from defining external entities,https://github.com/apache/tomcat/commit/913d94b289e056107e521dbab8e79cc72a62a331,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,106,128,126,35,Global,0.202455382516767,1781,8797,Mladen Turk
CVE-2014-0096,264,NA,Bypass,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2014-0096/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0096
The default servlet allows web applications to define (at multiple levels) an XSLT to be used to format a directory listing. When running under a security manager, the processing of these was not subject to the same constraints as the web application. This enabled a malicious web application to bypass the file access constraints imposed by the security manager via the use of external XML entities.
This was fixed in revision 1585853.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1578637 and 1578655.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revisions 1578610 and 1578611.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-27,2014-5-27,2014-5-23,913d94b289e056107e521dbab8e79cc72a62a331,java/org/apache/catalina/servlets/LocalStrings.properties,Prevent user supplied XSLTs from defining external entities,https://github.com/apache/tomcat/commit/913d94b289e056107e521dbab8e79cc72a62a331,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,3,3,126,35,Global,0.344827586206897,30,87,Mladen Turk
CVE-2014-0096,264,NA,Bypass,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2014-0096/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0096
The default servlet allows web applications to define (at multiple levels) an XSLT to be used to format a directory listing. When running under a security manager, the processing of these was not subject to the same constraints as the web application. This enabled a malicious web application to bypass the file access constraints imposed by the security manager via the use of external XML entities.
This was fixed in revision 1585853.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1578637 and 1578655.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revisions 1578610 and 1578611.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-27,2014-5-27,2014-5-23,913d94b289e056107e521dbab8e79cc72a62a331,webapps/docs/default-servlet.xml,Prevent user supplied XSLTs from defining external entities,https://github.com/apache/tomcat/commit/913d94b289e056107e521dbab8e79cc72a62a331,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,11,20,126,35,Global,0.530446549391069,392,739,Mark Emlyn David Thomas
CVE-2017-5651,19,NA,,2017-4-17,2018-6-15,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the refactoring of the HTTP connectors introduced a regression in the send file processing. If the send file processing completed quickly, it was possible for the Processor to be added to the processor cache twice. This could result in the same Processor being used for multiple requests which in turn could lead to unexpected errors and/or response mix-up.",https://www.cvedetails.com/cve/CVE-2017-5651/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2017-5651
The refactoring of the HTTP connectors for 8.5.x onwards, introduced a regression in the send file processing. If the send file processing completed quickly, it was possible for the Processor to be added to the processor cache twice. This could result in the same Processor being used for multiple requests which in turn could lead to unexpected errors and/or response mix-up.
This was fixed in revision 1788546.
This issue was identified by the Apache Tomcat Security Team on 24 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788544.
This issue was identified by the Apache Tomcat Security Team on 24 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-24,2017-4-10,2017-3-30,9233d9d6a018be4415d4d7d6cb4fe01176adf1a8,java/org/apache/coyote/http11/Http11Processor.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60918
When sendfile processing passes to the Poller for completion and then completes before Http11Processor.service() exists, the Processor is recycled which clears sendfileData causing the Processor to return CLOSED or OPEN rather than SENDFILE.",https://github.com/apache/tomcat/commit/9233d9d6a018be4415d4d7d6cb4fe01176adf1a8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-24,4,23,51,28,28,Global,0.404684095860566,2972,7344,Mark Emlyn David Thomas
CVE-2017-5651,19,NA,,2017-4-17,2018-6-15,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the refactoring of the HTTP connectors introduced a regression in the send file processing. If the send file processing completed quickly, it was possible for the Processor to be added to the processor cache twice. This could result in the same Processor being used for multiple requests which in turn could lead to unexpected errors and/or response mix-up.",https://www.cvedetails.com/cve/CVE-2017-5651/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2017-5651
The refactoring of the HTTP connectors for 8.5.x onwards, introduced a regression in the send file processing. If the send file processing completed quickly, it was possible for the Processor to be added to the processor cache twice. This could result in the same Processor being used for multiple requests which in turn could lead to unexpected errors and/or response mix-up.
This was fixed in revision 1788546.
This issue was identified by the Apache Tomcat Security Team on 24 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788544.
This issue was identified by the Apache Tomcat Security Team on 24 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-24,2017-4-10,2017-3-30,9233d9d6a018be4415d4d7d6cb4fe01176adf1a8,webapps/docs/changelog.xml,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60918
When sendfile processing passes to the Poller for completion and then completes before Http11Processor.service() exists, the Processor is recycled which clears sendfileData causing the Processor to return CLOSED or OPEN rather than SENDFILE.",https://github.com/apache/tomcat/commit/9233d9d6a018be4415d4d7d6cb4fe01176adf1a8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-24,4,5,5,28,28,Global,0.095503762158194,2602,27245,Mark Emlyn David Thomas
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,9314e5bcb978c78079e61dc96916ad472c3278c6,java/org/apache/catalina/core/StandardWrapper.java,Fix bug 43887. Include exception in the log message.,https://github.com/apache/tomcat/commit/9314e5bcb978c78079e61dc96916ad472c3278c6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-11-23,143,2,4,2,2,Local,0.025337014779925,156,6157,Mladen Turk
CVE-2015-5174,22,NA,Directory Traversal Bypass,2016-2-24,2018-7-18,4,None,Remote,Low,Single system,Partial,None,None,"Directory traversal vulnerability in RequestUtil.java in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.65, and 8.x before 8.0.27 allows remote authenticated users to bypass intended SecurityManager restrictions and list a parent directory via a /.. (slash dot dot) in a pathname used by a web application in a getResource, getResourceAsStream, or getResourcePaths call, as demonstrated by the $CATALINA_BASE/webapps directory.",https://www.cvedetails.com/cve/CVE-2015-5174/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.65, 8.0.27:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Limited directory traversal CVE-2015-5174
This issue only affects users running untrusted web applications under a security manager.
When accessing resources via the ServletContext methods getResource() getResourceAsStream() and getResourcePaths() the paths should be limited to the current web application. The validation was not correct and paths of the form ""/.."" were not rejected. Note that paths starting with ""/../"" were correctly rejected. This bug allowed malicious web applications running under a security manager to obtain a directory listing for the directory in which the web application had been deployed. This should not be possible when running under a security manager. Typically, the directory listing that would be exposed would be for $CATALINA_BASE/webapps.
This was fixed in revision 1700900.
This issue was identified by the Tomcat security team on 12 August 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1696284 and 1700898.
This issue was identified by the Tomcat security team on 12 August 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.64
This was fixed in revisions 1696281 and 1700897.
This issue was identified by the Tomcat security team on 12 August 2015 and made public on 22 February 2016.
Affects: 8.0.0-RC1 to 8.0.26",No,2015-8-12,2016-2-22,2016-2-11,9418af24af81aa3d1c9b4b572ebf759b6cdeb8ce,java/org/apache/tomcat/util/http/RequestUtil.java,More normalization edge cases,https://github.com/apache/tomcat/commit/9418af24af81aa3d1c9b4b572ebf759b6cdeb8ce,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-9-2,16,8,16,38,8,Global,0.179558011049724,65,362,Mark Emlyn David Thomas
CVE-2015-5174,22,NA,Directory Traversal Bypass,2016-2-24,2018-7-18,4,None,Remote,Low,Single system,Partial,None,None,"Directory traversal vulnerability in RequestUtil.java in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.65, and 8.x before 8.0.27 allows remote authenticated users to bypass intended SecurityManager restrictions and list a parent directory via a /.. (slash dot dot) in a pathname used by a web application in a getResource, getResourceAsStream, or getResourcePaths call, as demonstrated by the $CATALINA_BASE/webapps directory.",https://www.cvedetails.com/cve/CVE-2015-5174/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.65, 8.0.27:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Limited directory traversal CVE-2015-5174
This issue only affects users running untrusted web applications under a security manager.
When accessing resources via the ServletContext methods getResource() getResourceAsStream() and getResourcePaths() the paths should be limited to the current web application. The validation was not correct and paths of the form ""/.."" were not rejected. Note that paths starting with ""/../"" were correctly rejected. This bug allowed malicious web applications running under a security manager to obtain a directory listing for the directory in which the web application had been deployed. This should not be possible when running under a security manager. Typically, the directory listing that would be exposed would be for $CATALINA_BASE/webapps.
This was fixed in revision 1700900.
This issue was identified by the Tomcat security team on 12 August 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1696284 and 1700898.
This issue was identified by the Tomcat security team on 12 August 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.64
This was fixed in revisions 1696281 and 1700897.
This issue was identified by the Tomcat security team on 12 August 2015 and made public on 22 February 2016.
Affects: 8.0.0-RC1 to 8.0.26",No,2015-8-12,2016-2-22,2016-2-11,9418af24af81aa3d1c9b4b572ebf759b6cdeb8ce,test/org/apache/tomcat/util/http/TestRequestUtil.java,More normalization edge cases,https://github.com/apache/tomcat/commit/9418af24af81aa3d1c9b4b572ebf759b6cdeb8ce,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-9-2,16,30,30,38,8,Global,0.50251256281407,100,199,Mark Thomas
CVE-2014-0096,264,NA,Bypass,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2014-0096/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0096
The default servlet allows web applications to define (at multiple levels) an XSLT to be used to format a directory listing. When running under a security manager, the processing of these was not subject to the same constraints as the web application. This enabled a malicious web application to bypass the file access constraints imposed by the security manager via the use of external XML entities.
This was fixed in revision 1585853.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1578637 and 1578655.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revisions 1578610 and 1578611.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-27,2014-5-27,2014-5-23,970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,conf/web.xml,Redefine globalXsltFile as relative to CATALINA_BASE/conf or CATALINA_HOME/conf,https://github.com/apache/tomcat/commit/970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,4,8,94,20,Global,0.135927322591704,793,5834,Rainer Jung
CVE-2014-0096,264,NA,Bypass,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2014-0096/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0096
The default servlet allows web applications to define (at multiple levels) an XSLT to be used to format a directory listing. When running under a security manager, the processing of these was not subject to the same constraints as the web application. This enabled a malicious web application to bypass the file access constraints imposed by the security manager via the use of external XML entities.
This was fixed in revision 1585853.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1578637 and 1578655.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revisions 1578610 and 1578611.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-27,2014-5-27,2014-5-23,970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,java/org/apache/catalina/Container.java,Redefine globalXsltFile as relative to CATALINA_BASE/conf or CATALINA_HOME/conf,https://github.com/apache/tomcat/commit/970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,7,8,94,20,Global,0.162893081761006,259,1590,Mladen Turk
CVE-2014-0096,264,NA,Bypass,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2014-0096/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0096
The default servlet allows web applications to define (at multiple levels) an XSLT to be used to format a directory listing. When running under a security manager, the processing of these was not subject to the same constraints as the web application. This enabled a malicious web application to bypass the file access constraints imposed by the security manager via the use of external XML entities.
This was fixed in revision 1585853.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1578637 and 1578655.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revisions 1578610 and 1578611.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-27,2014-5-27,2014-5-23,970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,java/org/apache/catalina/core/ContainerBase.java,Redefine globalXsltFile as relative to CATALINA_BASE/conf or CATALINA_HOME/conf,https://github.com/apache/tomcat/commit/970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,11,11,94,20,Global,0.282243816254417,1917,6792,Mladen Turk
CVE-2014-0096,264,NA,Bypass,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2014-0096/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0096
The default servlet allows web applications to define (at multiple levels) an XSLT to be used to format a directory listing. When running under a security manager, the processing of these was not subject to the same constraints as the web application. This enabled a malicious web application to bypass the file access constraints imposed by the security manager via the use of external XML entities.
This was fixed in revision 1585853.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1578637 and 1578655.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revisions 1578610 and 1578611.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-27,2014-5-27,2014-5-23,970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,java/org/apache/catalina/core/StandardEngine.java,Redefine globalXsltFile as relative to CATALINA_BASE/conf or CATALINA_HOME/conf,https://github.com/apache/tomcat/commit/970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,16,16,94,20,Global,0.294851166532582,733,2486,Mladen Turk
CVE-2014-0096,264,NA,Bypass,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2014-0096/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0096
The default servlet allows web applications to define (at multiple levels) an XSLT to be used to format a directory listing. When running under a security manager, the processing of these was not subject to the same constraints as the web application. This enabled a malicious web application to bypass the file access constraints imposed by the security manager via the use of external XML entities.
This was fixed in revision 1585853.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1578637 and 1578655.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revisions 1578610 and 1578611.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-27,2014-5-27,2014-5-23,970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,java/org/apache/catalina/servlets/DefaultServlet.java,Redefine globalXsltFile as relative to CATALINA_BASE/conf or CATALINA_HOME/conf,https://github.com/apache/tomcat/commit/970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,42,52,94,20,Global,0.190679432460491,1653,8669,Mladen Turk
CVE-2014-0096,264,NA,Bypass,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2014-0096/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0096
The default servlet allows web applications to define (at multiple levels) an XSLT to be used to format a directory listing. When running under a security manager, the processing of these was not subject to the same constraints as the web application. This enabled a malicious web application to bypass the file access constraints imposed by the security manager via the use of external XML entities.
This was fixed in revision 1585853.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1578637 and 1578655.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revisions 1578610 and 1578611.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-27,2014-5-27,2014-5-23,970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,java/org/apache/catalina/startup/FailedContext.java,Redefine globalXsltFile as relative to CATALINA_BASE/conf or CATALINA_HOME/conf,https://github.com/apache/tomcat/commit/970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,3,3,94,20,Global,0.987043035631652,2133,2161,Mark Emlyn David Thomas
CVE-2014-0096,264,NA,Bypass,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2014-0096/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0096
The default servlet allows web applications to define (at multiple levels) an XSLT to be used to format a directory listing. When running under a security manager, the processing of these was not subject to the same constraints as the web application. This enabled a malicious web application to bypass the file access constraints imposed by the security manager via the use of external XML entities.
This was fixed in revision 1585853.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1578637 and 1578655.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revisions 1578610 and 1578611.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-27,2014-5-27,2014-5-23,970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,test/org/apache/catalina/core/TesterContext.java,Redefine globalXsltFile as relative to CATALINA_BASE/conf or CATALINA_HOME/conf,https://github.com/apache/tomcat/commit/970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,5,5,94,20,Global,0.974619289340102,1344,1379,Mark Emlyn David Thomas
CVE-2014-0096,264,NA,Bypass,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,Partial,None,None,"java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",https://www.cvedetails.com/cve/CVE-2014-0096/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0096
The default servlet allows web applications to define (at multiple levels) an XSLT to be used to format a directory listing. When running under a security manager, the processing of these was not subject to the same constraints as the web application. This enabled a malicious web application to bypass the file access constraints imposed by the security manager via the use of external XML entities.
This was fixed in revision 1585853.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1578637 and 1578655.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revisions 1578610 and 1578611.
This issue was identified by the Tomcat security team on 27 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-27,2014-5-27,2014-5-23,970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,webapps/docs/default-servlet.xml,Redefine globalXsltFile as relative to CATALINA_BASE/conf or CATALINA_HOME/conf,https://github.com/apache/tomcat/commit/970c23bfd24dfa1dcb86ed917e6c8b47dcfb4433,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,6,11,94,20,Global,0.517385257301808,372,719,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,981a04ea8dc161778e68dec5b3846611cd341f69,java/org/apache/coyote/http11/upgrade/AprUpgradeServletInputStream.java,"Re-write reading from upgraded connection to use non-blocking IO.
NIO tested for basic operations
BIO untested
APR not written",https://github.com/apache/tomcat/commit/981a04ea8dc161778e68dec5b3846611cd341f69,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,79,79,489,238,Global,1,79,79,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,981a04ea8dc161778e68dec5b3846611cd341f69,java/org/apache/coyote/http11/upgrade/BioUpgradeServletInputStream.java,"Re-write reading from upgraded connection to use non-blocking IO.
NIO tested for basic operations
BIO untested
APR not written",https://github.com/apache/tomcat/commit/981a04ea8dc161778e68dec5b3846611cd341f69,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,44,44,489,238,Global,1,44,44,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,981a04ea8dc161778e68dec5b3846611cd341f69,java/org/apache/coyote/http11/upgrade/UpgradeAprProcessor.java,"Re-write reading from upgraded connection to use non-blocking IO.
NIO tested for basic operations
BIO untested
APR not written",https://github.com/apache/tomcat/commit/981a04ea8dc161778e68dec5b3846611cd341f69,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,1,47,489,238,Global,0.843010752688172,784,930,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,981a04ea8dc161778e68dec5b3846611cd341f69,java/org/apache/coyote/http11/upgrade/UpgradeBioProcessor.java,"Re-write reading from upgraded connection to use non-blocking IO.
NIO tested for basic operations
BIO untested
APR not written",https://github.com/apache/tomcat/commit/981a04ea8dc161778e68dec5b3846611cd341f69,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,0,22,489,238,Global,0.826086956521739,703,851,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,981a04ea8dc161778e68dec5b3846611cd341f69,java/org/apache/coyote/http11/upgrade/UpgradeNioProcessor.java,"Re-write reading from upgraded connection to use non-blocking IO.
NIO tested for basic operations
BIO untested
APR not written",https://github.com/apache/tomcat/commit/981a04ea8dc161778e68dec5b3846611cd341f69,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,0,114,489,238,Global,0.820335636722606,1662,2026,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,981a04ea8dc161778e68dec5b3846611cd341f69,java/org/apache/coyote/http11/upgrade/UpgradeProcessor.java,"Re-write reading from upgraded connection to use non-blocking IO.
NIO tested for basic operations
BIO untested
APR not written",https://github.com/apache/tomcat/commit/981a04ea8dc161778e68dec5b3846611cd341f69,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,10,65,489,238,Global,0.691099476439791,528,764,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,981a04ea8dc161778e68dec5b3846611cd341f69,java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java,"Re-write reading from upgraded connection to use non-blocking IO.
NIO tested for basic operations
BIO untested
APR not written",https://github.com/apache/tomcat/commit/981a04ea8dc161778e68dec5b3846611cd341f69,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,87,87,489,238,Global,1,87,87,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,981a04ea8dc161778e68dec5b3846611cd341f69,test/org/apache/coyote/http11/upgrade/TestUpgradeServletInputStream.java,"Re-write reading from upgraded connection to use non-blocking IO.
NIO tested for basic operations
BIO untested
APR not written",https://github.com/apache/tomcat/commit/981a04ea8dc161778e68dec5b3846611cd341f69,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,123,124,489,238,Global,1,228,228,Mark Emlyn David Thomas
CVE-2016-8747,200,NA,+Info,2017-3-14,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,An information disclosure issue was discovered in Apache Tomcat 8.5.7 to 8.5.9 and 9.0.0.M11 to 9.0.0.M15 in reverse-proxy configurations. Http11InputBuffer.java allows remote attackers to read data that was intended to be associated with a different request.,https://www.cvedetails.com/cve/CVE-2016-8747/,20161018,"Yes. Fixed in Apache Tomcat 8.5.11, 9.0.0.M17:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Information Disclosure CVE-2016-8747
The refactoring to make wider use of ByteBuffer introduced a regression that could cause information to leak between requests on the same connection. When running behind a reverse proxy, this could result in information leakage between users. All HTTP connector variants are affected but HTTP/2 and AJP are not affected.
This was fixed in revision 1774166.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 8.5.7 to 8.5.9
This was fixed in revision 1774161.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 9.0.0.M11 to 9.0.0.M15",No,2016-12-13,2017-3-13,2017-1-16,98466fdc1e64d4535b34447ed5ab643bfba87692,java/org/apache/coyote/http11/Http11InputBuffer.java,Also only modify position and limit if necessary,https://github.com/apache/tomcat/commit/98466fdc1e64d4535b34447ed5ab643bfba87692,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-12-14,1,9,15,9,6,Global,0.500895255147717,1119,2234,Mark Thomas
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,a0d1ce103ae0cfb137e43ac56dfd658edd8e844c,java/org/apache/tomcat/util/http/ServerCookie.java,"Escape the "" in the cookie value.",https://github.com/apache/tomcat/commit/a0d1ce103ae0cfb137e43ac56dfd658edd8e844c,Jean-Frederic Clere,,,,2007-7-5,143,29,31,29,2,Local,0.030815109343936,31,1006,Mladen Turk
CVE-2011-3190,264,NA,Bypass +Info,2011-8-31,2018-1-5,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"Certain AJP protocol connector implementations in Apache Tomcat 7.0.0 through 7.0.20, 6.0.0 through 6.0.33, 5.5.0 through 5.5.33, and possibly other versions allow remote attackers to spoof AJP requests, bypass authentication, and obtain sensitive information by causing the connector to interpret a request body as a new request.",https://www.cvedetails.com/cve/CVE-2011-3190/,20110819,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.35, 7.0.21:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Authentication bypass and information disclosure CVE-2011-3190
Apache Tomcat supports the AJP protocol which is used with reverse proxies to pass requests and associated data about the request from the reverse proxy to Tomcat. The AJP protocol is designed so that when a request includes a request body, an unsolicited AJP message is sent to Tomcat that includes the first part (or possibly all) of the request body. In certain circumstances, Tomcat did not process this message as a request body but as a new request. This permitted an attacker to have full control over the AJP message permitting authentication bypass and information disclosure. This vulnerability only occurs when all of the following are true:
The org.apache.jk.server.JkCoyoteHandler AJP connector is not used
POST requests are accepted
The request body is not processed
This was fixed in revision 1162960.
This was reported publicly on 20th August 2011.
Affects: 5.5.0-5.5.33
Mitigation options:
Upgrade to Tomcat 5.5.34.
Apply the appropriate patch.
Configure both Tomcat and the reverse proxy to use a shared secret.
(It is ""request.secret"" attribute in AJP <Connector>, ""worker.workername.secret"" directive for mod_jk. The mod_proxy_ajp module currently does not support shared secrets).
Use the org.apache.jk.server.JkCoyoteHandler (BIO) AJP connector implementation.
(It is automatically selected if you do not have Tomcat-Native library installed. It can be also selected explicitly: <Connector protocol=""org.apache.jk.server.JkCoyoteHandler"">).
References:
AJP Connector documentation (Tomcat 5.5)
workers.properties configuration (mod_jk)
This was fixed in revision 1162959.
This was reported publicly on 20th August 2011.
Affects: 6.0.0-6.0.33
Mitigation options:
Upgrade to Tomcat 6.0.35.
Apply the appropriate patch.
Configure both Tomcat and the reverse proxy to use a shared secret.
(It is ""request.secret"" attribute in AJP <Connector>, ""worker.workername.secret"" directive for mod_jk. The mod_proxy_ajp module currently does not support shared secrets).
Use the org.apache.jk.server.JkCoyoteHandler (BIO) AJP connector implementation.
(It is automatically selected if you do not have Tomcat-Native library installed. It can be also selected explicitly: <Connector protocol=""org.apache.jk.server.JkCoyoteHandler"">).
References:
AJP Connector documentation (Tomcat 6.0)
workers.properties configuration (mod_jk)
This was fixed in revision 1162958.
This was reported publicly on 20th August 2011.
Affects: 7.0.0-7.0.20
Mitigation options:
Upgrade to Tomcat 7.0.21
Apply the appropriate patch
Configure both Tomcat and the reverse proxy to use a shared secret.
(It is ""requiredSecret"" attribute in AJP <Connector>, ""worker.workername.secret"" directive for mod_jk. The mod_proxy_ajp module currently does not support shared secrets).
References:
AJP Connector documentation (Tomcat 7.0)
workers.properties configuration (mod_jk)",No,2011-8-20,,2011-12-5,a2538ce78f83b7376c48d12d8247600079d789b1,java/org/apache/coyote/ajp/AbstractAjpProcessor.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51698
Fix CVE-2011-3190
Prevent AJP request forgery via unread request body packet",https://github.com/apache/tomcat/commit/a2538ce78f83b7376c48d12d8247600079d789b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-8-29,1,5,5,23,13,Global,0.994326241134752,2804,2820,Mark Emlyn David Thomas
CVE-2011-3190,264,NA,Bypass +Info,2011-8-31,2018-1-5,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"Certain AJP protocol connector implementations in Apache Tomcat 7.0.0 through 7.0.20, 6.0.0 through 6.0.33, 5.5.0 through 5.5.33, and possibly other versions allow remote attackers to spoof AJP requests, bypass authentication, and obtain sensitive information by causing the connector to interpret a request body as a new request.",https://www.cvedetails.com/cve/CVE-2011-3190/,20110819,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.35, 7.0.21:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Authentication bypass and information disclosure CVE-2011-3190
Apache Tomcat supports the AJP protocol which is used with reverse proxies to pass requests and associated data about the request from the reverse proxy to Tomcat. The AJP protocol is designed so that when a request includes a request body, an unsolicited AJP message is sent to Tomcat that includes the first part (or possibly all) of the request body. In certain circumstances, Tomcat did not process this message as a request body but as a new request. This permitted an attacker to have full control over the AJP message permitting authentication bypass and information disclosure. This vulnerability only occurs when all of the following are true:
The org.apache.jk.server.JkCoyoteHandler AJP connector is not used
POST requests are accepted
The request body is not processed
This was fixed in revision 1162960.
This was reported publicly on 20th August 2011.
Affects: 5.5.0-5.5.33
Mitigation options:
Upgrade to Tomcat 5.5.34.
Apply the appropriate patch.
Configure both Tomcat and the reverse proxy to use a shared secret.
(It is ""request.secret"" attribute in AJP <Connector>, ""worker.workername.secret"" directive for mod_jk. The mod_proxy_ajp module currently does not support shared secrets).
Use the org.apache.jk.server.JkCoyoteHandler (BIO) AJP connector implementation.
(It is automatically selected if you do not have Tomcat-Native library installed. It can be also selected explicitly: <Connector protocol=""org.apache.jk.server.JkCoyoteHandler"">).
References:
AJP Connector documentation (Tomcat 5.5)
workers.properties configuration (mod_jk)
This was fixed in revision 1162959.
This was reported publicly on 20th August 2011.
Affects: 6.0.0-6.0.33
Mitigation options:
Upgrade to Tomcat 6.0.35.
Apply the appropriate patch.
Configure both Tomcat and the reverse proxy to use a shared secret.
(It is ""request.secret"" attribute in AJP <Connector>, ""worker.workername.secret"" directive for mod_jk. The mod_proxy_ajp module currently does not support shared secrets).
Use the org.apache.jk.server.JkCoyoteHandler (BIO) AJP connector implementation.
(It is automatically selected if you do not have Tomcat-Native library installed. It can be also selected explicitly: <Connector protocol=""org.apache.jk.server.JkCoyoteHandler"">).
References:
AJP Connector documentation (Tomcat 6.0)
workers.properties configuration (mod_jk)
This was fixed in revision 1162958.
This was reported publicly on 20th August 2011.
Affects: 7.0.0-7.0.20
Mitigation options:
Upgrade to Tomcat 7.0.21
Apply the appropriate patch
Configure both Tomcat and the reverse proxy to use a shared secret.
(It is ""requiredSecret"" attribute in AJP <Connector>, ""worker.workername.secret"" directive for mod_jk. The mod_proxy_ajp module currently does not support shared secrets).
References:
AJP Connector documentation (Tomcat 7.0)
workers.properties configuration (mod_jk)",No,2011-8-20,,2011-12-5,a2538ce78f83b7376c48d12d8247600079d789b1,java/org/apache/coyote/ajp/AjpAprProcessor.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51698
Fix CVE-2011-3190
Prevent AJP request forgery via unread request body packet",https://github.com/apache/tomcat/commit/a2538ce78f83b7376c48d12d8247600079d789b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-8-29,1,6,10,23,13,Global,0.255349248452697,1444,5655,Mladen Turk
CVE-2011-3190,264,NA,Bypass +Info,2011-8-31,2018-1-5,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"Certain AJP protocol connector implementations in Apache Tomcat 7.0.0 through 7.0.20, 6.0.0 through 6.0.33, 5.5.0 through 5.5.33, and possibly other versions allow remote attackers to spoof AJP requests, bypass authentication, and obtain sensitive information by causing the connector to interpret a request body as a new request.",https://www.cvedetails.com/cve/CVE-2011-3190/,20110819,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.35, 7.0.21:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Authentication bypass and information disclosure CVE-2011-3190
Apache Tomcat supports the AJP protocol which is used with reverse proxies to pass requests and associated data about the request from the reverse proxy to Tomcat. The AJP protocol is designed so that when a request includes a request body, an unsolicited AJP message is sent to Tomcat that includes the first part (or possibly all) of the request body. In certain circumstances, Tomcat did not process this message as a request body but as a new request. This permitted an attacker to have full control over the AJP message permitting authentication bypass and information disclosure. This vulnerability only occurs when all of the following are true:
The org.apache.jk.server.JkCoyoteHandler AJP connector is not used
POST requests are accepted
The request body is not processed
This was fixed in revision 1162960.
This was reported publicly on 20th August 2011.
Affects: 5.5.0-5.5.33
Mitigation options:
Upgrade to Tomcat 5.5.34.
Apply the appropriate patch.
Configure both Tomcat and the reverse proxy to use a shared secret.
(It is ""request.secret"" attribute in AJP <Connector>, ""worker.workername.secret"" directive for mod_jk. The mod_proxy_ajp module currently does not support shared secrets).
Use the org.apache.jk.server.JkCoyoteHandler (BIO) AJP connector implementation.
(It is automatically selected if you do not have Tomcat-Native library installed. It can be also selected explicitly: <Connector protocol=""org.apache.jk.server.JkCoyoteHandler"">).
References:
AJP Connector documentation (Tomcat 5.5)
workers.properties configuration (mod_jk)
This was fixed in revision 1162959.
This was reported publicly on 20th August 2011.
Affects: 6.0.0-6.0.33
Mitigation options:
Upgrade to Tomcat 6.0.35.
Apply the appropriate patch.
Configure both Tomcat and the reverse proxy to use a shared secret.
(It is ""request.secret"" attribute in AJP <Connector>, ""worker.workername.secret"" directive for mod_jk. The mod_proxy_ajp module currently does not support shared secrets).
Use the org.apache.jk.server.JkCoyoteHandler (BIO) AJP connector implementation.
(It is automatically selected if you do not have Tomcat-Native library installed. It can be also selected explicitly: <Connector protocol=""org.apache.jk.server.JkCoyoteHandler"">).
References:
AJP Connector documentation (Tomcat 6.0)
workers.properties configuration (mod_jk)
This was fixed in revision 1162958.
This was reported publicly on 20th August 2011.
Affects: 7.0.0-7.0.20
Mitigation options:
Upgrade to Tomcat 7.0.21
Apply the appropriate patch
Configure both Tomcat and the reverse proxy to use a shared secret.
(It is ""requiredSecret"" attribute in AJP <Connector>, ""worker.workername.secret"" directive for mod_jk. The mod_proxy_ajp module currently does not support shared secrets).
References:
AJP Connector documentation (Tomcat 7.0)
workers.properties configuration (mod_jk)",No,2011-8-20,,2011-12-5,a2538ce78f83b7376c48d12d8247600079d789b1,java/org/apache/coyote/ajp/AjpNioProcessor.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51698
Fix CVE-2011-3190
Prevent AJP request forgery via unread request body packet",https://github.com/apache/tomcat/commit/a2538ce78f83b7376c48d12d8247600079d789b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-8-29,1,6,10,23,13,Global,0.99344262295082,1212,1220,Mark Emlyn David Thomas
CVE-2011-3190,264,NA,Bypass +Info,2011-8-31,2018-1-5,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"Certain AJP protocol connector implementations in Apache Tomcat 7.0.0 through 7.0.20, 6.0.0 through 6.0.33, 5.5.0 through 5.5.33, and possibly other versions allow remote attackers to spoof AJP requests, bypass authentication, and obtain sensitive information by causing the connector to interpret a request body as a new request.",https://www.cvedetails.com/cve/CVE-2011-3190/,20110819,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.35, 7.0.21:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Authentication bypass and information disclosure CVE-2011-3190
Apache Tomcat supports the AJP protocol which is used with reverse proxies to pass requests and associated data about the request from the reverse proxy to Tomcat. The AJP protocol is designed so that when a request includes a request body, an unsolicited AJP message is sent to Tomcat that includes the first part (or possibly all) of the request body. In certain circumstances, Tomcat did not process this message as a request body but as a new request. This permitted an attacker to have full control over the AJP message permitting authentication bypass and information disclosure. This vulnerability only occurs when all of the following are true:
The org.apache.jk.server.JkCoyoteHandler AJP connector is not used
POST requests are accepted
The request body is not processed
This was fixed in revision 1162960.
This was reported publicly on 20th August 2011.
Affects: 5.5.0-5.5.33
Mitigation options:
Upgrade to Tomcat 5.5.34.
Apply the appropriate patch.
Configure both Tomcat and the reverse proxy to use a shared secret.
(It is ""request.secret"" attribute in AJP <Connector>, ""worker.workername.secret"" directive for mod_jk. The mod_proxy_ajp module currently does not support shared secrets).
Use the org.apache.jk.server.JkCoyoteHandler (BIO) AJP connector implementation.
(It is automatically selected if you do not have Tomcat-Native library installed. It can be also selected explicitly: <Connector protocol=""org.apache.jk.server.JkCoyoteHandler"">).
References:
AJP Connector documentation (Tomcat 5.5)
workers.properties configuration (mod_jk)
This was fixed in revision 1162959.
This was reported publicly on 20th August 2011.
Affects: 6.0.0-6.0.33
Mitigation options:
Upgrade to Tomcat 6.0.35.
Apply the appropriate patch.
Configure both Tomcat and the reverse proxy to use a shared secret.
(It is ""request.secret"" attribute in AJP <Connector>, ""worker.workername.secret"" directive for mod_jk. The mod_proxy_ajp module currently does not support shared secrets).
Use the org.apache.jk.server.JkCoyoteHandler (BIO) AJP connector implementation.
(It is automatically selected if you do not have Tomcat-Native library installed. It can be also selected explicitly: <Connector protocol=""org.apache.jk.server.JkCoyoteHandler"">).
References:
AJP Connector documentation (Tomcat 6.0)
workers.properties configuration (mod_jk)
This was fixed in revision 1162958.
This was reported publicly on 20th August 2011.
Affects: 7.0.0-7.0.20
Mitigation options:
Upgrade to Tomcat 7.0.21
Apply the appropriate patch
Configure both Tomcat and the reverse proxy to use a shared secret.
(It is ""requiredSecret"" attribute in AJP <Connector>, ""worker.workername.secret"" directive for mod_jk. The mod_proxy_ajp module currently does not support shared secrets).
References:
AJP Connector documentation (Tomcat 7.0)
workers.properties configuration (mod_jk)",No,2011-8-20,,2011-12-5,a2538ce78f83b7376c48d12d8247600079d789b1,java/org/apache/coyote/ajp/AjpProcessor.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51698
Fix CVE-2011-3190
Prevent AJP request forgery via unread request body packet",https://github.com/apache/tomcat/commit/a2538ce78f83b7376c48d12d8247600079d789b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-8-29,1,6,11,23,13,Global,0.463991769547325,1353,2916,Mark Emlyn David Thomas
CVE-2007-2449,NA,NA,XSS,2007-6-14,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in certain JSP files in the examples web application in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.36, 5.0.0 through 5.0.30, 5.5.0 through 5.5.24, and 6.0.0 through 6.0.13 allow remote attackers to inject arbitrary web script or HTML via the portion of the URI after the ';' character, as demonstrated by a URI containing a ""snp/snoop.jsp;"" sequence.",https://www.cvedetails.com/cve/CVE-2007-2449/,20070502,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.25, 5.0.SVN, 6.0.14:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",JSPs within the examples web application did not escape user provided data before including it in the output. This enabled a XSS attack. These JSPs now filter the data before use. This issue may be mitigated by undeploying the examples web application. Note that it is recommended that the examples web application is not installed on a production system.,No,,,2007-9-8,a3ba5062e005327edffd06a1677b6fb753807f64,webapps/examples/jsp/security/protected/index.jsp,"Fix XSS issues in snoop.jsp. This is CVE-2007-2449. Some of these are harder (impossible?) to exploit than others but doing all of them means there won't be another XSS issue to patch later.
I also made a similar change for a couple of other JSPs that are in the harder/impossible? to exploit category.",https://github.com/apache/tomcat/commit/a3ba5062e005327edffd06a1677b6fb753807f64,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-6-14,1,4,6,21,18,Global,0.178947368421053,17,95,Remy Maucherat
CVE-2007-2449,NA,NA,XSS,2007-6-14,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in certain JSP files in the examples web application in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.36, 5.0.0 through 5.0.30, 5.5.0 through 5.5.24, and 6.0.0 through 6.0.13 allow remote attackers to inject arbitrary web script or HTML via the portion of the URI after the ';' character, as demonstrated by a URI containing a ""snp/snoop.jsp;"" sequence.",https://www.cvedetails.com/cve/CVE-2007-2449/,20070502,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.25, 5.0.SVN, 6.0.14:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",JSPs within the examples web application did not escape user provided data before including it in the output. This enabled a XSS attack. These JSPs now filter the data before use. This issue may be mitigated by undeploying the examples web application. Note that it is recommended that the examples web application is not installed on a production system.,No,,,2007-9-8,a3ba5062e005327edffd06a1677b6fb753807f64,webapps/examples/jsp/snp/snoop.html,"Fix XSS issues in snoop.jsp. This is CVE-2007-2449. Some of these are harder (impossible?) to exploit than others but doing all of them means there won't be another XSS issue to patch later.
I also made a similar change for a couple of other JSPs that are in the harder/impossible? to exploit category.",https://github.com/apache/tomcat/commit/a3ba5062e005327edffd06a1677b6fb753807f64,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-6-14,1,2,4,21,18,Global,0.333333333333333,15,45,Remy Maucherat
CVE-2007-2449,NA,NA,XSS,2007-6-14,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in certain JSP files in the examples web application in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.36, 5.0.0 through 5.0.30, 5.5.0 through 5.5.24, and 6.0.0 through 6.0.13 allow remote attackers to inject arbitrary web script or HTML via the portion of the URI after the ';' character, as demonstrated by a URI containing a ""snp/snoop.jsp;"" sequence.",https://www.cvedetails.com/cve/CVE-2007-2449/,20070502,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.25, 5.0.SVN, 6.0.14:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",JSPs within the examples web application did not escape user provided data before including it in the output. This enabled a XSS attack. These JSPs now filter the data before use. This issue may be mitigated by undeploying the examples web application. Note that it is recommended that the examples web application is not installed on a production system.,No,,,2007-9-8,a3ba5062e005327edffd06a1677b6fb753807f64,webapps/examples/jsp/snp/snoop.jsp,"Fix XSS issues in snoop.jsp. This is CVE-2007-2449. Some of these are harder (impossible?) to exploit than others but doing all of them means there won't be another XSS issue to patch later.
I also made a similar change for a couple of other JSPs that are in the harder/impossible? to exploit category.",https://github.com/apache/tomcat/commit/a3ba5062e005327edffd06a1677b6fb753807f64,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-6-14,1,14,27,21,18,Global,0.408602150537634,38,93,Remy Maucherat
CVE-2007-2449,NA,NA,XSS,2007-6-14,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in certain JSP files in the examples web application in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.36, 5.0.0 through 5.0.30, 5.5.0 through 5.5.24, and 6.0.0 through 6.0.13 allow remote attackers to inject arbitrary web script or HTML via the portion of the URI after the ';' character, as demonstrated by a URI containing a ""snp/snoop.jsp;"" sequence.",https://www.cvedetails.com/cve/CVE-2007-2449/,20070502,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.25, 5.0.SVN, 6.0.14:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",JSPs within the examples web application did not escape user provided data before including it in the output. This enabled a XSS attack. These JSPs now filter the data before use. This issue may be mitigated by undeploying the examples web application. Note that it is recommended that the examples web application is not installed on a production system.,No,,,2007-9-8,a3ba5062e005327edffd06a1677b6fb753807f64,webapps/examples/jsp/source.jsp,"Fix XSS issues in snoop.jsp. This is CVE-2007-2449. Some of these are harder (impossible?) to exploit than others but doing all of them means there won't be another XSS issue to patch later.
I also made a similar change for a couple of other JSPs that are in the harder/impossible? to exploit category.",https://github.com/apache/tomcat/commit/a3ba5062e005327edffd06a1677b6fb753807f64,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-6-14,1,1,2,21,18,Global,0.40625,13,32,Remy Maucherat
CVE-2010-1157,200,NA,+Info,2010-4-23,2017-9-18,2.6,None,Remote,High,Not required,Partial,None,None,"Apache Tomcat 5.5.0 through 5.5.29 and 6.0.0 through 6.0.26 might allow remote attackers to discover the server's hostname or IP address by sending a request for a resource that requires (1) BASIC or (2) DIGEST authentication, and then reading the realm field in the WWW-Authenticate header in the reply.",https://www.cvedetails.com/cve/CVE-2010-1157/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Information disclosure in authentication headers CVE-2010-1157
The WWW-Authenticate HTTP header for BASIC and DIGEST authentication includes a realm name. If a <realm-name> element is specified for the application in web.xml it will be used. However, a <realm-name> is not specified then Tomcat will generate realm name using the code snippet request.getServerName() + "":"" + request.getServerPort(). In some circumstances this can expose the local host name or IP address of the machine running Tomcat.
This was fixed in revision 936541.
This was first reported to the Tomcat security team on 31 Dec 2009 and made public on 21 Apr 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 936540.
This was first reported to the Tomcat security team on 31 Dec 2009 and made public on 21 Apr 2010.
Affects: 6.0.0-6.0.26",No,2009-12-31,2010-4-21,2010-7-9,a4de93b2aaf74fff7c1e194f7ce3d2228a9680b8,java/org/apache/catalina/authenticator/AuthenticatorBase.java,"Fix CVE-2010-1157.
Prevent possible disclosure of host name or IP address via the HTTP WWW-Authenticate header when using BASIC or DIGEST authentication.",https://github.com/apache/tomcat/commit/a4de93b2aaf74fff7c1e194f7ce3d2228a9680b8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-4-22,1,5,5,12,6,Global,0.060765718299965,173,2847,Mladen Turk
CVE-2010-1157,200,NA,+Info,2010-4-23,2017-9-18,2.6,None,Remote,High,Not required,Partial,None,None,"Apache Tomcat 5.5.0 through 5.5.29 and 6.0.0 through 6.0.26 might allow remote attackers to discover the server's hostname or IP address by sending a request for a resource that requires (1) BASIC or (2) DIGEST authentication, and then reading the realm field in the WWW-Authenticate header in the reply.",https://www.cvedetails.com/cve/CVE-2010-1157/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Information disclosure in authentication headers CVE-2010-1157
The WWW-Authenticate HTTP header for BASIC and DIGEST authentication includes a realm name. If a <realm-name> element is specified for the application in web.xml it will be used. However, a <realm-name> is not specified then Tomcat will generate realm name using the code snippet request.getServerName() + "":"" + request.getServerPort(). In some circumstances this can expose the local host name or IP address of the machine running Tomcat.
This was fixed in revision 936541.
This was first reported to the Tomcat security team on 31 Dec 2009 and made public on 21 Apr 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 936540.
This was first reported to the Tomcat security team on 31 Dec 2009 and made public on 21 Apr 2010.
Affects: 6.0.0-6.0.26",No,2009-12-31,2010-4-21,2010-7-9,a4de93b2aaf74fff7c1e194f7ce3d2228a9680b8,java/org/apache/catalina/authenticator/BasicAuthenticator.java,"Fix CVE-2010-1157.
Prevent possible disclosure of host name or IP address via the HTTP WWW-Authenticate header when using BASIC or DIGEST authentication.",https://github.com/apache/tomcat/commit/a4de93b2aaf74fff7c1e194f7ce3d2228a9680b8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-4-22,1,1,4,12,6,Global,0.100282485875706,71,708,Mladen Turk
CVE-2010-1157,200,NA,+Info,2010-4-23,2017-9-18,2.6,None,Remote,High,Not required,Partial,None,None,"Apache Tomcat 5.5.0 through 5.5.29 and 6.0.0 through 6.0.26 might allow remote attackers to discover the server's hostname or IP address by sending a request for a resource that requires (1) BASIC or (2) DIGEST authentication, and then reading the realm field in the WWW-Authenticate header in the reply.",https://www.cvedetails.com/cve/CVE-2010-1157/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Information disclosure in authentication headers CVE-2010-1157
The WWW-Authenticate HTTP header for BASIC and DIGEST authentication includes a realm name. If a <realm-name> element is specified for the application in web.xml it will be used. However, a <realm-name> is not specified then Tomcat will generate realm name using the code snippet request.getServerName() + "":"" + request.getServerPort(). In some circumstances this can expose the local host name or IP address of the machine running Tomcat.
This was fixed in revision 936541.
This was first reported to the Tomcat security team on 31 Dec 2009 and made public on 21 Apr 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 936540.
This was first reported to the Tomcat security team on 31 Dec 2009 and made public on 21 Apr 2010.
Affects: 6.0.0-6.0.26",No,2009-12-31,2010-4-21,2010-7-9,a4de93b2aaf74fff7c1e194f7ce3d2228a9680b8,java/org/apache/catalina/authenticator/DigestAuthenticator.java,"Fix CVE-2010-1157.
Prevent possible disclosure of host name or IP address via the HTTP WWW-Authenticate header when using BASIC or DIGEST authentication.",https://github.com/apache/tomcat/commit/a4de93b2aaf74fff7c1e194f7ce3d2228a9680b8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-4-22,1,1,3,12,6,Global,0.024464831804281,32,1308,Mladen Turk
CVE-2010-1157,200,NA,+Info,2010-4-23,2017-9-18,2.6,None,Remote,High,Not required,Partial,None,None,"Apache Tomcat 5.5.0 through 5.5.29 and 6.0.0 through 6.0.26 might allow remote attackers to discover the server's hostname or IP address by sending a request for a resource that requires (1) BASIC or (2) DIGEST authentication, and then reading the realm field in the WWW-Authenticate header in the reply.",https://www.cvedetails.com/cve/CVE-2010-1157/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Information disclosure in authentication headers CVE-2010-1157
The WWW-Authenticate HTTP header for BASIC and DIGEST authentication includes a realm name. If a <realm-name> element is specified for the application in web.xml it will be used. However, a <realm-name> is not specified then Tomcat will generate realm name using the code snippet request.getServerName() + "":"" + request.getServerPort(). In some circumstances this can expose the local host name or IP address of the machine running Tomcat.
This was fixed in revision 936541.
This was first reported to the Tomcat security team on 31 Dec 2009 and made public on 21 Apr 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 936540.
This was first reported to the Tomcat security team on 31 Dec 2009 and made public on 21 Apr 2010.
Affects: 6.0.0-6.0.26",No,2009-12-31,2010-4-21,2010-7-9,a4de93b2aaf74fff7c1e194f7ce3d2228a9680b8,webapps/docs/realm-howto.xml,"Fix CVE-2010-1157.
Prevent possible disclosure of host name or IP address via the HTTP WWW-Authenticate header when using BASIC or DIGEST authentication.",https://github.com/apache/tomcat/commit/a4de93b2aaf74fff7c1e194f7ce3d2228a9680b8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-4-22,1,5,6,12,6,Global,0.324829931972789,764,2352,Remy Maucherat
CVE-2007-3385,200,NA,+ Info,2007-8-14,2017-10-10,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 6.0.0 to 6.0.13, 5.5.0 to 5.5.24, 5.0.0 to 5.0.30, 4.1.0 to 4.1.36, and 3.3 to 3.3.2 does not properly handle the \"" character sequence in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks.",https://www.cvedetails.com/cve/CVE-2007-3385/,20070625,"Yes. Fixed in Apache Tomcat 6.0.14: 
http://tomcat.apache.org/security-6.html","Tomcat incorrectly handled the character sequence \"" in a cookie value. In some circumstances this lead to the leaking of information such as session ID to an attacker.",No,,,2007-8-13,a4faa0ed030691f3ad8e4b43260192ada7634a39,java/org/apache/catalina/util/CookieTools.java,Remove old util class that is no longer used.,https://github.com/apache/tomcat/commit/a4faa0ed030691f3ad8e4b43260192ada7634a39,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-7-6,143,0,159,0,159,Local,0.263975155279503,170,644,Mladen Turk
CVE-2009-3548,255,NA,Gain Privileges,2009-11-12,2017-9-18,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"The Windows installer for Apache Tomcat 6.0.0 through 6.0.20, 5.5.0 through 5.5.28, and possibly earlier versions uses a blank default password for the administrative user, which allows remote attackers to gain privileges.",https://www.cvedetails.com/cve/CVE-2009-3548/,20091005,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Insecure default password CVE-2009-3548
The Windows installer defaults to a blank password for the administrative user. If this is not changed during the install process, then by default a user is created with the name admin, roles admin and manager and a blank password.
This was fixed in revision 881771.
This was first reported to the Tomcat security team on 26 Oct 2009 and made public on 9 Nov 2009.
Affects: 6.0.0-6.0.20
This was first reported to the Tomcat security team on 26 Oct 2009 and made public on 9 Nov 2009.
This was fixed in revision 919006.
Affects: 5.5.0-5.5.28",No,2009-10-26,2009-11-9,2010-4-20,a59d31f5558bd82d45ebb3b8ac33b098111185aa,res/tomcat.nsi,Being *really* picky. It is a single web app.,https://github.com/apache/tomcat/commit/a59d31f5558bd82d45ebb3b8ac33b098111185aa,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-11-18,20,1,2,1,1,Local,0.626729932779755,1585,2529,Mark Emlyn David Thomas
CVE-2012-3546,264,NA,Bypass,2012-12-19,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,"org/apache/catalina/realm/RealmBase.java in Apache Tomcat 6.x before 6.0.36 and 7.x before 7.0.30, when FORM authentication is used, allows remote attackers to bypass security-constraint checks by leveraging a previous setUserPrincipal call and then placing /j_security_check at the end of a URI.",https://www.cvedetails.com/cve/CVE-2012-3546/,20120614,"Yes. Fixed in Apache Tomcat 6.0.36, 7.0.30: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Bypass of security constraints CVE-2012-3546
When using FORM authentication it was possible to bypass the security constraint checks in the FORM authenticator by appending /j_security_check to the end of the URL if some other component (such as the Single-Sign-On valve) had called request.setUserPrincipal() before the call to FormAuthenticator#authenticate().
This was fixed in revision 1381035.
This issue was identified by the Tomcat security team on 13 July 2012 and made public on 4 December 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1377892.
This issue was identified by the Tomcat security team on 13 July 2012 and made public on 4 December 2012.
Affects: 7.0.0-7.0.29",No,2012-7-13,2012-12-4,2012-10-19,a68cace4121048fbf3772a359c0ac5d15a6e480c,java/org/apache/catalina/realm/RealmBase.java,"Remove unneeded handling of FORM auth in RealmBase.
The login and error pages are handled via forward, so processing completes before this code is ever reached.
The action page is handled elsewhere.",https://github.com/apache/tomcat/commit/a68cace4121048fbf3772a359c0ac5d15a6e480c,Konstatin Kolinko,,,,2012-8-28,1,0,26,0,26,Local,0.005891296085139,31,5262,Mladen Turk
CVE-2010-3718,NA,NA,Directory Traversal,2011-2-10,2017-9-18,1.2,None,Local,High,Not required,None,Partial,None,"Apache Tomcat 7.0.0 through 7.0.3, 6.0.x, and 5.5.x, when running within a SecurityManager, does not make the ServletContext attribute read-only, which allows local web applications to read or write files outside of the intended working directory, as demonstrated using a directory traversal attack.",https://www.cvedetails.com/cve/CVE-2010-3718/,20110923,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.30, 7.0.4:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: SecurityManager file permission bypass CVE-2010-3718
When running under a SecurityManager, access to the file system is limited but web applications are granted read/write permissions to the work directory. This directory is used for a variety of temporary files such as the intermediate files generated when compiling JSPs to Servlets. The location of the work directory is specified by a ServletContect attribute that is meant to be read-only to web applications. However, due to a coding error, the read-only setting was not applied. Therefore, a malicious web application may modify the attribute before Tomcat applies the file permissions. This can be used to grant read/write permissions to any area on the file system which a malicious web application may then take advantage of. This vulnerability is only applicable when hosting web applications from untrusted sources such as shared hosting environments.
This was fixed in revision 1027610.
This was discovered by the Tomcat security team on 12 Oct 2010 and made public on 5 Feb 2011.
Affects: 5.5.0-5.5.29
This was fixed in revision 1022560.
This was discovered by the Tomcat security team on 12 Oct 2010 and made public on 5 Feb 2011.
Affects: 6.0.0-6.0.29
This was fixed in revision 1022134.
This was discovered by the Tomcat security team on 12 Oct 2010 and made public on 5 Feb 2011.
Affects: 7.0.0-7.0.3",No,2010-10-12,2011-2-5,2011-1-13,a697f7b52c4e3aea0c6763b33d413b54a518e883,java/org/apache/catalina/core/StandardContext.java,"Ensure work dir attribute is made read-only
CVE-2010-3718",https://github.com/apache/tomcat/commit/a697f7b52c4e3aea0c6763b33d413b54a518e883,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-10-13,1,5,10,5,5,Local,0.115773076729813,2304,19901,Mladen Turk
CVE-2016-5018,254,NA,Bypass,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,None,Partial,None,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 a malicious web application was able to bypass a configured SecurityManager via a Tomcat utility method that was accessible to web applications.",https://www.cvedetails.com/cve/CVE-2016-5018/,20160524,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager Bypass CVE-2016-5018
A malicious web application was able to bypass a configured SecurityManager via a Tomcat utility method that was accessible to web applications.
This was fixed in revisions 1754904 and 1761718.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revisions 1754902 and 1760309.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revisions 1754900 and 1760305 for 8.5.x and revisions 1754901 and 1760307 for 8.0.x.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revisions 1754714 and 1760300.
This issue was discovered by Alvaro Munoz and Alexander Mirosh of the HP Enterprise Security Team and reported to the Apache Tomcat Security Team on 5 July 2016. It was made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-7-5,2016-10-27,2016-10-16,a6b1ebc246b91b854237e5aad3dfd2b5460ea282,java/org/apache/jasper/runtime/JspRuntimeLibrary.java,Remove unnecessary code,https://github.com/apache/tomcat/commit/a6b1ebc246b91b854237e5aad3dfd2b5460ea282,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-1,43,1,59,1,58,Local,0.012817727568977,59,4603,Mladen Turk
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,a9d708aa5475ed80622a6991fedded14fdcbec7b,java/org/apache/coyote/http2/Constants.java,Implement limits for HTTP/2 header size and count,https://github.com/apache/tomcat/commit/a9d708aa5475ed80622a6991fedded14fdcbec7b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-20,3,4,4,460,9,Global,1,30,30,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,a9d708aa5475ed80622a6991fedded14fdcbec7b,java/org/apache/coyote/http2/HpackDecoder.java,Implement limits for HTTP/2 header size and count,https://github.com/apache/tomcat/commit/a9d708aa5475ed80622a6991fedded14fdcbec7b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-20,3,76,81,460,9,Global,0.261950286806883,137,523,Remy Maucherat
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,a9d708aa5475ed80622a6991fedded14fdcbec7b,java/org/apache/coyote/http2/Http2Parser.java,Implement limits for HTTP/2 header size and count,https://github.com/apache/tomcat/commit/a9d708aa5475ed80622a6991fedded14fdcbec7b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-20,3,33,37,460,9,Global,0.99893219434063,1871,1873,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,a9d708aa5475ed80622a6991fedded14fdcbec7b,java/org/apache/coyote/http2/Http2Protocol.java,Implement limits for HTTP/2 header size and count,https://github.com/apache/tomcat/commit/a9d708aa5475ed80622a6991fedded14fdcbec7b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-20,3,25,25,460,9,Global,0.921311475409836,281,305,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,a9d708aa5475ed80622a6991fedded14fdcbec7b,java/org/apache/coyote/http2/LocalStrings.properties,Implement limits for HTTP/2 header size and count,https://github.com/apache/tomcat/commit/a9d708aa5475ed80622a6991fedded14fdcbec7b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-20,3,3,3,460,9,Global,0.926739926739927,253,273,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,a9d708aa5475ed80622a6991fedded14fdcbec7b,test/org/apache/coyote/http2/TestHttp2Limits.java,Implement limits for HTTP/2 header size and count,https://github.com/apache/tomcat/commit/a9d708aa5475ed80622a6991fedded14fdcbec7b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-20,3,292,292,460,9,Global,1,292,292,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,a9d708aa5475ed80622a6991fedded14fdcbec7b,webapps/docs/config/http2.xml,Implement limits for HTTP/2 header size and count,https://github.com/apache/tomcat/commit/a9d708aa5475ed80622a6991fedded14fdcbec7b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-20,3,17,17,460,9,Global,1,160,160,Mark Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,a9dd96046d7acb0357c6b7b9e6cc70d186fae663,java/org/apache/catalina/webresources/AbstractFileResourceSet.java,"Add some additional checks required on Windows to keep all the checks in one place and to avoid exceptions later in the processing.
Includes utility class to determine if platform is Windows and performance test case for alternative implementations.",https://github.com/apache/tomcat/commit/a9dd96046d7acb0357c6b7b9e6cc70d186fae663,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-26,7,35,35,160,0,Global,0.491891891891892,182,370,Mark Emlyn David Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,a9dd96046d7acb0357c6b7b9e6cc70d186fae663,java/org/apache/tomcat/util/compat/JrePlatform.java,"Add some additional checks required on Windows to keep all the checks in one place and to avoid exceptions later in the processing.
Includes utility class to determine if platform is Windows and performance test case for alternative implementations.",https://github.com/apache/tomcat/commit/a9dd96046d7acb0357c6b7b9e6cc70d186fae663,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-26,7,59,59,160,0,Global,1,59,59,Mark Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,a9dd96046d7acb0357c6b7b9e6cc70d186fae663,test/org/apache/catalina/webresources/TestAbstractFileResourceSetPerformance.java,"Add some additional checks required on Windows to keep all the checks in one place and to avoid exceptions later in the processing.
Includes utility class to determine if platform is Windows and performance test case for alternative implementations.",https://github.com/apache/tomcat/commit/a9dd96046d7acb0357c6b7b9e6cc70d186fae663,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-26,7,66,66,160,0,Global,1,66,66,Mark Thomas
CVE-2007-5461,22,NA,Directory Traversal,2007-10-15,2017-9-28,3.5,None,Remote,Medium,Single system,Partial,None,None,"Absolute path traversal vulnerability in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0, 5.0.0, 5.5.0 through 5.5.25, and 6.0.0 through 6.0.14, under certain configurations, allows remote authenticated users to read arbitrary files via a WebDAV write request that specifies an entity with a SYSTEM tag.",https://www.cvedetails.com/cve/CVE-2007-5461/,20071015,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","When Tomcat's WebDAV servlet is configured for use with a context and has been enabled for write, some WebDAV requests that specify an entity with a SYSTEM tag can result in the contents of arbitary files being returned to the client.",No,,,2008-2-8,ab7b037e239505e52156d6d1ff35c02f431d3506,java/org/apache/catalina/servlets/LocalStrings.properties,Improve patch for WebDAV issue.,https://github.com/apache/tomcat/commit/ab7b037e239505e52156d6d1ff35c02f431d3506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-22,5,1,1,28,7,Global,0.219178082191781,16,73,Mladen Turk
CVE-2007-5461,22,NA,Directory Traversal,2007-10-15,2017-9-28,3.5,None,Remote,Medium,Single system,Partial,None,None,"Absolute path traversal vulnerability in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0, 5.0.0, 5.5.0 through 5.5.25, and 6.0.0 through 6.0.14, under certain configurations, allows remote authenticated users to read arbitrary files via a WebDAV write request that specifies an entity with a SYSTEM tag.",https://www.cvedetails.com/cve/CVE-2007-5461/,20071015,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","When Tomcat's WebDAV servlet is configured for use with a context and has been enabled for write, some WebDAV requests that specify an entity with a SYSTEM tag can result in the contents of arbitary files being returned to the client.",No,,,2008-2-8,ab7b037e239505e52156d6d1ff35c02f431d3506,java/org/apache/catalina/servlets/WebdavServlet.java,Improve patch for WebDAV issue.,https://github.com/apache/tomcat/commit/ab7b037e239505e52156d6d1ff35c02f431d3506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-22,5,26,26,28,7,Global,0.021024828314844,199,9465,Mladen Turk
CVE-2007-5461,22,NA,Directory Traversal,2007-10-15,2017-9-28,3.5,None,Remote,Medium,Single system,Partial,None,None,"Absolute path traversal vulnerability in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0, 5.0.0, 5.5.0 through 5.5.25, and 6.0.0 through 6.0.14, under certain configurations, allows remote authenticated users to read arbitrary files via a WebDAV write request that specifies an entity with a SYSTEM tag.",https://www.cvedetails.com/cve/CVE-2007-5461/,20071015,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","When Tomcat's WebDAV servlet is configured for use with a context and has been enabled for write, some WebDAV requests that specify an entity with a SYSTEM tag can result in the contents of arbitary files being returned to the client.",No,,,2008-2-8,ab7b037e239505e52156d6d1ff35c02f431d3506,STATUS,Improve patch for WebDAV issue.,https://github.com/apache/tomcat/commit/ab7b037e239505e52156d6d1ff35c02f431d3506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-22,5,0,6,28,7,Global,0.034001214329083,56,1647,Remy Maucherat
CVE-2007-5461,22,NA,Directory Traversal,2007-10-15,2017-9-28,3.5,None,Remote,Medium,Single system,Partial,None,None,"Absolute path traversal vulnerability in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0, 5.0.0, 5.5.0 through 5.5.25, and 6.0.0 through 6.0.14, under certain configurations, allows remote authenticated users to read arbitrary files via a WebDAV write request that specifies an entity with a SYSTEM tag.",https://www.cvedetails.com/cve/CVE-2007-5461/,20071015,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","When Tomcat's WebDAV servlet is configured for use with a context and has been enabled for write, some WebDAV requests that specify an entity with a SYSTEM tag can result in the contents of arbitary files being returned to the client.",No,,,2008-2-8,ab7b037e239505e52156d6d1ff35c02f431d3506,webapps/docs/changelog.xml,Improve patch for WebDAV issue.,https://github.com/apache/tomcat/commit/ab7b037e239505e52156d6d1ff35c02f431d3506,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2007-10-22,5,1,2,28,7,Global,0.056212624584718,423,7525,Remy Maucherat
CVE-2012-4431,264,NA,Bypass CSRF,2012-12-19,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,org/apache/catalina/filters/CsrfPreventionFilter.java in Apache Tomcat 6.x before 6.0.36 and 7.x before 7.0.32 allows remote attackers to bypass the cross-site request forgery (CSRF) protection mechanism via a request that lacks a session identifier.,https://www.cvedetails.com/cve/CVE-2012-4431/,20120821,"Yes. Fixed in Apache Tomcat 6.0.36, 7.0.32: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Bypass of CSRF prevention filter CVE-2012-4431
The CSRF prevention filter could be bypassed if a request was made to a protected resource without a session identifier present in the request.
This was fixed in revision 1394456.
This issue was identified by the Tomcat security team on 8 September 2012 and made public on 4 December 2012.
Affects: 6.0.30-6.0.35
This was fixed in revision 1393088.
This issue was identified by the Tomcat security team on 8 September 2012 and made public on 4 December 2012.
Affects: 7.0.0-7.0.31",No,2012-9-8,2012-12-4,2012-10-19,ac42ea9185b1db4464049b640dfe5663d8fe5086,java/org/apache/catalina/filters/CsrfPreventionFilter.java,Remove unnecessary SuppressWarnings,https://github.com/apache/tomcat/commit/ac42ea9185b1db4464049b640dfe5663d8fe5086,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-10-22,21,0,1,0,1,Local,0.963039014373717,469,487,Mark Emlyn David Thomas
CVE-2014-0050,264,NA,DoS Bypass,2014-4-1,2017-12-15,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.",https://www.cvedetails.com/cve/CVE-2014-0050/,20131203,"Yes. Fixed in Apache Tomcat 7.0.52, 8.0.3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of Service CVE-2014-0050
It was possible to craft a malformed Content-Type header for a multipart request that caused Apache Tomcat to enter an infinite loop. A malicious user could, therefore, craft a malformed request that triggered a denial of service.
The root cause of this error was a bug in Apache Commons FileUpload. Tomcat 7 uses a packaged renamed copy of Apache Commons FileUpload to implement the requirement of the Servlet 3.0 specification to support the processing of mime-multipart requests. Tomcat 7 was therefore affected by this issue.
This was fixed in revision 1565169.
This issue was reported to the Apache Software Foundation on 04 Feb 2014 and accidently made public on 06 Feb 2014.
Affects: 7.0.0-7.0.50
This was fixed in revision 1565163.
This issue was reported to the Apache Software Foundation on 04 Feb 2014 and accidently made public on 06 Feb 2014.
Affects: 8.0.0-RC1 to 8.0.1",No,2014-2-4,2014-2-6,2014-2-17,ac4318e4a447b6dd7959b553ab1ff878870e1971,java/org/apache/catalina/manager/HTMLManagerServlet.java,"Simplify code.
There is no need to iterate over parts and cleanup them, Tomcat takes care of that in Request.recycle().",https://github.com/apache/tomcat/commit/ac4318e4a447b6dd7959b553ab1ff878870e1971,Konstatin Kolinko,,,,2014-2-6,1,2,20,2,18,Local,0.017806041335453,56,3145,Mark Emlyn David Thomas
CVE-2014-0119,264,NA,,2014-5-31,2017-11-8,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.",https://www.cvedetails.com/cve/CVE-2014-0119/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.54, 8.0.8:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information Disclosure CVE-2014-0119
In limited circumstances it was possible for a malicious web application to replace the XML parsers used by Tomcat to process XSLTs for the default servlet, JSP documents, tag library descriptors (TLDs) and tag plugin configuration files. The injected XML parser(s) could then bypass the limits imposed on XML external entities and/or have visibility of the XML files processed for other web applications deployed on the same Tomcat instance.
This was fixed in revisions 1589640, 1593815 and 1593821.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1588199, 1589997, 1590028 and 1590036.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.53
This was fixed in revisions 1588193, 1589837, 1589980, 1589983, 1589985, 1589990 and 1589992.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.5",No,2014-4-12,2014-5-27,2014-5-23,ad3b34a290a0255d2a4c356a3611ab41ed9d04f5,java/org/apache/jasper/compiler/TagPluginManager.java,Fix indents and copy/paste errors,https://github.com/apache/tomcat/commit/ad3b34a290a0255d2a4c356a3611ab41ed9d04f5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-4-25,9,5,10,5,5,Local,0.382309941520468,523,1368,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,ae0e7c42a67ea25bf558d2ca52c3bc9b97c8d654,test/org/apache/catalina/core/TestStandardWrapper.java,Test that individual roles are correctly handled,https://github.com/apache/tomcat/commit/ae0e7c42a67ea25bf558d2ca52c3bc9b97c8d654,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-3,7,54,63,92,9,Global,1,271,271,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,af1cbfd4ee703f787ad6412bfd774aecf7ec1823,test/org/apache/catalina/core/TestStandardWrapper.java,Check web.xml takes precedence over @ServletSecurity,https://github.com/apache/tomcat/commit/af1cbfd4ee703f787ad6412bfd774aecf7ec1823,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-4,7,21,21,37,0,Global,1,292,292,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,af1cbfd4ee703f787ad6412bfd774aecf7ec1823,test/webapp-3.0-fragments/WEB-INF/web.xml,Check web.xml takes precedence over @ServletSecurity,https://github.com/apache/tomcat/commit/af1cbfd4ee703f787ad6412bfd774aecf7ec1823,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-4,7,16,16,37,0,Global,0.347826086956522,16,46,Konstantin Kolinko
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,b0360ec7aaad0041fda51c6b41102060d6dfad0b,conf/web.xml,Document FailedRequestFilter and add sample configuration to conf/web.xml.,https://github.com/apache/tomcat/commit/b0360ec7aaad0041fda51c6b41102060d6dfad0b,Konstatin Kolinko,,,,2011-11-10,561,22,22,60,0,Global,0.007444630560208,40,5373,Rainer Jung
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,b0360ec7aaad0041fda51c6b41102060d6dfad0b,webapps/docs/config/filter.xml,Document FailedRequestFilter and add sample configuration to conf/web.xml.,https://github.com/apache/tomcat/commit/b0360ec7aaad0041fda51c6b41102060d6dfad0b,Konstatin Kolinko,,,,2011-11-10,561,38,38,60,0,Global,0.077078085642317,153,1985,Mark Emlyn David Thomas
CVE-2016-6816,20,NA,XSS +Info,2017-3-20,2018-6-8,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The code in Apache Tomcat 9.0.0.M1 to 9.0.0.M11, 8.5.0 to 8.5.6, 8.0.0.RC1 to 8.0.38, 7.0.0 to 7.0.72, and 6.0.0 to 6.0.47 that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.",https://www.cvedetails.com/cve/CVE-2016-6816/,20160812,"Yes. Fixed in Apache Tomcat 8.0.39, 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2016-6816
The code that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.
This was fixed in revision 1767653.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 8.0.0.RC1 to 8.0.38
This was fixed in revision 1767645.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1767641.
This issue was reported to the Apache Tomcat Security Team on 11 October 2016 and made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-11,2016-11-22,2016-11-14,b0715ef477d7e05c202eb27d93b8e146a61f2a34,test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,Update the tests to check for a 400 response rather than ignoring the failed test,https://github.com/apache/tomcat/commit/b0715ef477d7e05c202eb27d93b8e146a61f2a34,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-11-2,1,31,70,31,39,Local,0.930013458950202,691,743,Mark Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,b0bce7343b69d812ebbbd2dc1ae4187f325edfb8,java/org/apache/coyote/http11/upgrade/UpgradeAprProcessor.java,"First cut HTTP upgrade for NIO/APR
- Non-blocking not supported
- WebSocket broken",https://github.com/apache/tomcat/commit/b0bce7343b69d812ebbbd2dc1ae4187f325edfb8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,62,114,233,208,Global,0.834654586636467,737,883,Mark Emlyn David Thomas
CVE-2012-5568,16,NA,DoS,2012-11-30,2017-8-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat through 7.0.x allows remote attackers to cause a denial of service (daemon outage) via partial HTTP requests, as demonstrated by Slowloris.",https://www.cvedetails.com/cve/CVE-2012-5568/,20121024,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Denial Of Service CVE-2012-5568
Sending an HTTP request 1 byte at a time will consume a thread from the connection pool until the request has been fully processed if using the BIO or APR/native HTTP connectors. Multiple requests may be used to consume all threads in the connection pool thereby creating a denial of service.
Since the relationship between the client side resources and server side resources is a linear one, this issue is not something that the Tomcat Security Team views as a vulnerability. This is a generic DoS problem and there is no magic solution. This issue has been discussed several times on the Tomcat mailing lists. The best place to start to review these discussions is the report for bug 54236.
This was first discussed on the public Tomcat users mailing list on 19 June 2009.",No,,,,b0bce7343b69d812ebbbd2dc1ae4187f325edfb8,java/org/apache/coyote/http11/upgrade/UpgradeNioProcessor.java,"First cut HTTP upgrade for NIO/APR
- Non-blocking not supported
- WebSocket broken",https://github.com/apache/tomcat/commit/b0bce7343b69d812ebbbd2dc1ae4187f325edfb8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2012-11-24,1,171,327,233,208,Global,0.809623430962343,1548,1912,Mark Emlyn David Thomas
CVE-2011-2729,264,NA,Bypass,2011-8-15,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"native/unix/native/jsvc-unix.c in jsvc in the Daemon component 1.0.3 through 1.0.6 in Apache Commons, as used in Apache Tomcat 5.5.32 through 5.5.33, 6.0.30 through 6.0.32, and 7.0.x before 7.0.20 on Linux, does not drop capabilities, which allows remote attackers to bypass read permissions for files via a request to an application.",https://www.cvedetails.com/cve/CVE-2011-2729/,20110711,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.20:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-2729
Due to a bug in the capabilities code, jsvc (the service wrapper for Linux that is part of the Commons Daemon project) does not drop capabilities allowing the application to access files and directories owned by superuser. This vulnerability only occurs when all of the following are true:
Tomcat is running on a Linux operating system
jsvc was compiled with libcap
-user parameter is used
Affected Tomcat versions shipped with source files for jsvc that included this vulnerability.
This was fixed in revision 1159346.
This was identified by Wilfried Weissmann on 20 July 2011 and made public on 12 August 2011.
Affects: 5.5.32-5.5.33
 This was fixed in revision 1153824.
This was identified by Wilfried Weissmann on 20 July 2011 and made public on 12 August 2011.
Affects: 6.0.30-6.0.32
This was fixed in revision 1153379.
This was identified by Wilfried Weissmann on 20 July 2011 and made public on 12 August 2011.
Affects: 7.0.0-7.0.19",No,2011-7-20,2011-8-12,2011-9-22,b139f0fca0f73b66712c31e83c14facf5c4dc389,build.properties.default,"Update to daemon 1.0.7
This fixes CVE-2011-2729",https://github.com/apache/tomcat/commit/b139f0fca0f73b66712c31e83c14facf5c4dc389,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-8-3,1,1,2,4,1,Global,0.571263035921205,493,863,Mark Emlyn David Thomas
CVE-2011-2729,264,NA,Bypass,2011-8-15,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"native/unix/native/jsvc-unix.c in jsvc in the Daemon component 1.0.3 through 1.0.6 in Apache Commons, as used in Apache Tomcat 5.5.32 through 5.5.33, 6.0.30 through 6.0.32, and 7.0.x before 7.0.20 on Linux, does not drop capabilities, which allows remote attackers to bypass read permissions for files via a request to an application.",https://www.cvedetails.com/cve/CVE-2011-2729/,20110711,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.20:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-2729
Due to a bug in the capabilities code, jsvc (the service wrapper for Linux that is part of the Commons Daemon project) does not drop capabilities allowing the application to access files and directories owned by superuser. This vulnerability only occurs when all of the following are true:
Tomcat is running on a Linux operating system
jsvc was compiled with libcap
-user parameter is used
Affected Tomcat versions shipped with source files for jsvc that included this vulnerability.
This was fixed in revision 1159346.
This was identified by Wilfried Weissmann on 20 July 2011 and made public on 12 August 2011.
Affects: 5.5.32-5.5.33
 This was fixed in revision 1153824.
This was identified by Wilfried Weissmann on 20 July 2011 and made public on 12 August 2011.
Affects: 6.0.30-6.0.32
This was fixed in revision 1153379.
This was identified by Wilfried Weissmann on 20 July 2011 and made public on 12 August 2011.
Affects: 7.0.0-7.0.19",No,2011-7-20,2011-8-12,2011-9-22,b139f0fca0f73b66712c31e83c14facf5c4dc389,webapps/docs/changelog.xml,"Update to daemon 1.0.7
This fixes CVE-2011-2729",https://github.com/apache/tomcat/commit/b139f0fca0f73b66712c31e83c14facf5c4dc389,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-8-3,1,3,3,4,1,Global,0.394064061122539,5364,13612,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,b24b0c09cd50a4d6f559a8ece2216f7c405b7490,java/org/apache/catalina/authenticator/AuthenticatorBase.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50855
Fix NPE on HttpServletRequest.logout() when debug logging is enabled.",https://github.com/apache/tomcat/commit/b24b0c09cd50a4d6f559a8ece2216f7c405b7490,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-6,7,5,8,13,3,Global,0.168169101647498,541,3217,Mladen Turk
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,b24b0c09cd50a4d6f559a8ece2216f7c405b7490,webapps/docs/changelog.xml,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50855
Fix NPE on HttpServletRequest.logout() when debug logging is enabled.",https://github.com/apache/tomcat/commit/b24b0c09cd50a4d6f559a8ece2216f7c405b7490,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-6,7,8,8,13,3,Global,0.340536450012612,4050,11893,Mark Emlyn David Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,b577f9a7996b92b650b1649af3c3bae11c120db9,java/org/apache/catalina/servlets/DefaultServlet.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61542
Partial fix for CVE-2017-12617
This moves a check from the Default servlet where it applied to GET, POST, HEAD and OPTIONS to the resources implementation where it applies to any method that expects the resource to exist (e.g.DELETE)
Still need to address the case where the resource does not exist (e.g. PUT)",https://github.com/apache/tomcat/commit/b577f9a7996b92b650b1649af3c3bae11c120db9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-20,7,0,14,15,14,Global,0.085557299843014,872,10192,Mladen Turk
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,b577f9a7996b92b650b1649af3c3bae11c120db9,java/org/apache/catalina/webresources/AbstractFileResourceSet.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61542
Partial fix for CVE-2017-12617
This moves a check from the Default servlet where it applied to GET, POST, HEAD and OPTIONS to the resources implementation where it applies to any method that expects the resource to exist (e.g.DELETE)
Still need to address the case where the resource does not exist (e.g. PUT)",https://github.com/apache/tomcat/commit/b577f9a7996b92b650b1649af3c3bae11c120db9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-20,7,8,8,15,14,Global,0.102941176470588,21,204,Mark Emlyn David Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,b577f9a7996b92b650b1649af3c3bae11c120db9,test/org/apache/catalina/webresources/AbstractTestResourceSet.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61542
Partial fix for CVE-2017-12617
This moves a check from the Default servlet where it applied to GET, POST, HEAD and OPTIONS to the resources implementation where it applies to any method that expects the resource to exist (e.g.DELETE)
Still need to address the case where the resource does not exist (e.g. PUT)",https://github.com/apache/tomcat/commit/b577f9a7996b92b650b1649af3c3bae11c120db9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-20,7,7,7,15,14,Global,0.104501607717042,65,622,Mark Emlyn David Thomas
CVE-2011-1183,NA,NA,Bypass,2011-4-8,2017-9-18,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.0.11, when web.xml has no login configuration, does not follow security constraints, which allows remote attackers to bypass intended access restrictions via HTTP requests to a meta-data complete web application. NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-1088 and CVE-2011-1419.",https://www.cvedetails.com/cve/CVE-2011-1183/,20110303,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1183
A regression in the fix for CVE-2011-1088 meant that security constraints were ignored when no login configuration was present in the web.xml and the web application was marked as meta-data complete.
This was fixed in revision 1087643.
This was identified by the Tomcat security team on 17 March 2011 and made public on 6 April 2011.
Affects: 7.0.11",Yes,2011-3-17,2011-4-6,2011-4-6,b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,java/org/apache/catalina/authenticator/AuthenticatorBase.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=12428
Add optional support for preemptive authentication on a per context basis
Based on a patch suggested by Werner Donn
This includes the fix for CVE-2011-1183",https://github.com/apache/tomcat/commit/b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,58,94,224,42,Global,0.200716845878136,672,3348,Mladen Turk
CVE-2011-1183,NA,NA,Bypass,2011-4-8,2017-9-18,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.0.11, when web.xml has no login configuration, does not follow security constraints, which allows remote attackers to bypass intended access restrictions via HTTP requests to a meta-data complete web application. NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-1088 and CVE-2011-1419.",https://www.cvedetails.com/cve/CVE-2011-1183/,20110303,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1183
A regression in the fix for CVE-2011-1088 meant that security constraints were ignored when no login configuration was present in the web.xml and the web application was marked as meta-data complete.
This was fixed in revision 1087643.
This was identified by the Tomcat security team on 17 March 2011 and made public on 6 April 2011.
Affects: 7.0.11",Yes,2011-3-17,2011-4-6,2011-4-6,b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,java/org/apache/catalina/Context.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=12428
Add optional support for preemptive authentication on a per context basis
Based on a patch suggested by Werner Donn
This includes the fix for CVE-2011-1183",https://github.com/apache/tomcat/commit/b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,13,13,224,42,Global,0.158835546475996,622,3916,Mladen Turk
CVE-2011-1183,NA,NA,Bypass,2011-4-8,2017-9-18,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.0.11, when web.xml has no login configuration, does not follow security constraints, which allows remote attackers to bypass intended access restrictions via HTTP requests to a meta-data complete web application. NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-1088 and CVE-2011-1419.",https://www.cvedetails.com/cve/CVE-2011-1183/,20110303,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1183
A regression in the fix for CVE-2011-1088 meant that security constraints were ignored when no login configuration was present in the web.xml and the web application was marked as meta-data complete.
This was fixed in revision 1087643.
This was identified by the Tomcat security team on 17 March 2011 and made public on 6 April 2011.
Affects: 7.0.11",Yes,2011-3-17,2011-4-6,2011-4-6,b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,java/org/apache/catalina/core/StandardContext.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=12428
Add optional support for preemptive authentication on a per context basis
Based on a patch suggested by Werner Donn
This includes the fix for CVE-2011-1183",https://github.com/apache/tomcat/commit/b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,14,14,224,42,Global,0.157624322413387,3344,21215,Mladen Turk
CVE-2011-1183,NA,NA,Bypass,2011-4-8,2017-9-18,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.0.11, when web.xml has no login configuration, does not follow security constraints, which allows remote attackers to bypass intended access restrictions via HTTP requests to a meta-data complete web application. NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-1088 and CVE-2011-1419.",https://www.cvedetails.com/cve/CVE-2011-1183/,20110303,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1183
A regression in the fix for CVE-2011-1088 meant that security constraints were ignored when no login configuration was present in the web.xml and the web application was marked as meta-data complete.
This was fixed in revision 1087643.
This was identified by the Tomcat security team on 17 March 2011 and made public on 6 April 2011.
Affects: 7.0.11",Yes,2011-3-17,2011-4-6,2011-4-6,b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,java/org/apache/catalina/startup/ContextConfig.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=12428
Add optional support for preemptive authentication on a per context basis
Based on a patch suggested by Werner Donn
This includes the fix for CVE-2011-1183",https://github.com/apache/tomcat/commit/b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,11,17,224,42,Global,0.38887381275441,2866,7370,Mark Emlyn David Thomas
CVE-2011-1183,NA,NA,Bypass,2011-4-8,2017-9-18,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.0.11, when web.xml has no login configuration, does not follow security constraints, which allows remote attackers to bypass intended access restrictions via HTTP requests to a meta-data complete web application. NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-1088 and CVE-2011-1419.",https://www.cvedetails.com/cve/CVE-2011-1183/,20110303,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1183
A regression in the fix for CVE-2011-1088 meant that security constraints were ignored when no login configuration was present in the web.xml and the web application was marked as meta-data complete.
This was fixed in revision 1087643.
This was identified by the Tomcat security team on 17 March 2011 and made public on 6 April 2011.
Affects: 7.0.11",Yes,2011-3-17,2011-4-6,2011-4-6,b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,test/org/apache/catalina/core/TestStandardWrapper.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=12428
Add optional support for preemptive authentication on a per context basis
Based on a patch suggested by Werner Donn
This includes the fix for CVE-2011-1183",https://github.com/apache/tomcat/commit/b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,24,24,224,42,Global,1,421,421,Mark Emlyn David Thomas
CVE-2011-1183,NA,NA,Bypass,2011-4-8,2017-9-18,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.0.11, when web.xml has no login configuration, does not follow security constraints, which allows remote attackers to bypass intended access restrictions via HTTP requests to a meta-data complete web application. NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-1088 and CVE-2011-1419.",https://www.cvedetails.com/cve/CVE-2011-1183/,20110303,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1183
A regression in the fix for CVE-2011-1088 meant that security constraints were ignored when no login configuration was present in the web.xml and the web application was marked as meta-data complete.
This was fixed in revision 1087643.
This was identified by the Tomcat security team on 17 March 2011 and made public on 6 April 2011.
Affects: 7.0.11",Yes,2011-3-17,2011-4-6,2011-4-6,b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,test/webapp-3.0-servletsecurity2/protected.jsp,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=12428
Add optional support for preemptive authentication on a per context basis
Based on a patch suggested by Werner Donn
This includes the fix for CVE-2011-1183",https://github.com/apache/tomcat/commit/b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,23,23,224,42,Global,1,23,23,Mark Emlyn David Thomas
CVE-2011-1183,NA,NA,Bypass,2011-4-8,2017-9-18,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.0.11, when web.xml has no login configuration, does not follow security constraints, which allows remote attackers to bypass intended access restrictions via HTTP requests to a meta-data complete web application. NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-1088 and CVE-2011-1419.",https://www.cvedetails.com/cve/CVE-2011-1183/,20110303,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1183
A regression in the fix for CVE-2011-1088 meant that security constraints were ignored when no login configuration was present in the web.xml and the web application was marked as meta-data complete.
This was fixed in revision 1087643.
This was identified by the Tomcat security team on 17 March 2011 and made public on 6 April 2011.
Affects: 7.0.11",Yes,2011-3-17,2011-4-6,2011-4-6,b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,test/webapp-3.0-servletsecurity2/unprotected.jsp,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=12428
Add optional support for preemptive authentication on a per context basis
Based on a patch suggested by Werner Donn
This includes the fix for CVE-2011-1183",https://github.com/apache/tomcat/commit/b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,23,23,224,42,Global,1,23,23,Mark Emlyn David Thomas
CVE-2011-1183,NA,NA,Bypass,2011-4-8,2017-9-18,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.0.11, when web.xml has no login configuration, does not follow security constraints, which allows remote attackers to bypass intended access restrictions via HTTP requests to a meta-data complete web application. NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-1088 and CVE-2011-1419.",https://www.cvedetails.com/cve/CVE-2011-1183/,20110303,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1183
A regression in the fix for CVE-2011-1088 meant that security constraints were ignored when no login configuration was present in the web.xml and the web application was marked as meta-data complete.
This was fixed in revision 1087643.
This was identified by the Tomcat security team on 17 March 2011 and made public on 6 April 2011.
Affects: 7.0.11",Yes,2011-3-17,2011-4-6,2011-4-6,b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,test/webapp-3.0-servletsecurity2/WEB-INF/web.xml,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=12428
Add optional support for preemptive authentication on a per context basis
Based on a patch suggested by Werner Donn
This includes the fix for CVE-2011-1183",https://github.com/apache/tomcat/commit/b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,43,43,224,42,Global,1,43,43,Mark Emlyn David Thomas
CVE-2011-1183,NA,NA,Bypass,2011-4-8,2017-9-18,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.0.11, when web.xml has no login configuration, does not follow security constraints, which allows remote attackers to bypass intended access restrictions via HTTP requests to a meta-data complete web application. NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-1088 and CVE-2011-1419.",https://www.cvedetails.com/cve/CVE-2011-1183/,20110303,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1183
A regression in the fix for CVE-2011-1088 meant that security constraints were ignored when no login configuration was present in the web.xml and the web application was marked as meta-data complete.
This was fixed in revision 1087643.
This was identified by the Tomcat security team on 17 March 2011 and made public on 6 April 2011.
Affects: 7.0.11",Yes,2011-3-17,2011-4-6,2011-4-6,b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,webapps/docs/changelog.xml,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=12428
Add optional support for preemptive authentication on a per context basis
Based on a patch suggested by Werner Donn
This includes the fix for CVE-2011-1183",https://github.com/apache/tomcat/commit/b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,5,5,224,42,Global,0.355502706248975,4335,12194,Mark Emlyn David Thomas
CVE-2011-1183,NA,NA,Bypass,2011-4-8,2017-9-18,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.0.11, when web.xml has no login configuration, does not follow security constraints, which allows remote attackers to bypass intended access restrictions via HTTP requests to a meta-data complete web application. NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-1088 and CVE-2011-1419.",https://www.cvedetails.com/cve/CVE-2011-1183/,20110303,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1183
A regression in the fix for CVE-2011-1088 meant that security constraints were ignored when no login configuration was present in the web.xml and the web application was marked as meta-data complete.
This was fixed in revision 1087643.
This was identified by the Tomcat security team on 17 March 2011 and made public on 6 April 2011.
Affects: 7.0.11",Yes,2011-3-17,2011-4-6,2011-4-6,b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,webapps/docs/config/context.xml,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=12428
Add optional support for preemptive authentication on a per context basis
Based on a patch suggested by Werner Donn
This includes the fix for CVE-2011-1183",https://github.com/apache/tomcat/commit/b7b5c63a932f6c1ea05f9b65ad9054247bb5af57,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-4-1,1,10,10,224,42,Global,0.34703196347032,608,1752,Remy Maucherat
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,b7e0435d17aba69f16ae9e8a78ad0f1565b552af,java/org/apache/catalina/webresources/DirResourceSet.java,"Partial fix for CVE-2017-12617
This ensures that a path specified for creation of a file does not end in '/' since that is dropped by the File API.",https://github.com/apache/tomcat/commit/b7e0435d17aba69f16ae9e8a78ad0f1565b552af,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-20,7,6,6,24,7,Global,0.165191740412979,56,339,Mark Emlyn David Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,b7e0435d17aba69f16ae9e8a78ad0f1565b552af,test/org/apache/catalina/webresources/AbstractTestResourceSet.java,"Partial fix for CVE-2017-12617
This ensures that a path specified for creation of a file does not end in '/' since that is dropped by the File API.",https://github.com/apache/tomcat/commit/b7e0435d17aba69f16ae9e8a78ad0f1565b552af,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-20,7,9,16,24,7,Global,0.126959247648903,81,638,Mark Emlyn David Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,b7e0435d17aba69f16ae9e8a78ad0f1565b552af,webapps/docs/changelog.xml,"Partial fix for CVE-2017-12617
This ensures that a path specified for creation of a file does not end in '/' since that is dropped by the File API.",https://github.com/apache/tomcat/commit/b7e0435d17aba69f16ae9e8a78ad0f1565b552af,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-20,7,9,9,24,7,Global,0.12329197973091,3528,28615,Mark Emlyn David Thomas
CVE-2017-7674,345,NA,,2017-8-10,2018-6-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"The CORS Filter in Apache Tomcat 9.0.0.M1 to 9.0.0.M21, 8.5.0 to 8.5.15, 8.0.0.RC1 to 8.0.44 and 7.0.41 to 7.0.78 did not add an HTTP Vary header indicating that the response varies depending on Origin. This permitted client and server side cache poisoning in some circumstances.",https://www.cvedetails.com/cve/CVE-2017-7674/,20170411,"Yes. Fixed in Apache Tomcat 7.0.79, 8.0.45, 8.5.16, 9.0.0.M22:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Cache Poisoning CVE-2017-7674
The CORS Filter did not add an HTTP Vary header indicating that the response varies depending on Origin. This permitted client and server side cache poisoning in some circumstances.
This was fixed in revision 1795816.
The issue was reported as bug 61101 on 16 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 7.0.41 to 7.0.78
This was fixed in revision 1795815.
The issue was reported as bug 61101 on 16 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 8.0.0.RC1 to 8.0.44
This was fixed in revision 1795814.
The issue was reported as bug 61101 on 16 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 8.5.0 to 8.5.15
This was fixed in revision 1795813.
The issue was reported as bug 61101 on 16 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 9.0.0.M1 to 9.0.0.M21",No,2017-5-16,2017-8-10,2017-7-1,b94478d45b7e1fc06134a785571f78772fa30fed,java/org/apache/catalina/filters/CorsFilter.java,BZ61101: CORS filter should set Vary header in response. Submitted by Rick Riemer.,https://github.com/apache/tomcat/commit/b94478d45b7e1fc06134a785571f78772fa30fed,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2017-5-22,1,11,11,15,0,Global,0.052042160737813,79,1518,Mark Emlyn David Thomas
CVE-2017-7674,345,NA,,2017-8-10,2018-6-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"The CORS Filter in Apache Tomcat 9.0.0.M1 to 9.0.0.M21, 8.5.0 to 8.5.15, 8.0.0.RC1 to 8.0.44 and 7.0.41 to 7.0.78 did not add an HTTP Vary header indicating that the response varies depending on Origin. This permitted client and server side cache poisoning in some circumstances.",https://www.cvedetails.com/cve/CVE-2017-7674/,20170411,"Yes. Fixed in Apache Tomcat 7.0.79, 8.0.45, 8.5.16, 9.0.0.M22:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Cache Poisoning CVE-2017-7674
The CORS Filter did not add an HTTP Vary header indicating that the response varies depending on Origin. This permitted client and server side cache poisoning in some circumstances.
This was fixed in revision 1795816.
The issue was reported as bug 61101 on 16 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 7.0.41 to 7.0.78
This was fixed in revision 1795815.
The issue was reported as bug 61101 on 16 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 8.0.0.RC1 to 8.0.44
This was fixed in revision 1795814.
The issue was reported as bug 61101 on 16 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 8.5.0 to 8.5.15
This was fixed in revision 1795813.
The issue was reported as bug 61101 on 16 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 9.0.0.M1 to 9.0.0.M21",No,2017-5-16,2017-8-10,2017-7-1,b94478d45b7e1fc06134a785571f78772fa30fed,webapps/docs/changelog.xml,BZ61101: CORS filter should set Vary header in response. Submitted by Rick Riemer.,https://github.com/apache/tomcat/commit/b94478d45b7e1fc06134a785571f78772fa30fed,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2017-5-22,1,4,4,15,0,Global,0.151807315928213,4204,27693,Mark Emlyn David Thomas
CVE-2013-4286,20,NA,,2014-2-26,2017-12-15,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.47, and 8.x before 8.0.0-RC3, when an HTTP connector or AJP connector is used, does not properly handle certain inconsistent HTTP request headers, which allows remote attackers to trigger incorrect identification of a request's length and conduct request-smuggling attacks via (1) multiple Content-Length headers or (2) a Content-Length header and a ""Transfer-Encoding: chunked"" header. NOTE: this vulnerability exists because of an incomplete fix for CVE-2005-2090.",https://www.cvedetails.com/cve/CVE-2013-4286/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.47, 8.0.0-RC3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2013-4286
The fix for CVE-2005-2090 was not complete. It did not cover the following cases:
content-length header with chunked encoding over any HTTP connector
multiple content-length headers over any AJP connector
Requests with multiple content-length headers or with a content-length header when chunked encoding is being used should be rejected as invalid. When multiple components (firewalls, caches, proxies and Tomcat) process a sequence of requests where one or more requests contain either multiple content-length headers or a content-length header when chunked encoding is being used and several components do not reject the request and make different decisions as to which content-length header to use an attacker can poison a web-cache, perform an XSS attack and obtain sensitive information from requests other then their own. Tomcat now rejects requests with multiple content-length headers or with a content-length header when chunked encoding is being used.
This was fixed in revision 1552565.
This issue was identified by the Apache Tomcat security team on 15 August 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1521854.
This issue was identified by the Apache Tomcat security team on 15 August 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.42
This was fixed in revision 1521829.
This issue was identified by the Apache Tomcat security team on 15 August 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1",No,2013-8-15,2014-2-25,2014-1-31,bcce3e4997a4ed06fe03e2517443f3ad8ade2dfa,java/org/apache/coyote/ajp/AbstractAjpProcessor.java,Better adherence to RFC2616 for content-length headers,https://github.com/apache/tomcat/commit/bcce3e4997a4ed06fe03e2517443f3ad8ade2dfa,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-9-11,1,10,12,67,15,Global,0.994684889901291,3930,3951,Mark Emlyn David Thomas
CVE-2013-4286,20,NA,,2014-2-26,2017-12-15,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.47, and 8.x before 8.0.0-RC3, when an HTTP connector or AJP connector is used, does not properly handle certain inconsistent HTTP request headers, which allows remote attackers to trigger incorrect identification of a request's length and conduct request-smuggling attacks via (1) multiple Content-Length headers or (2) a Content-Length header and a ""Transfer-Encoding: chunked"" header. NOTE: this vulnerability exists because of an incomplete fix for CVE-2005-2090.",https://www.cvedetails.com/cve/CVE-2013-4286/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.47, 8.0.0-RC3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2013-4286
The fix for CVE-2005-2090 was not complete. It did not cover the following cases:
content-length header with chunked encoding over any HTTP connector
multiple content-length headers over any AJP connector
Requests with multiple content-length headers or with a content-length header when chunked encoding is being used should be rejected as invalid. When multiple components (firewalls, caches, proxies and Tomcat) process a sequence of requests where one or more requests contain either multiple content-length headers or a content-length header when chunked encoding is being used and several components do not reject the request and make different decisions as to which content-length header to use an attacker can poison a web-cache, perform an XSS attack and obtain sensitive information from requests other then their own. Tomcat now rejects requests with multiple content-length headers or with a content-length header when chunked encoding is being used.
This was fixed in revision 1552565.
This issue was identified by the Apache Tomcat security team on 15 August 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1521854.
This issue was identified by the Apache Tomcat security team on 15 August 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.42
This was fixed in revision 1521829.
This issue was identified by the Apache Tomcat security team on 15 August 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1",No,2013-8-15,2014-2-25,2014-1-31,bcce3e4997a4ed06fe03e2517443f3ad8ade2dfa,test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java,Better adherence to RFC2616 for content-length headers,https://github.com/apache/tomcat/commit/bcce3e4997a4ed06fe03e2517443f3ad8ade2dfa,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-9-11,1,28,37,67,15,Global,0.953051643192488,406,426,Mark Emlyn David Thomas
CVE-2013-4286,20,NA,,2014-2-26,2017-12-15,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat before 6.0.39, 7.x before 7.0.47, and 8.x before 8.0.0-RC3, when an HTTP connector or AJP connector is used, does not properly handle certain inconsistent HTTP request headers, which allows remote attackers to trigger incorrect identification of a request's length and conduct request-smuggling attacks via (1) multiple Content-Length headers or (2) a Content-Length header and a ""Transfer-Encoding: chunked"" header. NOTE: this vulnerability exists because of an incomplete fix for CVE-2005-2090.",https://www.cvedetails.com/cve/CVE-2013-4286/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.47, 8.0.0-RC3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2013-4286
The fix for CVE-2005-2090 was not complete. It did not cover the following cases:
content-length header with chunked encoding over any HTTP connector
multiple content-length headers over any AJP connector
Requests with multiple content-length headers or with a content-length header when chunked encoding is being used should be rejected as invalid. When multiple components (firewalls, caches, proxies and Tomcat) process a sequence of requests where one or more requests contain either multiple content-length headers or a content-length header when chunked encoding is being used and several components do not reject the request and make different decisions as to which content-length header to use an attacker can poison a web-cache, perform an XSS attack and obtain sensitive information from requests other then their own. Tomcat now rejects requests with multiple content-length headers or with a content-length header when chunked encoding is being used.
This was fixed in revision 1552565.
This issue was identified by the Apache Tomcat security team on 15 August 2013 and made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revision 1521854.
This issue was identified by the Apache Tomcat security team on 15 August 2013 and made public on 25 February 2014.
Affects: 7.0.0 to 7.0.42
This was fixed in revision 1521829.
This issue was identified by the Apache Tomcat security team on 15 August 2013 and made public on 25 February 2014.
Affects: 8.0.0-RC1",No,2013-8-15,2014-2-25,2014-1-31,bcce3e4997a4ed06fe03e2517443f3ad8ade2dfa,test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,Better adherence to RFC2616 for content-length headers,https://github.com/apache/tomcat/commit/bcce3e4997a4ed06fe03e2517443f3ad8ade2dfa,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-9-11,1,15,15,67,15,Global,0.919191919191919,546,594,Mark Emlyn David Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,be44adcc22ab128f2e273d246d9deb9988e431d1,java/org/apache/catalina/webresources/AbstractFileResourceSet.java,Replacement of '\' with '/' should occur when the system file separator is '\',https://github.com/apache/tomcat/commit/be44adcc22ab128f2e273d246d9deb9988e431d1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-21,7,1,2,1,1,Local,0.204347826086957,47,230,Mark Emlyn David Thomas
CVE-2008-1232,79,NA,XSS,2008-8-3,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in Apache Tomcat 4.1.0 through 4.1.37, 5.5.0 through 5.5.26, and 6.0.0 through 6.0.16 allows remote attackers to inject arbitrary web script or HTML via a crafted string that is used in the message argument to the HttpServletResponse.sendError method.",https://www.cvedetails.com/cve/CVE-2008-1232/,20080310,"Yes. Fixed in Apache Tomcat 4.1.39, 5.5.27, 6.0.18:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","The message argument of HttpServletResponse.sendError() call is not only displayed on the error page, but is also used for the reason-phrase of HTTP response. This may include characters that are illegal in HTTP headers. It is possible for a specially crafted message to result in arbitrary content being injected into the HTTP response. For a successful XSS attack, unfiltered user supplied data must be included in the message argument.",No,2008-1-24,2008-8-1,2008-9-8,c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,java/org/apache/coyote/ajp/AjpAprProcessor.java,"Make filtering of /r and /n in headers consistent for all connectors.
Make handling of 404s consistent across components.
Provide option to include custom status message in headers. SRV.5.3 suggests custom messages are intended for the body of the response, not the status line.",https://github.com/apache/tomcat/commit/c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-7-3,1,4,5,49,19,Local,0.004005006257822,16,3995,Mladen Turk
CVE-2008-1232,79,NA,XSS,2008-8-3,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in Apache Tomcat 4.1.0 through 4.1.37, 5.5.0 through 5.5.26, and 6.0.0 through 6.0.16 allows remote attackers to inject arbitrary web script or HTML via a crafted string that is used in the message argument to the HttpServletResponse.sendError method.",https://www.cvedetails.com/cve/CVE-2008-1232/,20080310,"Yes. Fixed in Apache Tomcat 4.1.39, 5.5.27, 6.0.18:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","The message argument of HttpServletResponse.sendError() call is not only displayed on the error page, but is also used for the reason-phrase of HTTP response. This may include characters that are illegal in HTTP headers. It is possible for a specially crafted message to result in arbitrary content being injected into the HTTP response. For a successful XSS attack, unfiltered user supplied data must be included in the message argument.",No,2008-1-24,2008-8-1,2008-9-8,c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,java/org/apache/coyote/ajp/AjpProcessor.java,"Make filtering of /r and /n in headers consistent for all connectors.
Make handling of 404s consistent across components.
Provide option to include custom status message in headers. SRV.5.3 suggests custom messages are intended for the body of the response, not the status line.",https://github.com/apache/tomcat/commit/c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-7-3,1,4,5,49,19,Local,0.012121212121212,16,1320,Remy Maucherat
CVE-2008-1232,79,NA,XSS,2008-8-3,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in Apache Tomcat 4.1.0 through 4.1.37, 5.5.0 through 5.5.26, and 6.0.0 through 6.0.16 allows remote attackers to inject arbitrary web script or HTML via a crafted string that is used in the message argument to the HttpServletResponse.sendError method.",https://www.cvedetails.com/cve/CVE-2008-1232/,20080310,"Yes. Fixed in Apache Tomcat 4.1.39, 5.5.27, 6.0.18:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","The message argument of HttpServletResponse.sendError() call is not only displayed on the error page, but is also used for the reason-phrase of HTTP response. This may include characters that are illegal in HTTP headers. It is possible for a specially crafted message to result in arbitrary content being injected into the HTTP response. For a successful XSS attack, unfiltered user supplied data must be included in the message argument.",No,2008-1-24,2008-8-1,2008-9-8,c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,java/org/apache/coyote/Constants.java,"Make filtering of /r and /n in headers consistent for all connectors.
Make handling of 404s consistent across components.
Provide option to include custom status message in headers. SRV.5.3 suggests custom messages are intended for the body of the response, not the status line.",https://github.com/apache/tomcat/commit/c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-7-3,1,7,7,49,19,Local,0.094240837696335,18,191,Mladen Turk
CVE-2008-1232,79,NA,XSS,2008-8-3,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in Apache Tomcat 4.1.0 through 4.1.37, 5.5.0 through 5.5.26, and 6.0.0 through 6.0.16 allows remote attackers to inject arbitrary web script or HTML via a crafted string that is used in the message argument to the HttpServletResponse.sendError method.",https://www.cvedetails.com/cve/CVE-2008-1232/,20080310,"Yes. Fixed in Apache Tomcat 4.1.39, 5.5.27, 6.0.18:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","The message argument of HttpServletResponse.sendError() call is not only displayed on the error page, but is also used for the reason-phrase of HTTP response. This may include characters that are illegal in HTTP headers. It is possible for a specially crafted message to result in arbitrary content being injected into the HTTP response. For a successful XSS attack, unfiltered user supplied data must be included in the message argument.",No,2008-1-24,2008-8-1,2008-9-8,c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,java/org/apache/coyote/http11/InternalAprOutputBuffer.java,"Make filtering of /r and /n in headers consistent for all connectors.
Make handling of 404s consistent across components.
Provide option to include custom status message in headers. SRV.5.3 suggests custom messages are intended for the body of the response, not the status line.",https://github.com/apache/tomcat/commit/c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-7-3,1,5,7,49,19,Local,0.007936507936508,18,2268,Mladen Turk
CVE-2008-1232,79,NA,XSS,2008-8-3,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in Apache Tomcat 4.1.0 through 4.1.37, 5.5.0 through 5.5.26, and 6.0.0 through 6.0.16 allows remote attackers to inject arbitrary web script or HTML via a crafted string that is used in the message argument to the HttpServletResponse.sendError method.",https://www.cvedetails.com/cve/CVE-2008-1232/,20080310,"Yes. Fixed in Apache Tomcat 4.1.39, 5.5.27, 6.0.18:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","The message argument of HttpServletResponse.sendError() call is not only displayed on the error page, but is also used for the reason-phrase of HTTP response. This may include characters that are illegal in HTTP headers. It is possible for a specially crafted message to result in arbitrary content being injected into the HTTP response. For a successful XSS attack, unfiltered user supplied data must be included in the message argument.",No,2008-1-24,2008-8-1,2008-9-8,c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,java/org/apache/coyote/http11/InternalNioOutputBuffer.java,"Make filtering of /r and /n in headers consistent for all connectors.
Make handling of 404s consistent across components.
Provide option to include custom status message in headers. SRV.5.3 suggests custom messages are intended for the body of the response, not the status line.",https://github.com/apache/tomcat/commit/c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-7-3,1,5,7,49,19,Local,0.023565573770492,69,2928,Mladen Turk
CVE-2008-1232,79,NA,XSS,2008-8-3,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in Apache Tomcat 4.1.0 through 4.1.37, 5.5.0 through 5.5.26, and 6.0.0 through 6.0.16 allows remote attackers to inject arbitrary web script or HTML via a crafted string that is used in the message argument to the HttpServletResponse.sendError method.",https://www.cvedetails.com/cve/CVE-2008-1232/,20080310,"Yes. Fixed in Apache Tomcat 4.1.39, 5.5.27, 6.0.18:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","The message argument of HttpServletResponse.sendError() call is not only displayed on the error page, but is also used for the reason-phrase of HTTP response. This may include characters that are illegal in HTTP headers. It is possible for a specially crafted message to result in arbitrary content being injected into the HTTP response. For a successful XSS attack, unfiltered user supplied data must be included in the message argument.",No,2008-1-24,2008-8-1,2008-9-8,c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,java/org/apache/coyote/http11/InternalOutputBuffer.java,"Make filtering of /r and /n in headers consistent for all connectors.
Make handling of 404s consistent across components.
Provide option to include custom status message in headers. SRV.5.3 suggests custom messages are intended for the body of the response, not the status line.",https://github.com/apache/tomcat/commit/c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-7-3,1,6,9,49,19,Local,0.008326394671107,20,2402,Mladen Turk
CVE-2008-1232,79,NA,XSS,2008-8-3,2017-9-28,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in Apache Tomcat 4.1.0 through 4.1.37, 5.5.0 through 5.5.26, and 6.0.0 through 6.0.16 allows remote attackers to inject arbitrary web script or HTML via a crafted string that is used in the message argument to the HttpServletResponse.sendError method.",https://www.cvedetails.com/cve/CVE-2008-1232/,20080310,"Yes. Fixed in Apache Tomcat 4.1.39, 5.5.27, 6.0.18:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","The message argument of HttpServletResponse.sendError() call is not only displayed on the error page, but is also used for the reason-phrase of HTTP response. This may include characters that are illegal in HTTP headers. It is possible for a specially crafted message to result in arbitrary content being injected into the HTTP response. For a successful XSS attack, unfiltered user supplied data must be included in the message argument.",No,2008-1-24,2008-8-1,2008-9-8,c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,webapps/docs/config/systemprops.xml,"Make filtering of /r and /n in headers consistent for all connectors.
Make handling of 404s consistent across components.
Provide option to include custom status message in headers. SRV.5.3 suggests custom messages are intended for the body of the response, not the status line.",https://github.com/apache/tomcat/commit/c0f1602ca04fc767c9ee220c2e0f97cb2590f30d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-7-3,1,9,9,49,19,Local,0.96996996996997,323,333,Mark Emlyn David Thomas
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,c1357e649641844109711d60cacb98e4b5fcd3cb,test/org/apache/catalina/core/TestSwallowAbortedUploads.java,Correct test. Exceeded the swallow limit aborts the connection.,https://github.com/apache/tomcat/commit/c1357e649641844109711d60cacb98e4b5fcd3cb,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,4,7,4,3,Local,0.220779220779221,119,539,Rainer Jung
CVE-2016-6794,200,NA,Bypass +Info,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,Partial,None,None,"When a SecurityManager is configured, a web application's ability to read system properties should be controlled by the SecurityManager. In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70, 6.0.0 to 6.0.45 the system property replacement feature for configuration files could be used by a malicious web application to bypass the SecurityManager and read system properties that should not be visible.",https://www.cvedetails.com/cve/CVE-2016-6794/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: System Property Disclosure CVE-2016-6794
When a SecurityManager is configured, a web application's ability to read system properties should be controlled by the SecurityManager. Tomcat's system property replacement feature for configuration files could be used by a malicious web application to bypass the SecurityManager and read system properties that should not be visible.
This was fixed in revision 1754733.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1754728.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1754726 for 8.5.x and revision 1754727 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1754445.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2015-12-27,2016-10-27,2016-10-16,c1660182010b4255c21c874d69c124370a67784a,java/org/apache/catalina/loader/WebappClassLoaderBase.java,Provide a mechanism that enables the container to check if a component (typically a web application) has been granted a given permission when running under a SecurityManager without the current execution stack having to have passed through the component. Use this new mechanism to extend SecurityManager protection to the system property replacement feature of the digester.,https://github.com/apache/tomcat/commit/c1660182010b4255c21c874d69c124370a67784a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-7-28,2,20,21,81,1,Global,0.256494266323426,1096,4273,Mark Emlyn David Thomas
CVE-2016-6794,200,NA,Bypass +Info,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,Partial,None,None,"When a SecurityManager is configured, a web application's ability to read system properties should be controlled by the SecurityManager. In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70, 6.0.0 to 6.0.45 the system property replacement feature for configuration files could be used by a malicious web application to bypass the SecurityManager and read system properties that should not be visible.",https://www.cvedetails.com/cve/CVE-2016-6794/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: System Property Disclosure CVE-2016-6794
When a SecurityManager is configured, a web application's ability to read system properties should be controlled by the SecurityManager. Tomcat's system property replacement feature for configuration files could be used by a malicious web application to bypass the SecurityManager and read system properties that should not be visible.
This was fixed in revision 1754733.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1754728.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1754726 for 8.5.x and revision 1754727 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1754445.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2015-12-27,2016-10-27,2016-10-16,c1660182010b4255c21c874d69c124370a67784a,java/org/apache/tomcat/util/digester/Digester.java,Provide a mechanism that enables the container to check if a component (typically a web application) has been granted a given permission when running under a SecurityManager without the current execution stack having to have passed through the component. Use this new mechanism to extend SecurityManager protection to the system property replacement feature of the digester.,https://github.com/apache/tomcat/commit/c1660182010b4255c21c874d69c124370a67784a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-7-28,2,10,10,81,1,Global,0.000960707080411,10,10409,Mladen Turk
CVE-2016-6794,200,NA,Bypass +Info,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,Partial,None,None,"When a SecurityManager is configured, a web application's ability to read system properties should be controlled by the SecurityManager. In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70, 6.0.0 to 6.0.45 the system property replacement feature for configuration files could be used by a malicious web application to bypass the SecurityManager and read system properties that should not be visible.",https://www.cvedetails.com/cve/CVE-2016-6794/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: System Property Disclosure CVE-2016-6794
When a SecurityManager is configured, a web application's ability to read system properties should be controlled by the SecurityManager. Tomcat's system property replacement feature for configuration files could be used by a malicious web application to bypass the SecurityManager and read system properties that should not be visible.
This was fixed in revision 1754733.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1754728.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1754726 for 8.5.x and revision 1754727 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1754445.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2015-12-27,2016-10-27,2016-10-16,c1660182010b4255c21c874d69c124370a67784a,java/org/apache/tomcat/util/security/PermissionCheck.java,Provide a mechanism that enables the container to check if a component (typically a web application) has been granted a given permission when running under a SecurityManager without the current execution stack having to have passed through the component. Use this new mechanism to extend SecurityManager protection to the system property replacement feature of the digester.,https://github.com/apache/tomcat/commit/c1660182010b4255c21c874d69c124370a67784a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-7-28,2,43,43,81,1,Global,1,43,43,Mark Thomas
CVE-2016-6794,200,NA,Bypass +Info,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,Partial,None,None,"When a SecurityManager is configured, a web application's ability to read system properties should be controlled by the SecurityManager. In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70, 6.0.0 to 6.0.45 the system property replacement feature for configuration files could be used by a malicious web application to bypass the SecurityManager and read system properties that should not be visible.",https://www.cvedetails.com/cve/CVE-2016-6794/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: System Property Disclosure CVE-2016-6794
When a SecurityManager is configured, a web application's ability to read system properties should be controlled by the SecurityManager. Tomcat's system property replacement feature for configuration files could be used by a malicious web application to bypass the SecurityManager and read system properties that should not be visible.
This was fixed in revision 1754733.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1754728.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1754726 for 8.5.x and revision 1754727 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1754445.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2015-12-27,2016-10-27,2016-10-16,c1660182010b4255c21c874d69c124370a67784a,webapps/docs/changelog.xml,Provide a mechanism that enables the container to check if a component (typically a web application) has been granted a given permission when running under a SecurityManager without the current execution stack having to have passed through the component. Use this new mechanism to extend SecurityManager protection to the system property replacement feature of the digester.,https://github.com/apache/tomcat/commit/c1660182010b4255c21c874d69c124370a67784a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-7-28,2,8,8,81,1,Global,0.051917937431222,1321,25444,Mark Emlyn David Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,c177e9668d1278710bdb14c0eb8d2702b3655f5a,java/org/apache/catalina/webresources/AbstractFileResourceSet.java,Fix array index problem,https://github.com/apache/tomcat/commit/c177e9668d1278710bdb14c0eb8d2702b3655f5a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-26,7,3,3,3,0,Local,0.49597855227882,185,373,Mark Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,java/org/apache/catalina/connector/Connector.java,Refactor parameter parsing for performance.,https://github.com/apache/tomcat/commit/c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-27,561,33,39,297,178,Global,0.18829910887253,972,5162,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,java/org/apache/catalina/connector/Request.java,Refactor parameter parsing for performance.,https://github.com/apache/tomcat/commit/c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-27,561,2,2,297,178,Global,0.226904223227753,2407,10608,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,java/org/apache/tomcat/util/buf/ByteChunk.java,Refactor parameter parsing for performance.,https://github.com/apache/tomcat/commit/c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-27,561,31,65,297,178,Global,0.315745856353591,1143,3620,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,java/org/apache/tomcat/util/buf/MessageBytes.java,Refactor parameter parsing for performance.,https://github.com/apache/tomcat/commit/c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-27,561,2,4,297,178,Global,0.235273735273735,679,2886,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,java/org/apache/tomcat/util/buf/StringCache.java,Refactor parameter parsing for performance.,https://github.com/apache/tomcat/commit/c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-27,561,4,7,297,178,Global,0.131126397248495,305,2326,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,java/org/apache/tomcat/util/http/Parameters.java,Refactor parameter parsing for performance.,https://github.com/apache/tomcat/commit/c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-27,561,186,319,297,178,Global,0.472783389450056,1685,3564,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,webapps/docs/config/ajp.xml,Refactor parameter parsing for performance.,https://github.com/apache/tomcat/commit/c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-27,561,6,6,297,178,Global,0.54778156996587,642,1172,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,webapps/docs/config/http.xml,Refactor parameter parsing for performance.,https://github.com/apache/tomcat/commit/c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-27,561,6,6,297,178,Global,0.530581039755352,1388,2616,Mark Emlyn David Thomas
CVE-2009-0580,200,NA,+Info,2009-6-5,2017-9-28,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, and 6.0.0 through 6.0.18, when FORM authentication is used, allows remote attackers to enumerate valid usernames via requests to /j_security_check with malformed URL encoding of passwords, related to improper error checking in the (1) MemoryRealm, (2) DataSourceRealm, and (3) JDBCRealm authentication realms, as demonstrated by a % (percent) value for the j_password parameter.",https://www.cvedetails.com/cve/CVE-2009-0783/,20090309,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Information disclosure CVE-2009-0580
Due to insufficient error checking in some authentication classes, Tomcat allows for the enumeration (brute force testing) of user names by supplying illegally URL encoded passwords. The attack is possible if FORM based authentication (j_security_check) is used with the MemoryRealm. Note that in early versions, the DataSourceRealm and JDBCRealm were also affected.
This was fixed in revision 781382.
Affects: 4.1.0-4.1.39 (Memory Realm), 4.1.0-4.1.31 (JDBC Realm), 4.1.17-4.1.31 (DataSource Realm)
This was fixed in revision 781379.
This was first reported to the Tomcat security team on 25 Feb 2009 and made public on 3 Jun 2009.
Affects: 5.5.0-5.5.27 (Memory Realm), 5.5.0-5.5.5 (DataSource and JDBC Realms)
This was fixed in revision 747840.
This was first reported to the Tomcat security team on 25 Feb 2009 and made public on 3 Jun 2009.
Affects: 6.0.0-6.0.18",No,2009-2-25,2009-6-3,2009-6-4,c2d9e7a99b26b0873cce9ab78c68e074403ed3b0,java/org/apache/catalina/realm/DataSourceRealm.java,Fix possible NPE,https://github.com/apache/tomcat/commit/c2d9e7a99b26b0873cce9ab78c68e074403ed3b0,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-2-25,1,3,5,8,6,Global,0.013618677042802,28,2056,Mladen Turk
CVE-2009-0580,200,NA,+Info,2009-6-5,2017-9-28,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, and 6.0.0 through 6.0.18, when FORM authentication is used, allows remote attackers to enumerate valid usernames via requests to /j_security_check with malformed URL encoding of passwords, related to improper error checking in the (1) MemoryRealm, (2) DataSourceRealm, and (3) JDBCRealm authentication realms, as demonstrated by a % (percent) value for the j_password parameter.",https://www.cvedetails.com/cve/CVE-2009-0783/,20090309,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Information disclosure CVE-2009-0580
Due to insufficient error checking in some authentication classes, Tomcat allows for the enumeration (brute force testing) of user names by supplying illegally URL encoded passwords. The attack is possible if FORM based authentication (j_security_check) is used with the MemoryRealm. Note that in early versions, the DataSourceRealm and JDBCRealm were also affected.
This was fixed in revision 781382.
Affects: 4.1.0-4.1.39 (Memory Realm), 4.1.0-4.1.31 (JDBC Realm), 4.1.17-4.1.31 (DataSource Realm)
This was fixed in revision 781379.
This was first reported to the Tomcat security team on 25 Feb 2009 and made public on 3 Jun 2009.
Affects: 5.5.0-5.5.27 (Memory Realm), 5.5.0-5.5.5 (DataSource and JDBC Realms)
This was fixed in revision 747840.
This was first reported to the Tomcat security team on 25 Feb 2009 and made public on 3 Jun 2009.
Affects: 6.0.0-6.0.18",No,2009-2-25,2009-6-3,2009-6-4,c2d9e7a99b26b0873cce9ab78c68e074403ed3b0,java/org/apache/catalina/realm/JDBCRealm.java,Fix possible NPE,https://github.com/apache/tomcat/commit/c2d9e7a99b26b0873cce9ab78c68e074403ed3b0,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-2-25,1,4,7,8,6,Global,0.023456790123457,57,2430,Mladen Turk
CVE-2009-0580,200,NA,+Info,2009-6-5,2017-9-28,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, and 6.0.0 through 6.0.18, when FORM authentication is used, allows remote attackers to enumerate valid usernames via requests to /j_security_check with malformed URL encoding of passwords, related to improper error checking in the (1) MemoryRealm, (2) DataSourceRealm, and (3) JDBCRealm authentication realms, as demonstrated by a % (percent) value for the j_password parameter.",https://www.cvedetails.com/cve/CVE-2009-0783/,20090309,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Information disclosure CVE-2009-0580
Due to insufficient error checking in some authentication classes, Tomcat allows for the enumeration (brute force testing) of user names by supplying illegally URL encoded passwords. The attack is possible if FORM based authentication (j_security_check) is used with the MemoryRealm. Note that in early versions, the DataSourceRealm and JDBCRealm were also affected.
This was fixed in revision 781382.
Affects: 4.1.0-4.1.39 (Memory Realm), 4.1.0-4.1.31 (JDBC Realm), 4.1.17-4.1.31 (DataSource Realm)
This was fixed in revision 781379.
This was first reported to the Tomcat security team on 25 Feb 2009 and made public on 3 Jun 2009.
Affects: 5.5.0-5.5.27 (Memory Realm), 5.5.0-5.5.5 (DataSource and JDBC Realms)
This was fixed in revision 747840.
This was first reported to the Tomcat security team on 25 Feb 2009 and made public on 3 Jun 2009.
Affects: 6.0.0-6.0.18",No,2009-2-25,2009-6-3,2009-9-4,c2d9e7a99b26b0873cce9ab78c68e074403ed3b0,java/org/apache/catalina/realm/MemoryRealm.java,Fix possible NPE,https://github.com/apache/tomcat/commit/c2d9e7a99b26b0873cce9ab78c68e074403ed3b0,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-2-25,1,1,2,8,6,Global,0.042990654205608,46,1070,Mladen Turk
CVE-2007-6286,NA,NA,,2008-2-11,2014-3-15,4.3,None,Remote,Medium,Not required,None,Partial,None,"Apache Tomcat 5.5.11 through 5.5.25 and 6.0.0 through 6.0.15, when the native APR connector is used, does not properly handle an empty request to the SSL port, which allows remote attackers to trigger handling of ""a duplicate copy of one of the recent requests,"" as demonstrated by using netcat to send the empty request.",https://www.cvedetails.com/cve/CVE-2007-6286/,20071210,"Yes. Fixed in Apache Tomcat 5.5.26, 6.0.16:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","When using the native (APR based) connector, connecting to the SSL port using netcat and then disconnecting without sending any data will cause tomcat to handle a duplicate copy of one of the recent requests.",No,,,2008-2-8,c3c90b58eb8fe5164e166dad813b402ebc7794b0,java/org/apache/coyote/http11/Http11NioProtocol.java,The NIO connector is hard-coded to use the JSSE SSL implementation so just use it directly. This patch allows the JSSE dependency in the SSL abstraction to be removed (this will be in a later patch).,https://github.com/apache/tomcat/commit/c3c90b58eb8fe5164e166dad813b402ebc7794b0,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-1-30,1,3,6,3,3,Local,0.006648005598321,19,2858,Mladen Turk
CVE-2010-4172,79,NA,XSS,2010-11-26,2017-8-16,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the Manager application in Apache Tomcat 6.0.12 through 6.0.29 and 7.0.0 through 7.0.4 allow remote attackers to inject arbitrary web script or HTML via the (1) orderBy or (2) sort parameter to sessionsList.jsp, or unspecified input to (3) sessionDetail.jsp or (4) java/org/apache/catalina/manager/JspHelper.java, related to use of untrusted web applications.",https://www.cvedetails.com/cve/CVE-2010-4172/,20101104,"Yes. Fixed in Apache Tomcat 6.0.30, 7.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Moderate: Cross-site scripting CVE-2010-4172
The Manager application used the user provided parameters sort and orderBy directly without filtering thereby permitting cross-site scripting.
This was fixed in revision 1037779.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 6.0.12-6.0.29
This was fixed in revision 1037778.
This was first reported to the Tomcat security team on 15 Nov 2010 and made public on 22 Nov 2010.
Affects: 7.0.0-7.0.4",No,2010-11-15,2010-11-22,2011-1-13,c3d2d02021cfa892b2e7ae8ec7783a2b0219ac2a,webapps/manager/WEB-INF/jsp/sessionDetail.jsp,Fix primary sessions not always treated as such by Manager app.,https://github.com/apache/tomcat/commit/c3d2d02021cfa892b2e7ae8ec7783a2b0219ac2a,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-11-22,4,9,11,9,2,Local,0.75,420,560,Mark Emlyn David Thomas
CVE-2008-2938,22,NA,Directory Traversal,2008-8-12,2017-9-28,4.3,None,Remote,Medium,Not required,Partial,None,None,"Directory traversal vulnerability in Apache Tomcat 4.1.0 through 4.1.37, 5.5.0 through 5.5.26, and 6.0.0 through 6.0.16, when allowLinking and UTF-8 are enabled, allows remote attackers to read arbitrary files via encoded directory traversal sequences in the URI, a different vulnerability than CVE-2008-2370. NOTE: versions earlier than 6.0.18 were reported affected, but the vendor advisory lists 6.0.16 as the last affected version.",https://www.cvedetails.com/cve/CVE-2008-2938/,20080630,"Not a vulnerability in Tomcat:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Originally reported as a Tomcat vulnerability the root cause of this issue is that the JVM does not correctly decode UTF-8 encoded URLs to UTF-8. This exposes a directory traversal vulnerability when the connector uses URIEncoding=""UTF-8"". This directory traversal is limited to the docBase of the web application.
If a context is configured with allowLinking=""true"" then the directory traversal vulnerability is extended to the entire file system of the host server.
It should also be noted that setting useBodyEncodingForURI=""true"" has the same effect as setting URIEncoding=""UTF-8"" when processing requests with bodies encoded with UTF-8.
Although the root cause was quickly identified as a JVM issue and that it affected multiple JVMs from multiple vendors, it was decided to report this as a Tomcat vulnerability until such time as the JVM vendors provided updates to resolve this issue. For further information on the status of this issue for your JVM, contact your JVM vendor.
A workaround was implemented in revision 678137 that protects against this and any similar character encoding issues that may still exist in the JVM. This work around is included in Tomcat 6.0.18 onwards.
A workaround was implemented in revision 681029 that protects against this and any similar character encoding issues that may still exist in the JVM. This work around is included in Tomcat 5.5.27 onwards.
A workaround was implemented in revision 681065 that protects against this and any similar character encoding issues that may still exist in the JVM. This work around is included in Tomcat 4.1.39 onwards.",No,,,,c55ad56ed72ee1dbfe790bc5492d4df74e3e754f,java/org/apache/catalina/connector/CoyoteAdapter.java,Port http://svn.apache.org/viewvc?rev=678137&view=rev (additional normalization check) to trunk,https://github.com/apache/tomcat/commit/c55ad56ed72ee1dbfe790bc5492d4df74e3e754f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-7-29,1678,67,67,67,0,Local,0.042667622803872,119,2789,Mladen Turk
CVE-2009-0033,20,NA,DoS,2009-6-5,2017-9-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, and 6.0.0 through 6.0.18, when the Java AJP connector and mod_jk load balancing are used, allows remote attackers to cause a denial of service (application outage) via a crafted request with invalid headers, related to temporary blocking of connectors that have encountered errors, as demonstrated by an error involving a malformed HTTP Host header.",https://www.cvedetails.com/cve/CVE-2009-0033/,20081215,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Important: Denial of Service CVE-2009-0033
If Tomcat receives a request with invalid headers via the Java AJP connector, it does not return an error and instead closes the AJP connection. In case this connector is member of a mod_jk load balancing worker, this member will be put into an error state and will be blocked from use for approximately one minute. Thus the behaviour can be used for a denial of service attack using a carefully crafted request.
This was fixed in revision 781362.
Affects: 4.1.0-4.1.39
This was fixed in revision 781362.
This was first reported to the Tomcat security team on 26 Jan 2009 and made public on 3 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revision 742915.
This was first reported to the Tomcat security team on 26 Jan 2009 and made public on 3 Jun 2009.
Affects: 6.0.0-6.0.18",No,2009-1-26,2009-6-3,2009-9-4,c55d354dfd954f1df6d0848148dffd079c16a57e,java/org/apache/jk/common/ChannelNioSocket.java,"Port r742915 to trunk.
Make sure the 400 is returned to the browser. (like other connectors). ",https://github.com/apache/tomcat/commit/c55d354dfd954f1df6d0848148dffd079c16a57e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-2-11,1,2,2,12,0,Global,0.005793103448276,21,3625,Mladen Turk
CVE-2009-0033,20,NA,DoS,2009-6-5,2017-9-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, and 6.0.0 through 6.0.18, when the Java AJP connector and mod_jk load balancing are used, allows remote attackers to cause a denial of service (application outage) via a crafted request with invalid headers, related to temporary blocking of connectors that have encountered errors, as demonstrated by an error involving a malformed HTTP Host header.",https://www.cvedetails.com/cve/CVE-2009-0033/,20081215,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Important: Denial of Service CVE-2009-0033
If Tomcat receives a request with invalid headers via the Java AJP connector, it does not return an error and instead closes the AJP connection. In case this connector is member of a mod_jk load balancing worker, this member will be put into an error state and will be blocked from use for approximately one minute. Thus the behaviour can be used for a denial of service attack using a carefully crafted request.
This was fixed in revision 781362.
Affects: 4.1.0-4.1.39
This was fixed in revision 781362.
This was first reported to the Tomcat security team on 26 Jan 2009 and made public on 3 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revision 742915.
This was first reported to the Tomcat security team on 26 Jan 2009 and made public on 3 Jun 2009.
Affects: 6.0.0-6.0.18",No,2009-1-26,2009-6-3,2009-9-4,c55d354dfd954f1df6d0848148dffd079c16a57e,java/org/apache/jk/common/ChannelSocket.java,"Port r742915 to trunk.
Make sure the 400 is returned to the browser. (like other connectors). ",https://github.com/apache/tomcat/commit/c55d354dfd954f1df6d0848148dffd079c16a57e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-2-11,1,2,2,12,0,Global,0.005590756615729,15,2683,Mladen Turk
CVE-2009-0033,20,NA,DoS,2009-6-5,2017-9-28,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, and 6.0.0 through 6.0.18, when the Java AJP connector and mod_jk load balancing are used, allows remote attackers to cause a denial of service (application outage) via a crafted request with invalid headers, related to temporary blocking of connectors that have encountered errors, as demonstrated by an error involving a malformed HTTP Host header.",https://www.cvedetails.com/cve/CVE-2009-0033/,20081215,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Important: Denial of Service CVE-2009-0033
If Tomcat receives a request with invalid headers via the Java AJP connector, it does not return an error and instead closes the AJP connection. In case this connector is member of a mod_jk load balancing worker, this member will be put into an error state and will be blocked from use for approximately one minute. Thus the behaviour can be used for a denial of service attack using a carefully crafted request.
This was fixed in revision 781362.
Affects: 4.1.0-4.1.39
This was fixed in revision 781362.
This was first reported to the Tomcat security team on 26 Jan 2009 and made public on 3 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revision 742915.
This was first reported to the Tomcat security team on 26 Jan 2009 and made public on 3 Jun 2009.
Affects: 6.0.0-6.0.18",No,2009-1-26,2009-6-3,2009-9-4,c55d354dfd954f1df6d0848148dffd079c16a57e,java/org/apache/jk/common/HandlerRequest.java,"Port r742915 to trunk.
Make sure the 400 is returned to the browser. (like other connectors). ",https://github.com/apache/tomcat/commit/c55d354dfd954f1df6d0848148dffd079c16a57e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-2-11,1,8,8,12,0,Global,0.012745098039216,26,2040,Mladen Turk
CVE-2015-5345,22,NA,Directory Traversal,2016-2-24,2018-7-18,5,None,Remote,Low,Not required,Partial,None,Partial,"The Mapper component in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.30, and 9.x before 9.0.0.M2 processes redirects before considering security constraints and Filters, which allows remote attackers to determine the existence of a directory via a URL that lacks a trailing / (slash) character.",https://www.cvedetails.com/cve/CVE-2015-5345/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.30, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Directory disclosure CVE-2015-5345
When accessing a directory protected by a security constraint with a URL that did not end in a slash, Tomcat would redirect to the URL with the trailing slash thereby confirming the presence of the directory before processing the security constraint. It was therefore possible for a user to determine if a directory existed or not, even if the user was not permitted to view the directory. The issue also occurred at the root of a web application in which case the presence of the web application was confirmed, even if a user did not have access.
The solution was to implement the redirect in the DefaultServlet so that any security constraints and/or security enforcing Filters were processed before the redirect. The Tomcat team recognised that moving the redirect could cause regressions so two new Context configuration options (mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled) were introduced. The initial default was false for both since this was more secure. However, due to regressions such as Bug 58765 the default for mapperContextRootRedirectEnabled was later changed to true since it was viewed that the regression was more serious than the security risk of associated with being able to determine if a web application was deployed at a given path.
This was fixed in revisions 1715216 and 1717216.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1715213, 1716860 and 1717212.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1715207 and 1717209.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.29
This was fixed in revisions 1715206, 1716882 and 1716894.
This issue was identified by Mark Koek of QCSec on 12 October 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-10-12,2016-2-22,2016-2-16,c584c7c4ab0686e4125eefcd0afb32fb8269da3d,java/org/apache/catalina/mapper/Mapper.java,"Additional fix for BZ 58660
When Mapper root redirect is enabled, ensure '/' is added to path for redirect",https://github.com/apache/tomcat/commit/c584c7c4ab0686e4125eefcd0afb32fb8269da3d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-11-27,9,3,4,3,1,Local,0.016691749897387,122,7309,Mladen Turk
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,c70919f09da174b1cc9bef4b9e9d662003e7e8ff,java/org/apache/catalina/webresources/AbstractFileResourceSet.java,No need to separately add '/' if the name ends in '.' since normalize() does that and does so more accurately.,https://github.com/apache/tomcat/commit/c70919f09da174b1cc9bef4b9e9d662003e7e8ff,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-21,7,2,11,2,9,Local,0.15668202764977,34,217,Mark Emlyn David Thomas
CVE-2016-0706,200,NA,Bypass +Info,2016-2-24,2018-7-18,4,None,Remote,Low,Single system,Partial,None,None,"Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 does not place org.apache.catalina.manager.StatusManagerServlet on the org/apache/catalina/core/RestrictedServlets.properties list, which allows remote authenticated users to bypass intended SecurityManager restrictions and read arbitrary HTTP requests, and consequently discover session ID values, via a crafted web application.",https://www.cvedetails.com/cve/CVE-2016-0706/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager bypass CVE-2016-0706
This issue only affects users running untrusted web applications under a security manager.
The internal StatusManagerServlet could be loaded by a malicious web application when a security manager was configured. This servlet could then provide the malicious web application with a list of all deployed applications and a list of the HTTP request lines for all requests currently being processed. This could have exposed sensitive information from other web applications, such as session IDs, to the web application.
This was fixed in revision 1722802.
This issue was identified by the Tomcat security team on 27 December 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revision 1722801.
This issue was identified by the Tomcat security team on 27 December 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revision 1722800.
This issue was identified by the Tomcat security team on 27 December 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revision 1722799.
This issue was identified by the Tomcat security team on 27 December 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-12-27,2016-2-22,2016-2-16,c8601f802df5f0a190b6a70a7c36727e06eb9fbd,java/org/apache/catalina/core/RestrictedServlets.properties,Add the StatusManagerServlet to the list of Servlets that can only be loaded by privileged applications.,https://github.com/apache/tomcat/commit/c8601f802df5f0a190b6a70a7c36727e06eb9fbd,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-4,1,1,1,5,0,Global,0.047619047619048,1,21,Mark Emlyn David Thomas
CVE-2016-0706,200,NA,Bypass +Info,2016-2-24,2018-7-18,4,None,Remote,Low,Single system,Partial,None,None,"Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 does not place org.apache.catalina.manager.StatusManagerServlet on the org/apache/catalina/core/RestrictedServlets.properties list, which allows remote authenticated users to bypass intended SecurityManager restrictions and read arbitrary HTTP requests, and consequently discover session ID values, via a crafted web application.",https://www.cvedetails.com/cve/CVE-2016-0706/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager bypass CVE-2016-0706
This issue only affects users running untrusted web applications under a security manager.
The internal StatusManagerServlet could be loaded by a malicious web application when a security manager was configured. This servlet could then provide the malicious web application with a list of all deployed applications and a list of the HTTP request lines for all requests currently being processed. This could have exposed sensitive information from other web applications, such as session IDs, to the web application.
This was fixed in revision 1722802.
This issue was identified by the Tomcat security team on 27 December 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revision 1722801.
This issue was identified by the Tomcat security team on 27 December 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revision 1722800.
This issue was identified by the Tomcat security team on 27 December 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revision 1722799.
This issue was identified by the Tomcat security team on 27 December 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-12-27,2016-2-22,2016-2-16,c8601f802df5f0a190b6a70a7c36727e06eb9fbd,webapps/docs/changelog.xml,Add the StatusManagerServlet to the list of Servlets that can only be loaded by privileged applications.,https://github.com/apache/tomcat/commit/c8601f802df5f0a190b6a70a7c36727e06eb9fbd,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-4,1,4,4,5,0,Global,0.009502281384738,227,23889,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,c89926bccf055c9e02bf08869c42d46821726abe,java/org/apache/catalina/connector/Request.java,Extend the parameter limits to multi-part processing,https://github.com/apache/tomcat/commit/c89926bccf055c9e02bf08869c42d46821726abe,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-11-1,561,39,44,158,28,Global,0.23175644028103,2474,10675,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,c89926bccf055c9e02bf08869c42d46821726abe,java/org/apache/tomcat/util/http/Parameters.java,Extend the parameter limits to multi-part processing,https://github.com/apache/tomcat/commit/c89926bccf055c9e02bf08869c42d46821726abe,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-11-1,561,20,29,158,28,Global,0.481950431034483,1789,3712,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,c89926bccf055c9e02bf08869c42d46821726abe,test/org/apache/tomcat/util/http/TestParameters.java,Extend the parameter limits to multi-part processing,https://github.com/apache/tomcat/commit/c89926bccf055c9e02bf08869c42d46821726abe,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-11-1,561,98,112,158,28,Global,1,707,707,Mark Emlyn David Thomas
CVE-2015-5351,352,NA,Bypass CSRF,2016-2-24,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The (1) Manager and (2) Host Manager applications in Apache Tomcat 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 establish sessions and send CSRF tokens for arbitrary new requests, which allows remote attackers to bypass a CSRF protection mechanism by using a token.",https://www.cvedetails.com/cve/CVE-2015-5351/,20150701,"Yes. Fixed in Apache Tomcat 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: CSRF token leak CVE-2015-5351
The index page of the Manager and Host Manager applications included a valid CSRF token when issuing a redirect as a result of an unauthenticated request to the root of the web application. If an attacker had access to the Manager or Host Manager applications (typically these applications are only accessible to internal users, not exposed to the Internet), this token could then be used by the attacker to construct a CSRF attack.
This was fixed in revisions 1720661 and 1720663.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 7.0.1 to 7.0.67
This was fixed in revisions 1720658 and 1720660.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1720652 and 1720655.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-12-8,2016-2-22,2016-2-16,c8a8ef0b5bbccd6beb06fd737751595ea810f2b1,webapps/docs/changelog.xml,Don't create session unnecessarily in the Host Manager application.,https://github.com/apache/tomcat/commit/c8a8ef0b5bbccd6beb06fd737751595ea810f2b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-12-17,1,4,4,10,3,Global,0.008720442730169,208,23852,Mark Emlyn David Thomas
CVE-2015-5351,352,NA,Bypass CSRF,2016-2-24,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The (1) Manager and (2) Host Manager applications in Apache Tomcat 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 establish sessions and send CSRF tokens for arbitrary new requests, which allows remote attackers to bypass a CSRF protection mechanism by using a token.",https://www.cvedetails.com/cve/CVE-2015-5351/,20150701,"Yes. Fixed in Apache Tomcat 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: CSRF token leak CVE-2015-5351
The index page of the Manager and Host Manager applications included a valid CSRF token when issuing a redirect as a result of an unauthenticated request to the root of the web application. If an attacker had access to the Manager or Host Manager applications (typically these applications are only accessible to internal users, not exposed to the Internet), this token could then be used by the attacker to construct a CSRF attack.
This was fixed in revisions 1720661 and 1720663.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 7.0.1 to 7.0.67
This was fixed in revisions 1720658 and 1720660.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1720652 and 1720655.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-12-8,2016-2-22,2016-2-16,c8a8ef0b5bbccd6beb06fd737751595ea810f2b1,webapps/host-manager/index.jsp,Don't create session unnecessarily in the Host Manager application.,https://github.com/apache/tomcat/commit/c8a8ef0b5bbccd6beb06fd737751595ea810f2b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-12-17,1,2,4,10,3,Global,0.181818181818182,4,22,Mark Emlyn David Thomas
CVE-2015-5351,352,NA,Bypass CSRF,2016-2-24,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The (1) Manager and (2) Host Manager applications in Apache Tomcat 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 establish sessions and send CSRF tokens for arbitrary new requests, which allows remote attackers to bypass a CSRF protection mechanism by using a token.",https://www.cvedetails.com/cve/CVE-2015-5351/,20150701,"Yes. Fixed in Apache Tomcat 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: CSRF token leak CVE-2015-5351
The index page of the Manager and Host Manager applications included a valid CSRF token when issuing a redirect as a result of an unauthenticated request to the root of the web application. If an attacker had access to the Manager or Host Manager applications (typically these applications are only accessible to internal users, not exposed to the Internet), this token could then be used by the attacker to construct a CSRF attack.
This was fixed in revisions 1720661 and 1720663.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 7.0.1 to 7.0.67
This was fixed in revisions 1720658 and 1720660.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1720652 and 1720655.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-12-8,2016-2-22,2016-2-16,c8a8ef0b5bbccd6beb06fd737751595ea810f2b1,webapps/host-manager/WEB-INF/jsp/401.jsp,Don't create session unnecessarily in the Host Manager application.,https://github.com/apache/tomcat/commit/c8a8ef0b5bbccd6beb06fd737751595ea810f2b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-12-17,1,1,1,10,3,Global,0.010752688172043,1,93,Mark Emlyn David Thomas
CVE-2015-5351,352,NA,Bypass CSRF,2016-2-24,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The (1) Manager and (2) Host Manager applications in Apache Tomcat 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 establish sessions and send CSRF tokens for arbitrary new requests, which allows remote attackers to bypass a CSRF protection mechanism by using a token.",https://www.cvedetails.com/cve/CVE-2015-5351/,20150701,"Yes. Fixed in Apache Tomcat 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: CSRF token leak CVE-2015-5351
The index page of the Manager and Host Manager applications included a valid CSRF token when issuing a redirect as a result of an unauthenticated request to the root of the web application. If an attacker had access to the Manager or Host Manager applications (typically these applications are only accessible to internal users, not exposed to the Internet), this token could then be used by the attacker to construct a CSRF attack.
This was fixed in revisions 1720661 and 1720663.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 7.0.1 to 7.0.67
This was fixed in revisions 1720658 and 1720660.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1720652 and 1720655.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-12-8,2016-2-22,2016-2-16,c8a8ef0b5bbccd6beb06fd737751595ea810f2b1,webapps/host-manager/WEB-INF/jsp/403.jsp,Don't create session unnecessarily in the Host Manager application.,https://github.com/apache/tomcat/commit/c8a8ef0b5bbccd6beb06fd737751595ea810f2b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-12-17,1,1,1,10,3,Global,0.009708737864078,1,103,Mark Emlyn David Thomas
CVE-2015-5351,352,NA,Bypass CSRF,2016-2-24,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"The (1) Manager and (2) Host Manager applications in Apache Tomcat 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 establish sessions and send CSRF tokens for arbitrary new requests, which allows remote attackers to bypass a CSRF protection mechanism by using a token.",https://www.cvedetails.com/cve/CVE-2015-5351/,20150701,"Yes. Fixed in Apache Tomcat 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: CSRF token leak CVE-2015-5351
The index page of the Manager and Host Manager applications included a valid CSRF token when issuing a redirect as a result of an unauthenticated request to the root of the web application. If an attacker had access to the Manager or Host Manager applications (typically these applications are only accessible to internal users, not exposed to the Internet), this token could then be used by the attacker to construct a CSRF attack.
This was fixed in revisions 1720661 and 1720663.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 7.0.1 to 7.0.67
This was fixed in revisions 1720658 and 1720660.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1720652 and 1720655.
This issue was identified by the Tomcat security team on 8 December 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-12-8,2016-2-22,2016-2-16,c8a8ef0b5bbccd6beb06fd737751595ea810f2b1,webapps/host-manager/WEB-INF/jsp/404.jsp,Don't create session unnecessarily in the Host Manager application.,https://github.com/apache/tomcat/commit/c8a8ef0b5bbccd6beb06fd737751595ea810f2b1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-12-17,1,2,3,10,3,Global,0.042857142857143,3,70,Mark Emlyn David Thomas
CVE-2010-2227,119,NA,DoS Overflow +Info,2010-7-13,2017-9-18,6.4,None,Remote,Low,Not required,Partial,None,Partial,"Apache Tomcat 5.5.0 through 5.5.29, 6.0.0 through 6.0.27, and 7.0.0 beta does not properly handle an invalid Transfer-Encoding header, which allows remote attackers to cause a denial of service (application outage) or obtain sensitive information via a crafted header that interferes with ""recycling of a buffer.""",https://www.cvedetails.com/cve/CVE-2010-2227/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28, 7.0.2:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Remote Denial Of Service and Information Disclosure Vulnerability CVE-2010-2227
Several flaws in the handling of the 'Transfer-Encoding' header were found that prevented the recycling of a buffer. A remote attacker could trigger this flaw which would cause subsequent requests to fail and/or information to leak between requests. This flaw is mitigated if Tomcat is behind a reverse proxy (such as Apache httpd 2.2) as the proxy should reject the invalid transfer encoding header.
This was fixed in revision 959428.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 958977.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 6.0.0-6.0.27
Note: The issue below was fixed in Apache Tomcat 6.0.27 but the release vote for the 6.0.27 release candidate did not pass. Therefore, although users must download 6.0.28 to obtain a version that includes a fix for this issue, version 6.0.27 is not included in the list of affected versions.
This was fixed in revision 958911.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 7.0.0",No,2010-6-14,2010-7-9,2010-8-2,c8e1569ea59ed17b8b2ea3a4c704e4dd2dadff2f,java/org/apache/coyote/http11/AbstractHttp11Processor.java,Reduce code duplication in connectors: Move initializeFilters()to base class,https://github.com/apache/tomcat/commit/c8e1569ea59ed17b8b2ea3a4c704e4dd2dadff2f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-6-21,29,36,36,36,101,Global,0.178251121076233,159,892,Filip Hanik
CVE-2010-2227,119,NA,DoS Overflow +Info,2010-7-13,2017-9-18,6.4,None,Remote,Low,Not required,Partial,None,Partial,"Apache Tomcat 5.5.0 through 5.5.29, 6.0.0 through 6.0.27, and 7.0.0 beta does not properly handle an invalid Transfer-Encoding header, which allows remote attackers to cause a denial of service (application outage) or obtain sensitive information via a crafted header that interferes with ""recycling of a buffer.""",https://www.cvedetails.com/cve/CVE-2010-2227/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28, 7.0.2:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Remote Denial Of Service and Information Disclosure Vulnerability CVE-2010-2227
Several flaws in the handling of the 'Transfer-Encoding' header were found that prevented the recycling of a buffer. A remote attacker could trigger this flaw which would cause subsequent requests to fail and/or information to leak between requests. This flaw is mitigated if Tomcat is behind a reverse proxy (such as Apache httpd 2.2) as the proxy should reject the invalid transfer encoding header.
This was fixed in revision 959428.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 958977.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 6.0.0-6.0.27
Note: The issue below was fixed in Apache Tomcat 6.0.27 but the release vote for the 6.0.27 release candidate did not pass. Therefore, although users must download 6.0.28 to obtain a version that includes a fix for this issue, version 6.0.27 is not included in the list of affected versions.
This was fixed in revision 958911.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 7.0.0",No,2010-6-14,2010-7-9,2010-8-2,c8e1569ea59ed17b8b2ea3a4c704e4dd2dadff2f,java/org/apache/coyote/http11/Http11AprProcessor.java,Reduce code duplication in connectors: Move initializeFilters()to base class,https://github.com/apache/tomcat/commit/c8e1569ea59ed17b8b2ea3a4c704e4dd2dadff2f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-6-21,29,0,33,36,101,Global,0.158394781622235,1117,7052,Mladen Turk
CVE-2010-2227,119,NA,DoS Overflow +Info,2010-7-13,2017-9-18,6.4,None,Remote,Low,Not required,Partial,None,Partial,"Apache Tomcat 5.5.0 through 5.5.29, 6.0.0 through 6.0.27, and 7.0.0 beta does not properly handle an invalid Transfer-Encoding header, which allows remote attackers to cause a denial of service (application outage) or obtain sensitive information via a crafted header that interferes with ""recycling of a buffer.""",https://www.cvedetails.com/cve/CVE-2010-2227/,20100329,"Yes. Fixed in Apache Tomcat 5.5.30, 6.0.28, 7.0.2:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Remote Denial Of Service and Information Disclosure Vulnerability CVE-2010-2227
Several flaws in the handling of the 'Transfer-Encoding' header were found that prevented the recycling of a buffer. A remote attacker could trigger this flaw which would cause subsequent requests to fail and/or information to leak between requests. This flaw is mitigated if Tomcat is behind a reverse proxy (such as Apache httpd 2.2) as the proxy should reject the invalid transfer encoding header.
This was fixed in revision 959428.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 5.5.0-5.5.29
This was fixed in revision 958977.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 6.0.0-6.0.27
Note: The issue below was fixed in Apache Tomcat 6.0.27 but the release vote for the 6.0.27 release candidate did not pass. Therefore, although users must download 6.0.28 to obtain a version that includes a fix for this issue, version 6.0.27 is not included in the list of affected versions.
This was fixed in revision 958911.
This was first reported to the Tomcat security team on 14 Jun 2010 and made public on 9 Jul 2010.
Affects: 7.0.0",No,2010-6-14,2010-7-9,2010-8-2,c8e1569ea59ed17b8b2ea3a4c704e4dd2dadff2f,java/org/apache/coyote/http11/Http11Processor.java,Reduce code duplication in connectors: Move initializeFilters()to base class,https://github.com/apache/tomcat/commit/c8e1569ea59ed17b8b2ea3a4c704e4dd2dadff2f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2010-6-21,29,0,34,36,101,Global,0.067892298784019,469,6908,Mladen Turk
CVE-2017-5650,399,NA,,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,None,None,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.",https://www.cvedetails.com/cve/CVE-2017-5650/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2017-5650
The handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.
This was fixed in revision 1788480.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788460.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-11,2017-4-10,2017-3-30,c909f0147160f634f22820f845b4320c81e5febb,java/org/apache/coyote/http2/Http2UpgradeHandler.java,Close the connection when a goaway frame is received.,https://github.com/apache/tomcat/commit/c909f0147160f634f22820f845b4320c81e5febb,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-25,4,4,5,4,1,Local,0.954772863718231,4771,4997,Mark Thomas
CVE-2009-3548,255,NA,Gain Privileges,2009-11-12,2017-9-18,7.5,User,Remote,Low,Not required,Partial,Partial,Partial,"The Windows installer for Apache Tomcat 6.0.0 through 6.0.20, 5.5.0 through 5.5.28, and possibly earlier versions uses a blank default password for the administrative user, which allows remote attackers to gain privileges.",https://www.cvedetails.com/cve/CVE-2009-3548/,20091005,"Yes. Fixed in Apache Tomcat 5.5.29, 6.0.24:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Insecure default password CVE-2009-3548
The Windows installer defaults to a blank password for the administrative user. If this is not changed during the install process, then by default a user is created with the name admin, roles admin and manager and a blank password.
This was fixed in revision 881771.
This was first reported to the Tomcat security team on 26 Oct 2009 and made public on 9 Nov 2009.
Affects: 6.0.0-6.0.20
This was first reported to the Tomcat security team on 26 Oct 2009 and made public on 9 Nov 2009.
This was fixed in revision 919006.
Affects: 5.5.0-5.5.28",No,2009-10-26,2009-11-9,2010-4-20,cb8855a65c580e332681f61a7d6edfa509588bf0,res/tomcat.nsi,"Fix CVE-2009-3548.
When installing using defaults, don't create an administrative user with a blank password
Note: This is already public - it was discussed on the users list. The formal announcement will go out shortly.
The patch also includes making the Manager and Host-Manager applications separately selectable with the addition of an administrative user only enabled if one of the manager apps is selected",https://github.com/apache/tomcat/commit/cb8855a65c580e332681f61a7d6edfa509588bf0,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2009-11-9,20,60,67,60,7,Local,0.629924393155591,1583,2513,Mark Emlyn David Thomas
CVE-2016-8745,388,NA,+Info,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,Partial,None,None,"A bug in the error handling of the send file code for the NIO HTTP connector in Apache Tomcat 9.0.0.M1 to 9.0.0.M13, 8.5.0 to 8.5.8, 8.0.0.RC1 to 8.0.39, 7.0.0 to 7.0.73 and 6.0.16 to 6.0.48 resulted in the current Processor object being added to the Processor cache multiple times. This in turn meant that the same Processor could be used for concurrent requests. Sharing a Processor can result in information leakage between requests including, not not limited to, session ID and the response body. The bug was first noticed in 8.5.x onwards where it appears the refactoring of the Connector code for 8.5.x onwards made it more likely that the bug was observed. Initially it was thought that the 8.5.x refactoring introduced the bug but further investigation has shown that the bug is present in all currently supported Tomcat versions.",https://www.cvedetails.com/cve/CVE-2016-8745/,20161018,"Yes. Fixed in Apache Tomcat 6.0.50, 7.0.75, 8.0.41, 8.5.9, 9.0.0.M15:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2016-8745
A bug in the error handling of the send file code for the NIO HTTP connector resulted in the current Processor object being added to the Processor cache multiple times. This in turn meant that the same Processor could be used for concurrent requests. Sharing a Processor can result in information leakage between requests including, but not limited to, session ID and the response body.
This was fixed in revision 1777472.
This issue was identified as affecting 6.0.x by the Apache Tomcat Security Team on 3 January 2016 and made public on 5 January 2017.
Affects: 6.0.16 to 6.0.48
This was fixed in revision 1777471.
This issue was identified as affecting 7.0.x by the Apache Tomcat Security Team on 3 January 2016 and made public on 5 January 2017.
Affects: 7.0.0 to 7.0.73
This was fixed in revision 1777469.
This issue was identified as affecting 8.0.x by the Apache Tomcat Security Team on 3 January 2016 and made public on 5 January 2017.
Affects: 8.0.0.RC1 to 8.0.39
This was fixed in revision 1771853.
This issue was identified by the Apache Tomcat Security Team on 8 December 2016 and made public on 12 December 2016.
Affects: 9.0.0.M1 to 9.0.0.M13",No,2016-1-3,2017-1-5,2017-1-24,cbc9b18a845d3c8c053ac293dffda6c6c19dd92b,java/org/apache/tomcat/util/net/NioEndpoint.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60409
When unable to complete sendfile request, ensure the Processor will be added to the cache only once. Patch by markt.",https://github.com/apache/tomcat/commit/cbc9b18a845d3c8c053ac293dffda6c6c19dd92b,Violeta Georgieva Georgieva,violetagg,https://github.com/violetagg,,2016-11-29,1,0,5,4,7,Global,0.004685383798821,128,27319,Filip Hanik
CVE-2016-8745,388,NA,+Info,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,Partial,None,None,"A bug in the error handling of the send file code for the NIO HTTP connector in Apache Tomcat 9.0.0.M1 to 9.0.0.M13, 8.5.0 to 8.5.8, 8.0.0.RC1 to 8.0.39, 7.0.0 to 7.0.73 and 6.0.16 to 6.0.48 resulted in the current Processor object being added to the Processor cache multiple times. This in turn meant that the same Processor could be used for concurrent requests. Sharing a Processor can result in information leakage between requests including, not not limited to, session ID and the response body. The bug was first noticed in 8.5.x onwards where it appears the refactoring of the Connector code for 8.5.x onwards made it more likely that the bug was observed. Initially it was thought that the 8.5.x refactoring introduced the bug but further investigation has shown that the bug is present in all currently supported Tomcat versions.",https://www.cvedetails.com/cve/CVE-2016-8745/,20161018,"Yes. Fixed in Apache Tomcat 6.0.50, 7.0.75, 8.0.41, 8.5.9, 9.0.0.M15:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2016-8745
A bug in the error handling of the send file code for the NIO HTTP connector resulted in the current Processor object being added to the Processor cache multiple times. This in turn meant that the same Processor could be used for concurrent requests. Sharing a Processor can result in information leakage between requests including, but not limited to, session ID and the response body.
This was fixed in revision 1777472.
This issue was identified as affecting 6.0.x by the Apache Tomcat Security Team on 3 January 2016 and made public on 5 January 2017.
Affects: 6.0.16 to 6.0.48
This was fixed in revision 1777471.
This issue was identified as affecting 7.0.x by the Apache Tomcat Security Team on 3 January 2016 and made public on 5 January 2017.
Affects: 7.0.0 to 7.0.73
This was fixed in revision 1777469.
This issue was identified as affecting 8.0.x by the Apache Tomcat Security Team on 3 January 2016 and made public on 5 January 2017.
Affects: 8.0.0.RC1 to 8.0.39
This was fixed in revision 1771853.
This issue was identified by the Apache Tomcat Security Team on 8 December 2016 and made public on 12 December 2016.
Affects: 9.0.0.M1 to 9.0.0.M13",No,2016-1-3,2017-1-5,2017-1-24,cbc9b18a845d3c8c053ac293dffda6c6c19dd92b,test/org/apache/catalina/connector/TestSendFile.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60409
When unable to complete sendfile request, ensure the Processor will be added to the cache only once. Patch by markt.",https://github.com/apache/tomcat/commit/cbc9b18a845d3c8c053ac293dffda6c6c19dd92b,Violeta Georgieva Georgieva,violetagg,https://github.com/violetagg,,2016-11-29,1,0,2,4,7,Global,0.459207459207459,197,429,Violeta Georgieva Georgieva
CVE-2016-8745,388,NA,+Info,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,Partial,None,None,"A bug in the error handling of the send file code for the NIO HTTP connector in Apache Tomcat 9.0.0.M1 to 9.0.0.M13, 8.5.0 to 8.5.8, 8.0.0.RC1 to 8.0.39, 7.0.0 to 7.0.73 and 6.0.16 to 6.0.48 resulted in the current Processor object being added to the Processor cache multiple times. This in turn meant that the same Processor could be used for concurrent requests. Sharing a Processor can result in information leakage between requests including, not not limited to, session ID and the response body. The bug was first noticed in 8.5.x onwards where it appears the refactoring of the Connector code for 8.5.x onwards made it more likely that the bug was observed. Initially it was thought that the 8.5.x refactoring introduced the bug but further investigation has shown that the bug is present in all currently supported Tomcat versions.",https://www.cvedetails.com/cve/CVE-2016-8745/,20161018,"Yes. Fixed in Apache Tomcat 6.0.50, 7.0.75, 8.0.41, 8.5.9, 9.0.0.M15:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Information Disclosure CVE-2016-8745
A bug in the error handling of the send file code for the NIO HTTP connector resulted in the current Processor object being added to the Processor cache multiple times. This in turn meant that the same Processor could be used for concurrent requests. Sharing a Processor can result in information leakage between requests including, but not limited to, session ID and the response body.
This was fixed in revision 1777472.
This issue was identified as affecting 6.0.x by the Apache Tomcat Security Team on 3 January 2016 and made public on 5 January 2017.
Affects: 6.0.16 to 6.0.48
This was fixed in revision 1777471.
This issue was identified as affecting 7.0.x by the Apache Tomcat Security Team on 3 January 2016 and made public on 5 January 2017.
Affects: 7.0.0 to 7.0.73
This was fixed in revision 1777469.
This issue was identified as affecting 8.0.x by the Apache Tomcat Security Team on 3 January 2016 and made public on 5 January 2017.
Affects: 8.0.0.RC1 to 8.0.39
This was fixed in revision 1771853.
This issue was identified by the Apache Tomcat Security Team on 8 December 2016 and made public on 12 December 2016.
Affects: 9.0.0.M1 to 9.0.0.M13",No,2016-1-3,2017-1-5,2017-1-24,cbc9b18a845d3c8c053ac293dffda6c6c19dd92b,webapps/docs/changelog.xml,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60409
When unable to complete sendfile request, ensure the Processor will be added to the cache only once. Patch by markt.",https://github.com/apache/tomcat/commit/cbc9b18a845d3c8c053ac293dffda6c6c19dd92b,Violeta Georgieva Georgieva,violetagg,https://github.com/violetagg,,2016-11-29,1,4,4,4,7,Global,0.015552451776075,412,26491,Mark Emlyn David Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,java/org/apache/coyote/http2/HeaderSink.java,Add addition checks around the handling of HTTP/2 pseudo headers.,https://github.com/apache/tomcat/commit/ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-18,3,5,5,234,13,Global,1,41,41,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,java/org/apache/coyote/http2/HpackDecoder.java,Add addition checks around the handling of HTTP/2 pseudo headers.,https://github.com/apache/tomcat/commit/ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-18,3,20,21,234,13,Global,0.126696832579186,56,442,Remy Maucherat
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,java/org/apache/coyote/http2/Http2Parser.java,Add addition checks around the handling of HTTP/2 pseudo headers.,https://github.com/apache/tomcat/commit/ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-18,3,2,2,234,13,Global,0.998891966759003,1803,1805,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,java/org/apache/coyote/http2/LocalStrings.properties,Add addition checks around the handling of HTTP/2 pseudo headers.,https://github.com/apache/tomcat/commit/ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-18,3,2,2,234,13,Global,0.925925925925926,250,270,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,java/org/apache/coyote/http2/Stream.java,Add addition checks around the handling of HTTP/2 pseudo headers.,https://github.com/apache/tomcat/commit/ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-18,3,49,49,234,13,Global,0.89203233256351,1545,1732,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,test/org/apache/coyote/http2/Http2TestBase.java,Add addition checks around the handling of HTTP/2 pseudo headers.,https://github.com/apache/tomcat/commit/ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-18,3,72,84,234,13,Global,1,1551,1551,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,test/org/apache/coyote/http2/TestHpack.java,Add addition checks around the handling of HTTP/2 pseudo headers.,https://github.com/apache/tomcat/commit/ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-18,3,4,4,234,13,Global,0.063829787234043,6,94,Remy Maucherat
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,test/org/apache/coyote/http2/TestHttp2Section_8_1.java,Add addition checks around the handling of HTTP/2 pseudo headers.,https://github.com/apache/tomcat/commit/ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-18,3,76,76,234,13,Global,1,166,166,Mark Thomas
CVE-2016-6817,119,NA,DoS Overflow,2017-8-10,2018-6-8,5,None,Remote,Low,Not required,None,None,Partial,The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.,https://www.cvedetails.com/cve/CVE-2016-6817/,20160812,"Yes. Fixed in Apache Tomcat 8.5.8, 9.0.0.M13:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2016-6817
The HTTP/2 header parser entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.
This was fixed in revision 1765798.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 8.5.0 to 8.5.6
This was fixed in revision 1765794.
This issue was reported as 60232 on 10 October 2016 and the security implications identified by the Apache Tomcat Security Team on the same day. It was made public on 22 November 2016.
Affects: 9.0.0.M1 to 9.0.0.M11",No,2016-10-10,2016-11-22,2016-11-8,ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,webapps/docs/changelog.xml,Add addition checks around the handling of HTTP/2 pseudo headers.,https://github.com/apache/tomcat/commit/ccbfc6a91086ab4b90c12e78ecee634254f3dbc9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-18,3,4,4,234,13,Global,0.069269714636392,1806,26072,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,ce653c9a23bfdd1e4a9f74093f16558d94d07ab9,java/org/apache/tomcat/util/http/Parameters.java,"Followup to r1195531
Use standard Collections.enumeration() wrapper instead of our Enumerator class.",https://github.com/apache/tomcat/commit/ce653c9a23bfdd1e4a9f74093f16558d94d07ab9,Konstatin Kolinko,,,,2011-11-1,561,2,4,2,2,Local,0.008736008736009,32,3663,Mark Emlyn David Thomas
CVE-2014-0119,264,NA,,2014-5-31,2017-11-8,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.",https://www.cvedetails.com/cve/CVE-2014-0119/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.54, 8.0.8:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information Disclosure CVE-2014-0119
In limited circumstances it was possible for a malicious web application to replace the XML parsers used by Tomcat to process XSLTs for the default servlet, JSP documents, tag library descriptors (TLDs) and tag plugin configuration files. The injected XML parser(s) could then bypass the limits imposed on XML external entities and/or have visibility of the XML files processed for other web applications deployed on the same Tomcat instance.
This was fixed in revisions 1589640, 1593815 and 1593821.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1588199, 1589997, 1590028 and 1590036.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.53
This was fixed in revisions 1588193, 1589837, 1589980, 1589983, 1589985, 1589990 and 1589992.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.5",No,2014-4-12,2014-5-27,2014-5-23,ce70ee6b8fe437a498a375215011056702b0c481,java/org/apache/catalina/security/SecurityClassLoad.java,"Small optimisation. The resolver and the factory are only used when running under a security manager so only load them in this case.
Also avoid a possible memory leak when creating these objects.",https://github.com/apache/tomcat/commit/ce70ee6b8fe437a498a375215011056702b0c481,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-4-17,9,13,13,23,5,Global,0.352207293666027,367,1042,Mladen Turk
CVE-2014-0119,264,NA,,2014-5-31,2017-11-8,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.",https://www.cvedetails.com/cve/CVE-2014-0119/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.54, 8.0.8:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information Disclosure CVE-2014-0119
In limited circumstances it was possible for a malicious web application to replace the XML parsers used by Tomcat to process XSLTs for the default servlet, JSP documents, tag library descriptors (TLDs) and tag plugin configuration files. The injected XML parser(s) could then bypass the limits imposed on XML external entities and/or have visibility of the XML files processed for other web applications deployed on the same Tomcat instance.
This was fixed in revisions 1589640, 1593815 and 1593821.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1588199, 1589997, 1590028 and 1590036.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.53
This was fixed in revisions 1588193, 1589837, 1589980, 1589983, 1589985, 1589990 and 1589992.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.5",No,2014-4-12,2014-5-27,2014-5-23,ce70ee6b8fe437a498a375215011056702b0c481,java/org/apache/catalina/servlets/DefaultServlet.java,"Small optimisation. The resolver and the factory are only used when running under a security manager so only load them in this case.
Also avoid a possible memory leak when creating these objects.",https://github.com/apache/tomcat/commit/ce70ee6b8fe437a498a375215011056702b0c481,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-4-17,9,10,15,23,5,Global,0.215124734310326,1923,8939,Mladen Turk
CVE-2008-0002,NA,NA,+Info,2008-2-11,2014-3-15,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 6.0.0 through 6.0.15 processes parameters in the context of the wrong request when an exception occurs during parameter processing, which might allow remote attackers to obtain sensitive information, as demonstrated by disconnecting during this processing in order to trigger the exception.",https://www.cvedetails.com/cve/CVE-2008-0002/,20071203,"Yes. Fixed in Apache Tomcat 6.0.16: 
http://tomcat.apache.org/security-6.html",If an exception occurs during the processing of parameters (eg if the client disconnects) then it is possible that the parameters submitted for that request will be incorrectly processed as part of a subsequent request.,No,,,2008-2-8,cee1fa1fa66d48adbe24a8b6c0b1407a63717324,java/org/apache/catalina/connector/Request.java,Include 6.0.x parameter processing fix in trunk.,https://github.com/apache/tomcat/commit/cee1fa1fa66d48adbe24a8b6c0b1407a63717324,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-1-7,1,1,1,1,0,Local,0.006687697160883,53,7925,Mladen Turk
CVE-2017-7675,22,NA,Directory Traversal Bypass,2017-8-10,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,The HTTP/2 implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M21 and 8.5.0 to 8.5.15 bypassed a number of security checks that prevented directory traversal attacks. It was therefore possible to bypass security constraints using a specially crafted URL.,https://www.cvedetails.com/cve/CVE-2017-7675/,20170411,"Yes. Fixed in Apache Tomcat 8.5.16, 9.0.0.M22:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security Constraint Bypass CVE-2017-7675
The HTTP/2 implementation bypassed a number of security checks that prevented directory traversal attacks. It was therefore possible to bypass security constraints using an specially crafted URL.
This was fixed in revision 1796091.
The issue was originally reported as a failure to process URL path parameters in bug 61120 on 24 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 8.5.0 to 8.5.15
This was fixed in revision 1796090.
The issue was originally reported as a failure to process URL path parameters in bug 61120 on 24 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 9.0.0.M1 to 9.0.0.M21",No,2017-5-24,2017-8-10,2017-6-26,cf181edc9a8c239cde704cffc3c503425bdcae2b,java/org/apache/coyote/http2/Stream.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61120
Do not ignore path parameters when processing HTTP/2 requests.",https://github.com/apache/tomcat/commit/cf181edc9a8c239cde704cffc3c503425bdcae2b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-5-24,1,8,15,109,7,Global,0.889471176750834,1867,2099,Mark Thomas
CVE-2017-7675,22,NA,Directory Traversal Bypass,2017-8-10,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,The HTTP/2 implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M21 and 8.5.0 to 8.5.15 bypassed a number of security checks that prevented directory traversal attacks. It was therefore possible to bypass security constraints using a specially crafted URL.,https://www.cvedetails.com/cve/CVE-2017-7675/,20170411,"Yes. Fixed in Apache Tomcat 8.5.16, 9.0.0.M22:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security Constraint Bypass CVE-2017-7675
The HTTP/2 implementation bypassed a number of security checks that prevented directory traversal attacks. It was therefore possible to bypass security constraints using an specially crafted URL.
This was fixed in revision 1796091.
The issue was originally reported as a failure to process URL path parameters in bug 61120 on 24 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 8.5.0 to 8.5.15
This was fixed in revision 1796090.
The issue was originally reported as a failure to process URL path parameters in bug 61120 on 24 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 9.0.0.M1 to 9.0.0.M21",No,2017-5-24,2017-8-10,2017-6-26,cf181edc9a8c239cde704cffc3c503425bdcae2b,test/org/apache/coyote/http2/TestStream.java,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61120
Do not ignore path parameters when processing HTTP/2 requests.",https://github.com/apache/tomcat/commit/cf181edc9a8c239cde704cffc3c503425bdcae2b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-5-24,1,97,97,109,7,Global,1,97,97,Mark Thomas
CVE-2017-7675,22,NA,Directory Traversal Bypass,2017-8-10,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,The HTTP/2 implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M21 and 8.5.0 to 8.5.15 bypassed a number of security checks that prevented directory traversal attacks. It was therefore possible to bypass security constraints using a specially crafted URL.,https://www.cvedetails.com/cve/CVE-2017-7675/,20170411,"Yes. Fixed in Apache Tomcat 8.5.16, 9.0.0.M22:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Security Constraint Bypass CVE-2017-7675
The HTTP/2 implementation bypassed a number of security checks that prevented directory traversal attacks. It was therefore possible to bypass security constraints using an specially crafted URL.
This was fixed in revision 1796091.
The issue was originally reported as a failure to process URL path parameters in bug 61120 on 24 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 8.5.0 to 8.5.15
This was fixed in revision 1796090.
The issue was originally reported as a failure to process URL path parameters in bug 61120 on 24 May 2017. The full implications of this issue were identified by the Tomcat Security Team the same day. This issue was made public on 10 August 2017.
Affects: 9.0.0.M1 to 9.0.0.M21",No,2017-5-24,2017-8-10,2017-6-26,cf181edc9a8c239cde704cffc3c503425bdcae2b,webapps/docs/changelog.xml,"Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61120
Do not ignore path parameters when processing HTTP/2 requests.",https://github.com/apache/tomcat/commit/cf181edc9a8c239cde704cffc3c503425bdcae2b,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-5-24,1,4,4,109,7,Global,0.10393877035272,2879,27699,Mark Emlyn David Thomas
CVE-2016-8747,200,NA,+Info,2017-3-14,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,An information disclosure issue was discovered in Apache Tomcat 8.5.7 to 8.5.9 and 9.0.0.M11 to 9.0.0.M15 in reverse-proxy configurations. Http11InputBuffer.java allows remote attackers to read data that was intended to be associated with a different request.,https://www.cvedetails.com/cve/CVE-2016-8747/,20161018,"Yes. Fixed in Apache Tomcat 8.5.11, 9.0.0.M17:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Information Disclosure CVE-2016-8747
The refactoring to make wider use of ByteBuffer introduced a regression that could cause information to leak between requests on the same connection. When running behind a reverse proxy, this could result in information leakage between users. All HTTP connector variants are affected but HTTP/2 and AJP are not affected.
This was fixed in revision 1774166.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 8.5.7 to 8.5.9
This was fixed in revision 1774161.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 9.0.0.M11 to 9.0.0.M15",No,2016-12-13,2017-3-13,2017-1-16,d1fd060f8ec5a0f58f72a0323540c6cfd0d0c9b6,java/org/apache/coyote/http11/Http11InputBuffer.java,Reduce references to SocketWrapperBase.getEndpoint(),https://github.com/apache/tomcat/commit/d1fd060f8ec5a0f58f72a0323540c6cfd0d0c9b6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-12-14,1,5,8,17,10,Global,0.502676181980375,1127,2242,Mark Thomas
CVE-2016-8747,200,NA,+Info,2017-3-14,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,An information disclosure issue was discovered in Apache Tomcat 8.5.7 to 8.5.9 and 9.0.0.M11 to 9.0.0.M15 in reverse-proxy configurations. Http11InputBuffer.java allows remote attackers to read data that was intended to be associated with a different request.,https://www.cvedetails.com/cve/CVE-2016-8747/,20161018,"Yes. Fixed in Apache Tomcat 8.5.11, 9.0.0.M17:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Information Disclosure CVE-2016-8747
The refactoring to make wider use of ByteBuffer introduced a regression that could cause information to leak between requests on the same connection. When running behind a reverse proxy, this could result in information leakage between users. All HTTP connector variants are affected but HTTP/2 and AJP are not affected.
This was fixed in revision 1774166.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 8.5.7 to 8.5.9
This was fixed in revision 1774161.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 9.0.0.M11 to 9.0.0.M15",No,2016-12-13,2017-3-13,2017-1-16,d1fd060f8ec5a0f58f72a0323540c6cfd0d0c9b6,java/org/apache/coyote/http11/Http11Processor.java,Reduce references to SocketWrapperBase.getEndpoint(),https://github.com/apache/tomcat/commit/d1fd060f8ec5a0f58f72a0323540c6cfd0d0c9b6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-12-14,1,2,3,17,10,Global,0.399064906490649,2902,7272,Mark Emlyn David Thomas
CVE-2016-8747,200,NA,+Info,2017-3-14,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,An information disclosure issue was discovered in Apache Tomcat 8.5.7 to 8.5.9 and 9.0.0.M11 to 9.0.0.M15 in reverse-proxy configurations. Http11InputBuffer.java allows remote attackers to read data that was intended to be associated with a different request.,https://www.cvedetails.com/cve/CVE-2016-8747/,20161018,"Yes. Fixed in Apache Tomcat 8.5.11, 9.0.0.M17:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Information Disclosure CVE-2016-8747
The refactoring to make wider use of ByteBuffer introduced a regression that could cause information to leak between requests on the same connection. When running behind a reverse proxy, this could result in information leakage between users. All HTTP connector variants are affected but HTTP/2 and AJP are not affected.
This was fixed in revision 1774166.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 8.5.7 to 8.5.9
This was fixed in revision 1774161.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 9.0.0.M11 to 9.0.0.M15",No,2016-12-13,2017-3-13,2017-1-16,d1fd060f8ec5a0f58f72a0323540c6cfd0d0c9b6,java/org/apache/coyote/http2/StreamProcessor.java,Reduce references to SocketWrapperBase.getEndpoint(),https://github.com/apache/tomcat/commit/d1fd060f8ec5a0f58f72a0323540c6cfd0d0c9b6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-12-14,1,1,3,17,10,Global,0.968399592252803,1900,1962,Mark Thomas
CVE-2016-8747,200,NA,+Info,2017-3-14,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,An information disclosure issue was discovered in Apache Tomcat 8.5.7 to 8.5.9 and 9.0.0.M11 to 9.0.0.M15 in reverse-proxy configurations. Http11InputBuffer.java allows remote attackers to read data that was intended to be associated with a different request.,https://www.cvedetails.com/cve/CVE-2016-8747/,20161018,"Yes. Fixed in Apache Tomcat 8.5.11, 9.0.0.M17:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Information Disclosure CVE-2016-8747
The refactoring to make wider use of ByteBuffer introduced a regression that could cause information to leak between requests on the same connection. When running behind a reverse proxy, this could result in information leakage between users. All HTTP connector variants are affected but HTTP/2 and AJP are not affected.
This was fixed in revision 1774166.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 8.5.7 to 8.5.9
This was fixed in revision 1774161.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 9.0.0.M11 to 9.0.0.M15",No,2016-12-13,2017-3-13,2017-1-16,d1fd060f8ec5a0f58f72a0323540c6cfd0d0c9b6,java/org/apache/tomcat/util/net/SocketWrapperBase.java,Reduce references to SocketWrapperBase.getEndpoint(),https://github.com/apache/tomcat/commit/d1fd060f8ec5a0f58f72a0323540c6cfd0d0c9b6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-12-14,1,5,5,17,10,Global,0.52112676056338,1184,2272,Mark Thomas
CVE-2016-8747,200,NA,+Info,2017-3-14,2018-6-15,5,None,Remote,Low,Not required,Partial,None,None,An information disclosure issue was discovered in Apache Tomcat 8.5.7 to 8.5.9 and 9.0.0.M11 to 9.0.0.M15 in reverse-proxy configurations. Http11InputBuffer.java allows remote attackers to read data that was intended to be associated with a different request.,https://www.cvedetails.com/cve/CVE-2016-8747/,20161018,"Yes. Fixed in Apache Tomcat 8.5.11, 9.0.0.M17:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Information Disclosure CVE-2016-8747
The refactoring to make wider use of ByteBuffer introduced a regression that could cause information to leak between requests on the same connection. When running behind a reverse proxy, this could result in information leakage between users. All HTTP connector variants are affected but HTTP/2 and AJP are not affected.
This was fixed in revision 1774166.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 8.5.7 to 8.5.9
This was fixed in revision 1774161.
This issue was identified by the Apache Tomcat Security Team on 14 December 2016 and made public on 13 March 2017.
Affects: 9.0.0.M11 to 9.0.0.M15",No,2016-12-13,2017-3-13,2017-1-16,d1fd060f8ec5a0f58f72a0323540c6cfd0d0c9b6,java/org/apache/tomcat/websocket/server/WsRemoteEndpointImplServer.java,Reduce references to SocketWrapperBase.getEndpoint(),https://github.com/apache/tomcat/commit/d1fd060f8ec5a0f58f72a0323540c6cfd0d0c9b6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-12-14,1,1,2,17,10,Global,0.148867313915858,138,927,Mark Emlyn David Thomas
CVE-2011-1475,20,NA,,2011-4-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP BIO connector in Apache Tomcat 7.0.x before 7.0.12 does not properly handle HTTP pipelining, which allows remote attackers to read responses intended for other clients in opportunistic circumstances by examining the application data in HTTP packets, related to ""a mix-up of responses for requests from different users.""",https://www.cvedetails.com/cve/CVE-2011-1475/,20110321,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-1475
Changes introduced to the HTTP BIO connector to support Servlet 3.0 asynchronous requests did not fully account for HTTP pipelining. As a result, when using HTTP pipelining a range of unexpected behaviours occurred including the mixing up of responses between requests. While the mix-up in responses was only observed between requests from the same user, a mix-up of responses for requests from different users may also be possible.
This was fixed in revisions 1086349 and 1086352. (Note: HTTP pipelined requests are still likely to fail with the HTTP BIO connector but will do so in a secure manner.)
This was reported publicly on the Tomcat Bugzilla issue tracker on 22 Mar 2011.
Affects: 7.0.0-7.0.11",No,2011-3-22,2011-3-22,2011-4-6,d2e8f2ede7dea39f75f68384f331f38f094e4ed3,java/org/apache/coyote/ajp/AjpAprProcessor.java,"Move the processor.recycle calls to just before the point where the processor is returned to the pool. This ensures returned processors are recycled (this could have been skipped on some exception paths)
Possible contributing factor to https://issues.apache.org/bugzilla/show_bug.cgi?id=50957 ? This is part of the fix for CVE-2011-1475",https://github.com/apache/tomcat/commit/d2e8f2ede7dea39f75f68384f331f38f094e4ed3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-28,1,0,5,15,30,Global,0.201068294544067,1054,5242,Mladen Turk
CVE-2011-1475,20,NA,,2011-4-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP BIO connector in Apache Tomcat 7.0.x before 7.0.12 does not properly handle HTTP pipelining, which allows remote attackers to read responses intended for other clients in opportunistic circumstances by examining the application data in HTTP packets, related to ""a mix-up of responses for requests from different users.""",https://www.cvedetails.com/cve/CVE-2011-1475/,20110321,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-1475
Changes introduced to the HTTP BIO connector to support Servlet 3.0 asynchronous requests did not fully account for HTTP pipelining. As a result, when using HTTP pipelining a range of unexpected behaviours occurred including the mixing up of responses between requests. While the mix-up in responses was only observed between requests from the same user, a mix-up of responses for requests from different users may also be possible.
This was fixed in revisions 1086349 and 1086352. (Note: HTTP pipelined requests are still likely to fail with the HTTP BIO connector but will do so in a secure manner.)
This was reported publicly on the Tomcat Bugzilla issue tracker on 22 Mar 2011.
Affects: 7.0.0-7.0.11",No,2011-3-22,2011-3-22,2011-4-6,d2e8f2ede7dea39f75f68384f331f38f094e4ed3,java/org/apache/coyote/ajp/AjpAprProtocol.java,"Move the processor.recycle calls to just before the point where the processor is returned to the pool. This ensures returned processors are recycled (this could have been skipped on some exception paths)
Possible contributing factor to https://issues.apache.org/bugzilla/show_bug.cgi?id=50957 ? This is part of the fix for CVE-2011-1475",https://github.com/apache/tomcat/commit/d2e8f2ede7dea39f75f68384f331f38f094e4ed3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-28,1,3,3,15,30,Global,0.107064017660044,291,2718,Mladen Turk
CVE-2011-1475,20,NA,,2011-4-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP BIO connector in Apache Tomcat 7.0.x before 7.0.12 does not properly handle HTTP pipelining, which allows remote attackers to read responses intended for other clients in opportunistic circumstances by examining the application data in HTTP packets, related to ""a mix-up of responses for requests from different users.""",https://www.cvedetails.com/cve/CVE-2011-1475/,20110321,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-1475
Changes introduced to the HTTP BIO connector to support Servlet 3.0 asynchronous requests did not fully account for HTTP pipelining. As a result, when using HTTP pipelining a range of unexpected behaviours occurred including the mixing up of responses between requests. While the mix-up in responses was only observed between requests from the same user, a mix-up of responses for requests from different users may also be possible.
This was fixed in revisions 1086349 and 1086352. (Note: HTTP pipelined requests are still likely to fail with the HTTP BIO connector but will do so in a secure manner.)
This was reported publicly on the Tomcat Bugzilla issue tracker on 22 Mar 2011.
Affects: 7.0.0-7.0.11",No,2011-3-22,2011-3-22,2011-4-6,d2e8f2ede7dea39f75f68384f331f38f094e4ed3,java/org/apache/coyote/ajp/AjpProcessor.java,"Move the processor.recycle calls to just before the point where the processor is returned to the pool. This ensures returned processors are recycled (this could have been skipped on some exception paths)
Possible contributing factor to https://issues.apache.org/bugzilla/show_bug.cgi?id=50957 ? This is part of the fix for CVE-2011-1475",https://github.com/apache/tomcat/commit/d2e8f2ede7dea39f75f68384f331f38f094e4ed3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-28,1,0,4,15,30,Global,0.38349131121643,971,2532,Remy Maucherat
CVE-2011-1475,20,NA,,2011-4-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP BIO connector in Apache Tomcat 7.0.x before 7.0.12 does not properly handle HTTP pipelining, which allows remote attackers to read responses intended for other clients in opportunistic circumstances by examining the application data in HTTP packets, related to ""a mix-up of responses for requests from different users.""",https://www.cvedetails.com/cve/CVE-2011-1475/,20110321,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-1475
Changes introduced to the HTTP BIO connector to support Servlet 3.0 asynchronous requests did not fully account for HTTP pipelining. As a result, when using HTTP pipelining a range of unexpected behaviours occurred including the mixing up of responses between requests. While the mix-up in responses was only observed between requests from the same user, a mix-up of responses for requests from different users may also be possible.
This was fixed in revisions 1086349 and 1086352. (Note: HTTP pipelined requests are still likely to fail with the HTTP BIO connector but will do so in a secure manner.)
This was reported publicly on the Tomcat Bugzilla issue tracker on 22 Mar 2011.
Affects: 7.0.0-7.0.11",No,2011-3-22,2011-3-22,2011-4-6,d2e8f2ede7dea39f75f68384f331f38f094e4ed3,java/org/apache/coyote/ajp/AjpProtocol.java,"Move the processor.recycle calls to just before the point where the processor is returned to the pool. This ensures returned processors are recycled (this could have been skipped on some exception paths)
Possible contributing factor to https://issues.apache.org/bugzilla/show_bug.cgi?id=50957 ? This is part of the fix for CVE-2011-1475",https://github.com/apache/tomcat/commit/d2e8f2ede7dea39f75f68384f331f38f094e4ed3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-28,1,2,2,15,30,Global,0.158562367864693,225,1419,Remy Maucherat
CVE-2011-1475,20,NA,,2011-4-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP BIO connector in Apache Tomcat 7.0.x before 7.0.12 does not properly handle HTTP pipelining, which allows remote attackers to read responses intended for other clients in opportunistic circumstances by examining the application data in HTTP packets, related to ""a mix-up of responses for requests from different users.""",https://www.cvedetails.com/cve/CVE-2011-1475/,20110321,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-1475
Changes introduced to the HTTP BIO connector to support Servlet 3.0 asynchronous requests did not fully account for HTTP pipelining. As a result, when using HTTP pipelining a range of unexpected behaviours occurred including the mixing up of responses between requests. While the mix-up in responses was only observed between requests from the same user, a mix-up of responses for requests from different users may also be possible.
This was fixed in revisions 1086349 and 1086352. (Note: HTTP pipelined requests are still likely to fail with the HTTP BIO connector but will do so in a secure manner.)
This was reported publicly on the Tomcat Bugzilla issue tracker on 22 Mar 2011.
Affects: 7.0.0-7.0.11",No,2011-3-22,2011-3-22,2011-4-6,d2e8f2ede7dea39f75f68384f331f38f094e4ed3,java/org/apache/coyote/http11/Http11AprProcessor.java,"Move the processor.recycle calls to just before the point where the processor is returned to the pool. This ensures returned processors are recycled (this could have been skipped on some exception paths)
Possible contributing factor to https://issues.apache.org/bugzilla/show_bug.cgi?id=50957 ? This is part of the fix for CVE-2011-1475",https://github.com/apache/tomcat/commit/d2e8f2ede7dea39f75f68384f331f38f094e4ed3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-28,1,0,6,15,30,Global,0.224588450483407,1719,7654,Mladen Turk
CVE-2011-1475,20,NA,,2011-4-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP BIO connector in Apache Tomcat 7.0.x before 7.0.12 does not properly handle HTTP pipelining, which allows remote attackers to read responses intended for other clients in opportunistic circumstances by examining the application data in HTTP packets, related to ""a mix-up of responses for requests from different users.""",https://www.cvedetails.com/cve/CVE-2011-1475/,20110321,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-1475
Changes introduced to the HTTP BIO connector to support Servlet 3.0 asynchronous requests did not fully account for HTTP pipelining. As a result, when using HTTP pipelining a range of unexpected behaviours occurred including the mixing up of responses between requests. While the mix-up in responses was only observed between requests from the same user, a mix-up of responses for requests from different users may also be possible.
This was fixed in revisions 1086349 and 1086352. (Note: HTTP pipelined requests are still likely to fail with the HTTP BIO connector but will do so in a secure manner.)
This was reported publicly on the Tomcat Bugzilla issue tracker on 22 Mar 2011.
Affects: 7.0.0-7.0.11",No,2011-3-22,2011-3-22,2011-4-6,d2e8f2ede7dea39f75f68384f331f38f094e4ed3,java/org/apache/coyote/http11/Http11AprProtocol.java,"Move the processor.recycle calls to just before the point where the processor is returned to the pool. This ensures returned processors are recycled (this could have been skipped on some exception paths)
Possible contributing factor to https://issues.apache.org/bugzilla/show_bug.cgi?id=50957 ? This is part of the fix for CVE-2011-1475",https://github.com/apache/tomcat/commit/d2e8f2ede7dea39f75f68384f331f38f094e4ed3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-28,1,4,4,15,30,Global,0.210601041173687,890,4226,Remy Maucherat
CVE-2011-1475,20,NA,,2011-4-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP BIO connector in Apache Tomcat 7.0.x before 7.0.12 does not properly handle HTTP pipelining, which allows remote attackers to read responses intended for other clients in opportunistic circumstances by examining the application data in HTTP packets, related to ""a mix-up of responses for requests from different users.""",https://www.cvedetails.com/cve/CVE-2011-1475/,20110321,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-1475
Changes introduced to the HTTP BIO connector to support Servlet 3.0 asynchronous requests did not fully account for HTTP pipelining. As a result, when using HTTP pipelining a range of unexpected behaviours occurred including the mixing up of responses between requests. While the mix-up in responses was only observed between requests from the same user, a mix-up of responses for requests from different users may also be possible.
This was fixed in revisions 1086349 and 1086352. (Note: HTTP pipelined requests are still likely to fail with the HTTP BIO connector but will do so in a secure manner.)
This was reported publicly on the Tomcat Bugzilla issue tracker on 22 Mar 2011.
Affects: 7.0.0-7.0.11",No,2011-3-22,2011-3-22,2011-4-6,d2e8f2ede7dea39f75f68384f331f38f094e4ed3,java/org/apache/coyote/http11/Http11NioProcessor.java,"Move the processor.recycle calls to just before the point where the processor is returned to the pool. This ensures returned processors are recycled (this could have been skipped on some exception paths)
Possible contributing factor to https://issues.apache.org/bugzilla/show_bug.cgi?id=50957 ? This is part of the fix for CVE-2011-1475",https://github.com/apache/tomcat/commit/d2e8f2ede7dea39f75f68384f331f38f094e4ed3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-28,1,4,17,15,30,Global,0.125942684766214,1002,7956,Mladen Turk
CVE-2011-1475,20,NA,,2011-4-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP BIO connector in Apache Tomcat 7.0.x before 7.0.12 does not properly handle HTTP pipelining, which allows remote attackers to read responses intended for other clients in opportunistic circumstances by examining the application data in HTTP packets, related to ""a mix-up of responses for requests from different users.""",https://www.cvedetails.com/cve/CVE-2011-1475/,20110321,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-1475
Changes introduced to the HTTP BIO connector to support Servlet 3.0 asynchronous requests did not fully account for HTTP pipelining. As a result, when using HTTP pipelining a range of unexpected behaviours occurred including the mixing up of responses between requests. While the mix-up in responses was only observed between requests from the same user, a mix-up of responses for requests from different users may also be possible.
This was fixed in revisions 1086349 and 1086352. (Note: HTTP pipelined requests are still likely to fail with the HTTP BIO connector but will do so in a secure manner.)
This was reported publicly on the Tomcat Bugzilla issue tracker on 22 Mar 2011.
Affects: 7.0.0-7.0.11",No,2011-3-22,2011-3-22,2011-4-6,d2e8f2ede7dea39f75f68384f331f38f094e4ed3,java/org/apache/coyote/http11/Http11Processor.java,"Move the processor.recycle calls to just before the point where the processor is returned to the pool. This ensures returned processors are recycled (this could have been skipped on some exception paths)
Possible contributing factor to https://issues.apache.org/bugzilla/show_bug.cgi?id=50957 ? This is part of the fix for CVE-2011-1475",https://github.com/apache/tomcat/commit/d2e8f2ede7dea39f75f68384f331f38f094e4ed3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-28,1,0,2,15,30,Global,0.12287154338646,902,7341,Mladen Turk
CVE-2011-1475,20,NA,,2011-4-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP BIO connector in Apache Tomcat 7.0.x before 7.0.12 does not properly handle HTTP pipelining, which allows remote attackers to read responses intended for other clients in opportunistic circumstances by examining the application data in HTTP packets, related to ""a mix-up of responses for requests from different users.""",https://www.cvedetails.com/cve/CVE-2011-1475/,20110321,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-1475
Changes introduced to the HTTP BIO connector to support Servlet 3.0 asynchronous requests did not fully account for HTTP pipelining. As a result, when using HTTP pipelining a range of unexpected behaviours occurred including the mixing up of responses between requests. While the mix-up in responses was only observed between requests from the same user, a mix-up of responses for requests from different users may also be possible.
This was fixed in revisions 1086349 and 1086352. (Note: HTTP pipelined requests are still likely to fail with the HTTP BIO connector but will do so in a secure manner.)
This was reported publicly on the Tomcat Bugzilla issue tracker on 22 Mar 2011.
Affects: 7.0.0-7.0.11",No,2011-3-22,2011-3-22,2011-4-6,d2e8f2ede7dea39f75f68384f331f38f094e4ed3,java/org/apache/coyote/http11/Http11Protocol.java,"Move the processor.recycle calls to just before the point where the processor is returned to the pool. This ensures returned processors are recycled (this could have been skipped on some exception paths)
Possible contributing factor to https://issues.apache.org/bugzilla/show_bug.cgi?id=50957 ? This is part of the fix for CVE-2011-1475",https://github.com/apache/tomcat/commit/d2e8f2ede7dea39f75f68384f331f38f094e4ed3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-28,1,2,2,15,30,Global,0.113008824366638,397,3513,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,d35b7a0c8c18888a380c0cdbdeec101ebc3e9c20,java/org/apache/tomcat/util/http/Parameters.java,"Restore handleQueryParameters() call that was lost in r1189882
This is not covered by our tests.",https://github.com/apache/tomcat/commit/d35b7a0c8c18888a380c0cdbdeec101ebc3e9c20,Konstatin Kolinko,,,,2011-11-7,561,1,2,1,1,Local,0.01453957996769,54,3714,Mark Emlyn David Thomas
CVE-2017-5650,399,NA,,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,None,None,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.",https://www.cvedetails.com/cve/CVE-2017-5650/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2017-5650
The handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.
This was fixed in revision 1788480.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788460.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-11,2017-4-10,2017-3-30,d4151abe024b0741b680b92f33f48ea9fdc2c5d3,java/org/apache/coyote/http2/Http2AsyncUpgradeHandler.java,Add an undocumented option for use when running test suites that disables server initiated ping frames since some test suites don't expect them .,https://github.com/apache/tomcat/commit/d4151abe024b0741b680b92f33f48ea9fdc2c5d3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-24,4,3,3,20,1,Global,0.008720930232558,3,344,Remy Maucherat
CVE-2017-5650,399,NA,,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,None,None,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.",https://www.cvedetails.com/cve/CVE-2017-5650/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2017-5650
The handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.
This was fixed in revision 1788480.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788460.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-11,2017-4-10,2017-3-30,d4151abe024b0741b680b92f33f48ea9fdc2c5d3,java/org/apache/coyote/http2/Http2Protocol.java,Add an undocumented option for use when running test suites that disables server initiated ping frames since some test suites don't expect them .,https://github.com/apache/tomcat/commit/d4151abe024b0741b680b92f33f48ea9fdc2c5d3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-24,4,7,8,20,1,Global,0.913265306122449,358,392,Mark Thomas
CVE-2017-5650,399,NA,,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,None,None,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.",https://www.cvedetails.com/cve/CVE-2017-5650/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2017-5650
The handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.
This was fixed in revision 1788480.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788460.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-11,2017-4-10,2017-3-30,d4151abe024b0741b680b92f33f48ea9fdc2c5d3,java/org/apache/coyote/http2/Http2UpgradeHandler.java,Add an undocumented option for use when running test suites that disables server initiated ping frames since some test suites don't expect them .,https://github.com/apache/tomcat/commit/d4151abe024b0741b680b92f33f48ea9fdc2c5d3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-24,4,10,10,20,1,Global,0.954727564102564,4766,4992,Mark Thomas
CVE-2012-4431,264,NA,Bypass CSRF,2012-12-19,2017-9-18,4.3,None,Remote,Medium,Not required,None,Partial,None,org/apache/catalina/filters/CsrfPreventionFilter.java in Apache Tomcat 6.x before 6.0.36 and 7.x before 7.0.32 allows remote attackers to bypass the cross-site request forgery (CSRF) protection mechanism via a request that lacks a session identifier.,https://www.cvedetails.com/cve/CVE-2012-4431/,20120821,"Yes. Fixed in Apache Tomcat 6.0.36, 7.0.32: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Bypass of CSRF prevention filter CVE-2012-4431
The CSRF prevention filter could be bypassed if a request was made to a protected resource without a session identifier present in the request.
This was fixed in revision 1394456.
This issue was identified by the Tomcat security team on 8 September 2012 and made public on 4 December 2012.
Affects: 6.0.30-6.0.35
This was fixed in revision 1393088.
This issue was identified by the Tomcat security team on 8 September 2012 and made public on 4 December 2012.
Affects: 7.0.0-7.0.31",No,2012-9-8,2012-12-4,2012-10-19,d426972306270b04696b2ca65b442f082a5328cf,java/org/apache/catalina/filters/CsrfPreventionFilter.java,Improve session management in CsrfPreventionFilter,https://github.com/apache/tomcat/commit/d426972306270b04696b2ca65b442f082a5328cf,Konstatin Kolinko,,,,2012-10-2,21,13,18,13,5,Local,0.037037037037037,18,486,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,d4f36cb717363f63608c79cb0a8f5dbc026092c1,test/org/apache/catalina/core/TestStandardWrapper.java,"@ServletSecurity support
Add tests for subclasses",https://github.com/apache/tomcat/commit/d4f36cb717363f63608c79cb0a8f5dbc026092c1,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-3,7,48,52,48,4,Local,1,125,125,Mark Emlyn David Thomas
CVE-2007-6286,NA,NA,,2008-2-11,2014-3-15,4.3,None,Remote,Medium,Not required,None,Partial,None,"Apache Tomcat 5.5.11 through 5.5.25 and 6.0.0 through 6.0.15, when the native APR connector is used, does not properly handle an empty request to the SSL port, which allows remote attackers to trigger handling of ""a duplicate copy of one of the recent requests,"" as demonstrated by using netcat to send the empty request.",https://www.cvedetails.com/cve/CVE-2007-6286/,20071210,"Yes. Fixed in Apache Tomcat 5.5.26, 6.0.16:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","When using the native (APR based) connector, connecting to the SSL port using netcat and then disconnecting without sending any data will cause tomcat to handle a duplicate copy of one of the recent requests.",No,,,2008-2-8,d6145060faae8219487df6511a4d470b139e386d,java/org/apache/tomcat/util/net/SSLImplementation.java,Remove JSSE dependency from SSL abstraction.,https://github.com/apache/tomcat/commit/d6145060faae8219487df6511a4d470b139e386d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-1-30,1,0,2,0,2,Local,0.057142857142857,16,280,Mladen Turk
CVE-2013-4322,20,NA,DoS,2014-2-26,2017-12-15,4.3,None,Remote,Medim,Not required,None,None,Partial,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding without properly handling (1) a large total amount of chunked data or (2) whitespace characters in an HTTP header value within a trailer field, which allows remote attackers to cause a denial of service by streaming data. NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3544.",https://www.cvedetails.com/cve/CVE-2013-4322/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of service CVE-2013-4322
The fix for CVE-2012-3544 was not complete. It did not cover the following cases:
chunk extensions were not limited
whitespace after the : in a trailing header was not limited
This was fixed in revision 1556540.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revisions 1521864 and 1549523.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revisions 1521834 and 1549522.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-11-5,2014-2-25,2014-1-31,d6a9898125f34e593de426e8c7dabb0f224fc00f,java/org/apache/coyote/http11/AbstractHttp11Processor.java,Add support for limiting the size of chunk extensions when using chunked encoding,https://github.com/apache/tomcat/commit/d6a9898125f34e593de426e8c7dabb0f224fc00f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-9-11,90,3,5,125,15,Global,0.78788709235407,2875,3649,Mark Emlyn David Thomas
CVE-2013-4322,20,NA,DoS,2014-2-26,2017-12-15,4.3,None,Remote,Medim,Not required,None,None,Partial,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding without properly handling (1) a large total amount of chunked data or (2) whitespace characters in an HTTP header value within a trailer field, which allows remote attackers to cause a denial of service by streaming data. NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3544.",https://www.cvedetails.com/cve/CVE-2013-4322/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of service CVE-2013-4322
The fix for CVE-2012-3544 was not complete. It did not cover the following cases:
chunk extensions were not limited
whitespace after the : in a trailing header was not limited
This was fixed in revision 1556540.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revisions 1521864 and 1549523.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revisions 1521834 and 1549522.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-11-5,2014-2-25,2014-1-31,d6a9898125f34e593de426e8c7dabb0f224fc00f,java/org/apache/coyote/http11/AbstractHttp11Protocol.java,Add support for limiting the size of chunk extensions when using chunked encoding,https://github.com/apache/tomcat/commit/d6a9898125f34e593de426e8c7dabb0f224fc00f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-9-11,90,10,10,125,15,Global,0.709948320413437,1099,1548,Mark Emlyn David Thomas
CVE-2013-4322,20,NA,DoS,2014-2-26,2017-12-15,4.3,None,Remote,Medim,Not required,None,None,Partial,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding without properly handling (1) a large total amount of chunked data or (2) whitespace characters in an HTTP header value within a trailer field, which allows remote attackers to cause a denial of service by streaming data. NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3544.",https://www.cvedetails.com/cve/CVE-2013-4322/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of service CVE-2013-4322
The fix for CVE-2012-3544 was not complete. It did not cover the following cases:
chunk extensions were not limited
whitespace after the : in a trailing header was not limited
This was fixed in revision 1556540.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revisions 1521864 and 1549523.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revisions 1521834 and 1549522.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-11-5,2014-2-25,2014-1-31,d6a9898125f34e593de426e8c7dabb0f224fc00f,java/org/apache/coyote/http11/Http11AprProcessor.java,Add support for limiting the size of chunk extensions when using chunked encoding,https://github.com/apache/tomcat/commit/d6a9898125f34e593de426e8c7dabb0f224fc00f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-9-11,90,2,4,125,15,Global,0.334562520952062,2994,8949,Mladen Turk
CVE-2013-4322,20,NA,DoS,2014-2-26,2017-12-15,4.3,None,Remote,Medim,Not required,None,None,Partial,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding without properly handling (1) a large total amount of chunked data or (2) whitespace characters in an HTTP header value within a trailer field, which allows remote attackers to cause a denial of service by streaming data. NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3544.",https://www.cvedetails.com/cve/CVE-2013-4322/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of service CVE-2013-4322
The fix for CVE-2012-3544 was not complete. It did not cover the following cases:
chunk extensions were not limited
whitespace after the : in a trailing header was not limited
This was fixed in revision 1556540.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revisions 1521864 and 1549523.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revisions 1521834 and 1549522.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-11-5,2014-2-25,2014-1-31,d6a9898125f34e593de426e8c7dabb0f224fc00f,java/org/apache/coyote/http11/Http11AprProtocol.java,Add support for limiting the size of chunk extensions when using chunked encoding,https://github.com/apache/tomcat/commit/d6a9898125f34e593de426e8c7dabb0f224fc00f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-9-11,90,1,2,125,15,Global,0.308728881737731,1535,4972,Remy Maucherat
CVE-2013-4322,20,NA,DoS,2014-2-26,2017-12-15,4.3,None,Remote,Medim,Not required,None,None,Partial,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding without properly handling (1) a large total amount of chunked data or (2) whitespace characters in an HTTP header value within a trailer field, which allows remote attackers to cause a denial of service by streaming data. NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3544.",https://www.cvedetails.com/cve/CVE-2013-4322/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of service CVE-2013-4322
The fix for CVE-2012-3544 was not complete. It did not cover the following cases:
chunk extensions were not limited
whitespace after the : in a trailing header was not limited
This was fixed in revision 1556540.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revisions 1521864 and 1549523.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revisions 1521834 and 1549522.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-11-5,2014-2-25,2014-1-31,d6a9898125f34e593de426e8c7dabb0f224fc00f,java/org/apache/coyote/http11/Http11NioProcessor.java,Add support for limiting the size of chunk extensions when using chunked encoding,https://github.com/apache/tomcat/commit/d6a9898125f34e593de426e8c7dabb0f224fc00f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-9-11,90,2,4,125,15,Global,0.283893627696939,2829,9965,Mladen Turk
CVE-2013-4322,20,NA,DoS,2014-2-26,2017-12-15,4.3,None,Remote,Medim,Not required,None,None,Partial,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding without properly handling (1) a large total amount of chunked data or (2) whitespace characters in an HTTP header value within a trailer field, which allows remote attackers to cause a denial of service by streaming data. NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3544.",https://www.cvedetails.com/cve/CVE-2013-4322/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of service CVE-2013-4322
The fix for CVE-2012-3544 was not complete. It did not cover the following cases:
chunk extensions were not limited
whitespace after the : in a trailing header was not limited
This was fixed in revision 1556540.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revisions 1521864 and 1549523.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revisions 1521834 and 1549522.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-11-5,2014-2-25,2014-1-31,d6a9898125f34e593de426e8c7dabb0f224fc00f,java/org/apache/coyote/http11/Http11NioProtocol.java,Add support for limiting the size of chunk extensions when using chunked encoding,https://github.com/apache/tomcat/commit/d6a9898125f34e593de426e8c7dabb0f224fc00f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-9-11,90,1,2,125,15,Global,0.249677973379133,1163,4658,Filip Hanik
CVE-2013-4322,20,NA,DoS,2014-2-26,2017-12-15,4.3,None,Remote,Medim,Not required,None,None,Partial,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding without properly handling (1) a large total amount of chunked data or (2) whitespace characters in an HTTP header value within a trailer field, which allows remote attackers to cause a denial of service by streaming data. NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3544.",https://www.cvedetails.com/cve/CVE-2013-4322/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of service CVE-2013-4322
The fix for CVE-2012-3544 was not complete. It did not cover the following cases:
chunk extensions were not limited
whitespace after the : in a trailing header was not limited
This was fixed in revision 1556540.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revisions 1521864 and 1549523.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revisions 1521834 and 1549522.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-11-5,2014-2-25,2014-1-31,d6a9898125f34e593de426e8c7dabb0f224fc00f,java/org/apache/coyote/http11/Http11Processor.java,Add support for limiting the size of chunk extensions when using chunked encoding,https://github.com/apache/tomcat/commit/d6a9898125f34e593de426e8c7dabb0f224fc00f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-9-11,90,2,4,125,15,Global,0.263931623931624,2316,8775,Mladen Turk
CVE-2013-4322,20,NA,DoS,2014-2-26,2017-12-15,4.3,None,Remote,Medim,Not required,None,None,Partial,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding without properly handling (1) a large total amount of chunked data or (2) whitespace characters in an HTTP header value within a trailer field, which allows remote attackers to cause a denial of service by streaming data. NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3544.",https://www.cvedetails.com/cve/CVE-2013-4322/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of service CVE-2013-4322
The fix for CVE-2012-3544 was not complete. It did not cover the following cases:
chunk extensions were not limited
whitespace after the : in a trailing header was not limited
This was fixed in revision 1556540.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revisions 1521864 and 1549523.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revisions 1521834 and 1549522.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-11-5,2014-2-25,2014-1-31,d6a9898125f34e593de426e8c7dabb0f224fc00f,java/org/apache/coyote/http11/Http11Protocol.java,Add support for limiting the size of chunk extensions when using chunked encoding,https://github.com/apache/tomcat/commit/d6a9898125f34e593de426e8c7dabb0f224fc00f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-9-11,90,1,2,125,15,Global,0.215534465534466,863,4004,Mladen Turk
CVE-2013-4322,20,NA,DoS,2014-2-26,2017-12-15,4.3,None,Remote,Medim,Not required,None,None,Partial,"Apache Tomcat before 6.0.39, 7.x before 7.0.50, and 8.x before 8.0.0-RC10 processes chunked transfer coding without properly handling (1) a large total amount of chunked data or (2) whitespace characters in an HTTP header value within a trailer field, which allows remote attackers to cause a denial of service by streaming data. NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3544.",https://www.cvedetails.com/cve/CVE-2013-4322/,20130612,"Yes. Fixed in Apache Tomcat 6.0.39, 7.0.50, 8.0.0-RC10: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of service CVE-2013-4322
The fix for CVE-2012-3544 was not complete. It did not cover the following cases:
chunk extensions were not limited
whitespace after the : in a trailing header was not limited
This was fixed in revision 1556540.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 6.0.0 to 6.0.37
This was fixed in revisions 1521864 and 1549523.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 7.0.0 to 7.0.47
This was fixed in revisions 1521834 and 1549522.
The first part of this issue was identified by the Apache Tomcat security team on 27 August 2013 and the second part by Saran Neti of TELUS Security Labs on 5 November 2013. It was made public on 25 February 2014.
Affects: 8.0.0-RC1 to 8.0.0-RC5",No,2013-11-5,2014-2-25,2014-1-31,d6a9898125f34e593de426e8c7dabb0f224fc00f,webapps/docs/config/http.xml,Add support for limiting the size of chunk extensions when using chunked encoding,https://github.com/apache/tomcat/commit/d6a9898125f34e593de426e8c7dabb0f224fc00f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-9-11,90,6,6,125,15,Global,0.546948356807512,1631,2982,Mark Emlyn David Thomas
CVE-2015-5174,22,NA,Directory Traversal Bypass,2016-2-24,2018-7-18,4,None,Remote,Low,Single system,Partial,None,None,"Directory traversal vulnerability in RequestUtil.java in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.65, and 8.x before 8.0.27 allows remote authenticated users to bypass intended SecurityManager restrictions and list a parent directory via a /.. (slash dot dot) in a pathname used by a web application in a getResource, getResourceAsStream, or getResourcePaths call, as demonstrated by the $CATALINA_BASE/webapps directory.",https://www.cvedetails.com/cve/CVE-2015-5174/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.65, 8.0.27:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Limited directory traversal CVE-2015-5174
This issue only affects users running untrusted web applications under a security manager.
When accessing resources via the ServletContext methods getResource() getResourceAsStream() and getResourcePaths() the paths should be limited to the current web application. The validation was not correct and paths of the form ""/.."" were not rejected. Note that paths starting with ""/../"" were correctly rejected. This bug allowed malicious web applications running under a security manager to obtain a directory listing for the directory in which the web application had been deployed. This should not be possible when running under a security manager. Typically, the directory listing that would be exposed would be for $CATALINA_BASE/webapps.
This was fixed in revision 1700900.
This issue was identified by the Tomcat security team on 12 August 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1696284 and 1700898.
This issue was identified by the Tomcat security team on 12 August 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.64
This was fixed in revisions 1696281 and 1700897.
This issue was identified by the Tomcat security team on 12 August 2015 and made public on 22 February 2016.
Affects: 8.0.0-RC1 to 8.0.26",No,2015-8-12,2016-2-22,2016-2-11,d847efab755c25f1e96c50fa0574d993bbba4ede,java/org/apache/tomcat/util/http/RequestUtil.java,"Fix Javadoc
Separate test cases into separate test methods and add some additional tests.
Clean up the code and fix a couple of edge cases",https://github.com/apache/tomcat/commit/d847efab755c25f1e96c50fa0574d993bbba4ede,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-8-17,16,29,45,94,21,Global,0.131578947368421,45,342,Mark Emlyn David Thomas
CVE-2015-5174,22,NA,Directory Traversal Bypass,2016-2-24,2018-7-18,4,None,Remote,Low,Single system,Partial,None,None,"Directory traversal vulnerability in RequestUtil.java in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.65, and 8.x before 8.0.27 allows remote authenticated users to bypass intended SecurityManager restrictions and list a parent directory via a /.. (slash dot dot) in a pathname used by a web application in a getResource, getResourceAsStream, or getResourcePaths call, as demonstrated by the $CATALINA_BASE/webapps directory.",https://www.cvedetails.com/cve/CVE-2015-5174/,20150701,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.65, 8.0.27:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Limited directory traversal CVE-2015-5174
This issue only affects users running untrusted web applications under a security manager.
When accessing resources via the ServletContext methods getResource() getResourceAsStream() and getResourcePaths() the paths should be limited to the current web application. The validation was not correct and paths of the form ""/.."" were not rejected. Note that paths starting with ""/../"" were correctly rejected. This bug allowed malicious web applications running under a security manager to obtain a directory listing for the directory in which the web application had been deployed. This should not be possible when running under a security manager. Typically, the directory listing that would be exposed would be for $CATALINA_BASE/webapps.
This was fixed in revision 1700900.
This issue was identified by the Tomcat security team on 12 August 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1696284 and 1700898.
This issue was identified by the Tomcat security team on 12 August 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.64
This was fixed in revisions 1696281 and 1700897.
This issue was identified by the Tomcat security team on 12 August 2015 and made public on 22 February 2016.
Affects: 8.0.0-RC1 to 8.0.26",No,2015-8-12,2016-2-22,2016-2-11,d847efab755c25f1e96c50fa0574d993bbba4ede,test/org/apache/tomcat/util/http/TestRequestUtil.java,"Fix Javadoc
Separate test cases into separate test methods and add some additional tests.
Clean up the code and fix a couple of edge cases",https://github.com/apache/tomcat/commit/d847efab755c25f1e96c50fa0574d993bbba4ede,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-8-17,16,65,70,94,21,Global,0.414201183431953,70,169,Mark Emlyn David Thomas
CVE-2016-6797,284,NA,,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,Partial,None,None,"The ResourceLinkFactory implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.",https://www.cvedetails.com/cve/CVE-2016-6797/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Unrestricted Access to Global Resources CVE-2016-6797
The ResourceLinkFactory did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.
This was fixed in revision 1757285.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1757275.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1757272 for 8.5.x and revision 1757273 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1757271.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-1-18,2016-10-27,2016-10-16,d8cea9910422717c46f9a1e6e7313fe443dd04c0,java/org/apache/naming/factory/ResourceLinkFactory.java,"When retrieving an object via a ResourceLink, ensure that the object obtained is of the expected type.
This addresses a long standing FIXME",https://github.com/apache/tomcat/commit/d8cea9910422717c46f9a1e6e7313fe443dd04c0,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-7-29,25,16,37,20,21,Global,0.09181141439206,37,403,Mladen Turk
CVE-2016-6797,284,NA,,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,Partial,None,None,"The ResourceLinkFactory implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.",https://www.cvedetails.com/cve/CVE-2016-6797/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Unrestricted Access to Global Resources CVE-2016-6797
The ResourceLinkFactory did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.
This was fixed in revision 1757285.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revision 1757275.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revision 1757272 for 8.5.x and revision 1757273 for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revision 1757271.
This issue was identified by the Apache Tomcat Security Team on 18 January 2016 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2016-1-18,2016-10-27,2016-10-16,d8cea9910422717c46f9a1e6e7313fe443dd04c0,webapps/docs/changelog.xml,"When retrieving an object via a ResourceLink, ensure that the object obtained is of the expected type.
This addresses a long standing FIXME",https://github.com/apache/tomcat/commit/d8cea9910422717c46f9a1e6e7313fe443dd04c0,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-7-29,25,4,4,20,21,Global,0.052058777306302,1325,25452,Mark Emlyn David Thomas
CVE-2007-1358,79,NA,XSS,2007-5-9,2017-10-10,2.6,None,Remote,High,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in certain applications using Apache Tomcat 4.0.0 through 4.0.6 and 4.1.0 through 4.1.34 allows remote attackers to inject arbitrary web script or HTML via crafted ""Accept-Language headers that do not conform to RFC 2616"".",https://www.cvedetails.com/cve/CVE-2007-1358/,20070308,"Yes. Fixed in Apache Tomcat 4.1.36:
http://tomcat.apache.org/security-4.html","Web pages that display the Accept-Language header value sent by the client are susceptible to a cross-site scripting attack if they assume the Accept-Language header value conforms to RFC 2616. Under normal circumstances this would not be possible to exploit, however older versions of Flash player were known to allow carefully crafted malicious Flash files to make requests with such custom headers. When generating the response for getLocale() and getLocales(), Tomcat now ignores values for Accept-Language headers that do not conform to RFC 2616. Applications that use the raw header values directly should not assume that the headers conform to RFC 2616 and should filter the values appropriately.",No,,,,dcb902b2b17d34a8ba8d77cedad47d5937fbff99,java/org/apache/catalina/connector/Request.java,"- Based on Mark's patch. Ensure accept-language header conforms to RFC 2616 when accessed through getLocale and friends, and ignore it if it doesn't.",https://github.com/apache/tomcat/commit/dcb902b2b17d34a8ba8d77cedad47d5937fbff99,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-12-8,1,14,14,14,0,Local,0.33910347500323,2625,7741,Mladen Turk
CVE-2011-1475,20,NA,,2011-4-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP BIO connector in Apache Tomcat 7.0.x before 7.0.12 does not properly handle HTTP pipelining, which allows remote attackers to read responses intended for other clients in opportunistic circumstances by examining the application data in HTTP packets, related to ""a mix-up of responses for requests from different users.""",https://www.cvedetails.com/cve/CVE-2011-1475/,20110321,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-1475
Changes introduced to the HTTP BIO connector to support Servlet 3.0 asynchronous requests did not fully account for HTTP pipelining. As a result, when using HTTP pipelining a range of unexpected behaviours occurred including the mixing up of responses between requests. While the mix-up in responses was only observed between requests from the same user, a mix-up of responses for requests from different users may also be possible.
This was fixed in revisions 1086349 and 1086352. (Note: HTTP pipelined requests are still likely to fail with the HTTP BIO connector but will do so in a secure manner.)
This was reported publicly on the Tomcat Bugzilla issue tracker on 22 Mar 2011.
Affects: 7.0.0-7.0.11",No,2011-3-22,2011-3-22,2011-4-6,de8402d9fa8f1cc63d0c5fab65f1261bacbb30dc,java/org/apache/coyote/http11/Http11Processor.java,"Always recycle unless it is an async request.
Possible contributing factor to https://issues.apache.org/bugzilla/show_bug.cgi?id=50957 ?",https://github.com/apache/tomcat/commit/de8402d9fa8f1cc63d0c5fab65f1261bacbb30dc,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-28,1,1,2,1,1,Local,0.122632511241314,900,7339,Mladen Turk
CVE-2017-5648,284,NA,,2017-4-17,2018-6-15,6.4,None,Remote,Low,Not required,Partial,Partial,None,"While investigating bug 60718, it was noticed that some calls to application listeners in Apache Tomcat 9.0.0.M1 to 9.0.0.M17, 8.5.0 to 8.5.11, 8.0.0.RC1 to 8.0.41, and 7.0.0 to 7.0.75 did not use the appropriate facade object. When running an untrusted application under a SecurityManager, it was therefore possible for that untrusted application to retain a reference to the request or response object and thereby access and/or modify information associated with another web application.",https://www.cvedetails.com/cve/CVE-2017-5648/,20170129,"Yes. Fixed in Apache Tomcat, 8.0.42, 8.5.12, 9.0.0.M18:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Information Disclosure CVE-2017-5648
While investigating bug 60718, it was noticed that some calls to application listeners did not use the appropriate facade object. When running an untrusted application under a SecurityManager, it was therefore possible for that untrusted application to retain a reference to the request or response object and thereby access and/or modify information associated with another web application.
This was fixed in revision 1785776.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.0.0.RC1 to 8.0.41
This was fixed in revision 1785775.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.11
This was fixed in revision 1785774.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M17",No,2017-3-20,2017-4-10,2017-3-14,dfa40863421d7681fed893b4256666491887e38c,java/org/apache/catalina/authenticator/FormAuthenticator.java,Ensure request and response facades are used when firing application listeners.,https://github.com/apache/tomcat/commit/dfa40863421d7681fed893b4256666491887e38c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-6,1,5,11,12,9,Global,0.065690376569038,157,2390,Mladen Turk
CVE-2017-5648,284,NA,,2017-4-17,2018-6-15,6.4,None,Remote,Low,Not required,Partial,Partial,None,"While investigating bug 60718, it was noticed that some calls to application listeners in Apache Tomcat 9.0.0.M1 to 9.0.0.M17, 8.5.0 to 8.5.11, 8.0.0.RC1 to 8.0.41, and 7.0.0 to 7.0.75 did not use the appropriate facade object. When running an untrusted application under a SecurityManager, it was therefore possible for that untrusted application to retain a reference to the request or response object and thereby access and/or modify information associated with another web application.",https://www.cvedetails.com/cve/CVE-2017-5648/,20170129,"Yes. Fixed in Apache Tomcat, 8.0.42, 8.5.12, 9.0.0.M18:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Information Disclosure CVE-2017-5648
While investigating bug 60718, it was noticed that some calls to application listeners did not use the appropriate facade object. When running an untrusted application under a SecurityManager, it was therefore possible for that untrusted application to retain a reference to the request or response object and thereby access and/or modify information associated with another web application.
This was fixed in revision 1785776.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.0.0.RC1 to 8.0.41
This was fixed in revision 1785775.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.11
This was fixed in revision 1785774.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M17",No,2017-3-20,2017-4-10,2017-3-14,dfa40863421d7681fed893b4256666491887e38c,java/org/apache/catalina/core/AsyncContextImpl.java,Ensure request and response facades are used when firing application listeners.,https://github.com/apache/tomcat/commit/dfa40863421d7681fed893b4256666491887e38c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-6,1,1,2,12,9,Global,0.092790387182911,278,2996,Mark Emlyn David Thomas
CVE-2017-5648,284,NA,,2017-4-17,2018-6-15,6.4,None,Remote,Low,Not required,Partial,Partial,None,"While investigating bug 60718, it was noticed that some calls to application listeners in Apache Tomcat 9.0.0.M1 to 9.0.0.M17, 8.5.0 to 8.5.11, 8.0.0.RC1 to 8.0.41, and 7.0.0 to 7.0.75 did not use the appropriate facade object. When running an untrusted application under a SecurityManager, it was therefore possible for that untrusted application to retain a reference to the request or response object and thereby access and/or modify information associated with another web application.",https://www.cvedetails.com/cve/CVE-2017-5648/,20170129,"Yes. Fixed in Apache Tomcat, 8.0.42, 8.5.12, 9.0.0.M18:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Information Disclosure CVE-2017-5648
While investigating bug 60718, it was noticed that some calls to application listeners did not use the appropriate facade object. When running an untrusted application under a SecurityManager, it was therefore possible for that untrusted application to retain a reference to the request or response object and thereby access and/or modify information associated with another web application.
This was fixed in revision 1785776.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.0.0.RC1 to 8.0.41
This was fixed in revision 1785775.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.11
This was fixed in revision 1785774.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M17",No,2017-3-20,2017-4-10,2017-3-14,dfa40863421d7681fed893b4256666491887e38c,java/org/apache/catalina/core/StandardHostValve.java,Ensure request and response facades are used when firing application listeners.,https://github.com/apache/tomcat/commit/dfa40863421d7681fed893b4256666491887e38c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-6,1,2,4,12,9,Global,0.03157093952073,83,2629,Mark Emlyn David Thomas
CVE-2017-5648,284,NA,,2017-4-17,2018-6-15,6.4,None,Remote,Low,Not required,Partial,Partial,None,"While investigating bug 60718, it was noticed that some calls to application listeners in Apache Tomcat 9.0.0.M1 to 9.0.0.M17, 8.5.0 to 8.5.11, 8.0.0.RC1 to 8.0.41, and 7.0.0 to 7.0.75 did not use the appropriate facade object. When running an untrusted application under a SecurityManager, it was therefore possible for that untrusted application to retain a reference to the request or response object and thereby access and/or modify information associated with another web application.",https://www.cvedetails.com/cve/CVE-2017-5648/,20170129,"Yes. Fixed in Apache Tomcat, 8.0.42, 8.5.12, 9.0.0.M18:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Information Disclosure CVE-2017-5648
While investigating bug 60718, it was noticed that some calls to application listeners did not use the appropriate facade object. When running an untrusted application under a SecurityManager, it was therefore possible for that untrusted application to retain a reference to the request or response object and thereby access and/or modify information associated with another web application.
This was fixed in revision 1785776.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.0.0.RC1 to 8.0.41
This was fixed in revision 1785775.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.11
This was fixed in revision 1785774.
This issue was identified by the Apache Tomcat Security Team on 20 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M17",No,2017-3-20,2017-4-10,2017-3-14,dfa40863421d7681fed893b4256666491887e38c,webapps/docs/changelog.xml,Ensure request and response facades are used when firing application listeners.,https://github.com/apache/tomcat/commit/dfa40863421d7681fed893b4256666491887e38c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-6,1,4,4,12,9,Global,0.091986268502455,2492,27091,Mark Emlyn David Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,e002e528391127b01cd6cc65deaa562fcd0655a6,java/org/apache/catalina/webresources/AbstractFileResourceSet.java,"Clean-up - no functional change
 - fix indentation
 - add { } to improve clarity",https://github.com/apache/tomcat/commit/e002e528391127b01cd6cc65deaa562fcd0655a6,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-21,7,7,11,7,4,Local,0.197368421052632,45,228,Mark Emlyn David Thomas
CVE-2013-4444,94,NA,Exec Code,2014-9-11,2017-1-6,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"Unrestricted file upload vulnerability in Apache Tomcat 7.x before 7.0.40, in certain situations involving outdated java.io.File code and a custom JMX configuration, allows remote attackers to execute arbitrary code by uploading and accessing a JSP file.",https://www.cvedetails.com/cve/CVE-2013-4444/,20130612,"Yes. Fixed in Apache Tomcat 7.0.40:
http://tomcat.apache.org/security-7.html","Important: Remote Code Execution CVE-2013-4444
In very limited circumstances, it was possible for an attacker to upload a malicious JSP to a Tomcat server and then trigger the execution of that JSP. While Remote Code Execution would normally be viewed as a critical vulnerability, the circumstances under which this is possible are, in the view of the Tomcat security team, sufficiently limited that this vulnerability is viewed as important.
For this attack to succeed all of the following requirements must be met:
Using Oracle Java 1.7.0 update 25 or earlier (or any other Java implementation where java.io.File is vulnerable to null byte injection).
A web application must be deployed to a vulnerable version of Tomcat.
The web application must use the Servlet 3.0 File Upload feature.
A file location within a deployed web application must be writeable by the user the Tomcat process is running as. The Tomcat security documentation recommends against this.
A custom listener for JMX connections (e.g. the JmxRemoteListener that is not enabled by default) must be configured and be able to load classes from Tomcat's common class loader (i.e. the custom JMX listener must be placed in Tomcat's lib directory).
The custom JMX listener must be bound to an address other than localhost for a remote attack (it is bound to localhost by default). If the custom JMX listener is bound to localhost, a local attack will still be possible.
Note that requirements 2 and 3 may be replaced with the following requirement:
A web application is deployed that uses Apache Commons File Upload 1.2.1 or earlier.
In this case (requirements 1, 4, 5, 6 and 7 met) a similar vulnerability may exist on any Servlet container, not just Apache Tomcat.
This was fixed in revision 1470437.
This issue was identified by Pierre Ernst of the VMware Security Engineering, Communications and Response group (vSECR) and reported to the Tomcat security team via the Pivotal security team on 5 September 2014. It was made public on 10 September 2014.
Affects: 7.0.0 to 7.0.39",No,2014-9-5,2014-9-10,2013-5-9,e246e5fc13307da0a5d3bbf860d64d97be1c40f8,java/org/apache/tomcat/util/http/fileupload/disk/DiskFileItem.java,Clean-up: Remove unnecessary code.,https://github.com/apache/tomcat/commit/e246e5fc13307da0a5d3bbf860d64d97be1c40f8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-4-22,1,0,61,1,63,Global,0.539104024297646,710,1317,Mark Emlyn David Thomas
CVE-2013-4444,94,NA,Exec Code,2014-9-11,2017-1-6,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"Unrestricted file upload vulnerability in Apache Tomcat 7.x before 7.0.40, in certain situations involving outdated java.io.File code and a custom JMX configuration, allows remote attackers to execute arbitrary code by uploading and accessing a JSP file.",https://www.cvedetails.com/cve/CVE-2013-4444/,20130612,"Yes. Fixed in Apache Tomcat 7.0.40:
http://tomcat.apache.org/security-7.html","Important: Remote Code Execution CVE-2013-4444
In very limited circumstances, it was possible for an attacker to upload a malicious JSP to a Tomcat server and then trigger the execution of that JSP. While Remote Code Execution would normally be viewed as a critical vulnerability, the circumstances under which this is possible are, in the view of the Tomcat security team, sufficiently limited that this vulnerability is viewed as important.
For this attack to succeed all of the following requirements must be met:
Using Oracle Java 1.7.0 update 25 or earlier (or any other Java implementation where java.io.File is vulnerable to null byte injection).
A web application must be deployed to a vulnerable version of Tomcat.
The web application must use the Servlet 3.0 File Upload feature.
A file location within a deployed web application must be writeable by the user the Tomcat process is running as. The Tomcat security documentation recommends against this.
A custom listener for JMX connections (e.g. the JmxRemoteListener that is not enabled by default) must be configured and be able to load classes from Tomcat's common class loader (i.e. the custom JMX listener must be placed in Tomcat's lib directory).
The custom JMX listener must be bound to an address other than localhost for a remote attack (it is bound to localhost by default). If the custom JMX listener is bound to localhost, a local attack will still be possible.
Note that requirements 2 and 3 may be replaced with the following requirement:
A web application is deployed that uses Apache Commons File Upload 1.2.1 or earlier.
In this case (requirements 1, 4, 5, 6 and 7 met) a similar vulnerability may exist on any Servlet container, not just Apache Tomcat.
This was fixed in revision 1470437.
This issue was identified by Pierre Ernst of the VMware Security Engineering, Communications and Response group (vSECR) and reported to the Tomcat security team via the Pivotal security team on 5 September 2014. It was made public on 10 September 2014.
Affects: 7.0.0 to 7.0.39",No,2014-9-5,2014-9-10,2013-5-9,e246e5fc13307da0a5d3bbf860d64d97be1c40f8,java/org/apache/tomcat/util/http/fileupload/FileItem.java,Clean-up: Remove unnecessary code.,https://github.com/apache/tomcat/commit/e246e5fc13307da0a5d3bbf860d64d97be1c40f8,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2013-4-22,1,1,3,1,63,Global,0.274447949526814,87,317,Remy Maucherat
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,java/org/apache/coyote/http11/AbstractHttp11Processor.java,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,4,7,152,22,Global,0.784080076263108,3290,4196,Mark Emlyn David Thomas
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,java/org/apache/coyote/http11/AbstractHttp11Protocol.java,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,10,10,152,22,Global,0.7138304652645,1120,1569,Mark Emlyn David Thomas
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,java/org/apache/coyote/http11/filters/IdentityInputFilter.java,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,17,19,152,22,Global,0.150208623087622,108,719,Mladen Turk
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,java/org/apache/coyote/http11/filters/LocalStrings.properties,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,3,4,152,22,Global,1,29,29,Mark Emlyn David Thomas
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,java/org/apache/coyote/http11/Http11AprProcessor.java,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,2,4,152,22,Global,0.338278931750742,3078,9099,Mladen Turk
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,java/org/apache/coyote/http11/Http11AprProtocol.java,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,2,3,152,22,Global,0.312187312387432,1560,4997,Remy Maucherat
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,java/org/apache/coyote/http11/Http11Nio2Processor.java,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,2,4,152,22,Global,0.11509900990099,93,808,Remy Maucherat
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,java/org/apache/coyote/http11/Http11Nio2Protocol.java,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,2,3,152,22,Global,0.026143790849673,8,306,Remy Maucherat
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,java/org/apache/coyote/http11/Http11NioProcessor.java,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,2,4,152,22,Global,0.292505647775268,2978,10181,Mladen Turk
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,java/org/apache/coyote/http11/Http11NioProtocol.java,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,2,3,152,22,Global,0.251445705718569,1174,4669,Filip Hanik
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,java/org/apache/coyote/http11/Http11Processor.java,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,2,4,152,22,Global,0.265847056169637,2357,8866,Mladen Turk
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,java/org/apache/coyote/http11/Http11Protocol.java,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,2,3,152,22,Global,0.217098703888335,871,4012,Mladen Turk
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,test/org/apache/catalina/core/TestSwallowAbortedUploads.java,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,76,77,152,22,Global,0.210526315789474,112,532,Rainer Jung
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,webapps/docs/changelog.xml,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,4,4,152,22,Global,0.533925728080538,10395,19469,Mark Emlyn David Thomas
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e28dd578fad90a6d5726ec34f3245c9f99d909a5,webapps/docs/config/http.xml,"Add a new limit, defaulting to 2MB, for the amount of data Tomcat will swallow for an aborted upload.",https://github.com/apache/tomcat/commit/e28dd578fad90a6d5726ec34f3245c9f99d909a5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-6-19,239,10,10,152,22,Global,0.528012519561815,1687,3195,Mark Emlyn David Thomas
CVE-2007-1355,NA,NA,XSS,2007-5-21,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the appdev/sample/web/hello.jsp example application in Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.36, 5.0.0 through 5.0.30, 5.5.0 through 5.5.23, and 6.0.0 through 6.0.10 allow remote attackers to inject arbitrary web script or HTML via the test parameter and unspecified vectors.",https://www.cvedetails.com/cve/CVE-2007-1355/,20070308,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.24, 5.0.SVN, 6.0.11:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html
http://tomcat.apache.org/security-6.html",The JSP and Servlet included in the sample application within the Tomcat documentation webapp did not escape user provided data before including it in the output. This enabled a XSS attack. These pages have been simplified not to use any user provided data in the output.,No,,,Not released,e2b9163581f4e0fa1e29acd8f2a961a9d5e055a6,webapps/docs/changelog.xml,- Changelog update.,https://github.com/apache/tomcat/commit/e2b9163581f4e0fa1e29acd8f2a961a9d5e055a6,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2007-4-6,2,10,10,10,0,Local,0.50978119113172,3518,6901,Remy Maucherat
CVE-2007-1858,NA,NA,+Info,2007-5-9,2017-7-28,2.6,None,Remote,High,Not required,Partial,None,None,"The default SSL cipher configuration in Apache Tomcat 4.1.28 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.17 uses certain insecure ciphers, including the anonymous cipher, which allows remote attackers to obtain sensitive information or have other, unspecified impacts.",https://www.cvedetails.com/cve/CVE-2007-1858/,20070404,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.17, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The default SSL configuration permitted the use of insecure cipher suites including the anonymous cipher suite. The default configuration no longer permits the use of insecure cipher suites.,No,,,2006-4-27,e604ae1ae35a873050a8cc4ebe4f3b4d00630715,java/org/apache/tomcat/util/net/jsse/JSSESocketFactory.java,"Clean up the default algorithm handling, now that JSSE 1.0 is no longer supported.
At least now, you should be able to run SSL on a non-Sun JVM out of the box :).",https://github.com/apache/tomcat/commit/e604ae1ae35a873050a8cc4ebe4f3b4d00630715,William Barker,,,Apache,2006-4-24,4,2,9,2,7,Local,0.012534818941504,9,718,Remy Maucherat
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,e650cf1b83e441dbd3863f3f6b61c972cafce19e,java/org/apache/catalina/webresources/AbstractFileResourceSet.java,"Updates after kkolinko review
- Correct comment
- Use correct regular expression match (that makes regular expressions an even worse option)
- Improve (roughly x2) performance of invalid filename check",https://github.com/apache/tomcat/commit/e650cf1b83e441dbd3863f3f6b61c972cafce19e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-26,7,9,18,37,13,Global,0.519181585677749,203,391,Mark Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,e650cf1b83e441dbd3863f3f6b61c972cafce19e,test/org/apache/catalina/webresources/TestAbstractFileResourceSetPerformance.java,"Updates after kkolinko review
- Correct comment
- Use correct regular expression match (that makes regular expressions an even worse option)
- Improve (roughly x2) performance of invalid filename check",https://github.com/apache/tomcat/commit/e650cf1b83e441dbd3863f3f6b61c972cafce19e,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-26,7,28,32,37,13,Global,1,98,98,Mark Thomas
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,e685933f250f397d5349b1f2c2fec9083005a3ae,java/org/apache/coyote/http11/filters/IdentityInputFilter.java,Delay closing the connection until maxSwallowSize bytes have been read. This gives the client a chance to read the response. See http://httpd.apache.org/docs/2.0/misc/fin_wait_2.html#appendix,https://github.com/apache/tomcat/commit/e685933f250f397d5349b1f2c2fec9083005a3ae,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2015-2-12,239,11,18,11,7,Local,0.024226110363392,18,743,Mladen Turk
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,e69fbc0701e31ee5b70e693a47e21c329affa3e5,java/org/apache/catalina/webresources/AbstractFileResourceSet.java,"Remove condition that is always false, thanks to ""canPath.startsWith(canonicalBase)"" check a few lines earlier.",https://github.com/apache/tomcat/commit/e69fbc0701e31ee5b70e693a47e21c329affa3e5,Konstatin Kolinko,,,,2017-9-22,7,2,5,2,3,Local,0.014925373134328,5,335,Mark Emlyn David Thomas
CVE-2017-5650,399,NA,,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,None,None,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.",https://www.cvedetails.com/cve/CVE-2017-5650/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2017-5650
The handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.
This was fixed in revision 1788480.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788460.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-11,2017-4-10,2017-3-30,e7913b8f0ab34a173a08bfec839f9abc031fca5f,java/org/apache/coyote/http2/Http2UpgradeHandler.java,"Streams can't depend on themselves.
Found with the h2spec tool written by Moto Ishizawa.",https://github.com/apache/tomcat/commit/e7913b8f0ab34a173a08bfec839f9abc031fca5f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-25,4,4,4,5,0,Global,0.954809038192362,4775,5001,Mark Thomas
CVE-2017-5650,399,NA,,2017-4-17,2018-6-15,5,None,Remote,Low,Not required,None,None,Partial,"In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.",https://www.cvedetails.com/cve/CVE-2017-5650/,20170129,"Yes. Fixed in Apache Tomcat, 8.5.13, 9.0.0.M19:
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Denial of Service CVE-2017-5650
The handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.
This was fixed in revision 1788480.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 8.5.0 to 8.5.12
This was fixed in revision 1788460.
This issue was reported to the Apache Tomcat Security Team by Chun Han Hsiao on 11 March 2017 and made public on 10 April 2017.
Affects: 9.0.0.M1 to 9.0.0.M18",No,2017-3-11,2017-4-10,2017-3-30,e7913b8f0ab34a173a08bfec839f9abc031fca5f,java/org/apache/coyote/http2/LocalStrings.properties,"Streams can't depend on themselves.
Found with the h2spec tool written by Moto Ishizawa.",https://github.com/apache/tomcat/commit/e7913b8f0ab34a173a08bfec839f9abc031fca5f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-3-25,4,1,1,5,0,Global,0.907849829351536,266,293,Mark Thomas
CVE-2007-5333,200,NA,+Info,2008-2-11,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.0 through 6.0.14, 5.5.0 through 5.5.25, and 4.1.0 through 4.1.36 does not properly handle (1) double quote ("") characters or (2) %5C (encoded backslash) sequences in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks. NOTE: this issue exists because of an incomplete fix for CVE-2007-3385.",https://www.cvedetails.com/cve/CVE-2007-5333/,20071010,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The previous fix for CVE-2007-3385 was incomplete. It did not consider the use of quotes or %5C within a cookie value.,No,,,2008-2-8,ea2b04721e5259a116a99c2b1ac3ae54e53f76e1,java/org/apache/catalina/core/ApplicationContext.java,"Add STRICT compliance flag to impact cookie value handling to provide backwards compatibility
Add STRICT complanice flag to impact ServletContext.getResource(AsStream) to be backwards compatible",https://github.com/apache/tomcat/commit/ea2b04721e5259a116a99c2b1ac3ae54e53f76e1,Filip Hanik,,,,2008-2-14,117,10,13,30,5,Global,0.00838980316231,26,3099,Mladen Turk
CVE-2007-5333,200,NA,+Info,2008-2-11,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.0 through 6.0.14, 5.5.0 through 5.5.25, and 4.1.0 through 4.1.36 does not properly handle (1) double quote ("") characters or (2) %5C (encoded backslash) sequences in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks. NOTE: this issue exists because of an incomplete fix for CVE-2007-3385.",https://www.cvedetails.com/cve/CVE-2007-5333/,20071010,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The previous fix for CVE-2007-3385 was incomplete. It did not consider the use of quotes or %5C within a cookie value.,No,,,2008-2-8,ea2b04721e5259a116a99c2b1ac3ae54e53f76e1,java/org/apache/tomcat/util/http/ServerCookie.java,"Add STRICT compliance flag to impact cookie value handling to provide backwards compatibility
Add STRICT complanice flag to impact ServletContext.getResource(AsStream) to be backwards compatible",https://github.com/apache/tomcat/commit/ea2b04721e5259a116a99c2b1ac3ae54e53f76e1,Filip Hanik,,,,2008-2-14,117,10,12,30,5,Global,0.164841182913472,301,1826,Mladen Turk
CVE-2007-5333,200,NA,+Info,2008-2-11,2017-9-28,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 6.0.0 through 6.0.14, 5.5.0 through 5.5.25, and 4.1.0 through 4.1.36 does not properly handle (1) double quote ("") characters or (2) %5C (encoded backslash) sequences in a cookie value, which might cause sensitive information such as session IDs to be leaked to remote attackers and enable session hijacking attacks. NOTE: this issue exists because of an incomplete fix for CVE-2007-3385.",https://www.cvedetails.com/cve/CVE-2007-5333/,20071010,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.26, 6.0.16:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html",The previous fix for CVE-2007-3385 was incomplete. It did not consider the use of quotes or %5C within a cookie value.,No,,,2008-2-8,ea2b04721e5259a116a99c2b1ac3ae54e53f76e1,webapps/docs/config/systemprops.xml,"Add STRICT compliance flag to impact cookie value handling to provide backwards compatibility
Add STRICT complanice flag to impact ServletContext.getResource(AsStream) to be backwards compatible",https://github.com/apache/tomcat/commit/ea2b04721e5259a116a99c2b1ac3ae54e53f76e1,Filip Hanik,,,,2008-2-14,117,10,10,30,5,Global,0.032786885245902,10,305,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,ead55a4713f53beab63f95b419f5b82de77c72a4,java/org/apache/tomcat/util/buf/B2CConverter.java,Review comments from kkolinko for parameter parsing improvements,https://github.com/apache/tomcat/commit/ead55a4713f53beab63f95b419f5b82de77c72a4,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-29,561,9,10,95,28,Global,0.360177552314521,568,1577,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,ead55a4713f53beab63f95b419f5b82de77c72a4,java/org/apache/tomcat/util/buf/ByteChunk.java,Review comments from kkolinko for parameter parsing improvements,https://github.com/apache/tomcat/commit/ead55a4713f53beab63f95b419f5b82de77c72a4,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-29,561,1,2,95,28,Global,0.317254685777288,1151,3628,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,ead55a4713f53beab63f95b419f5b82de77c72a4,java/org/apache/tomcat/util/http/Parameters.java,Review comments from kkolinko for parameter parsing improvements,https://github.com/apache/tomcat/commit/ead55a4713f53beab63f95b419f5b82de77c72a4,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-29,561,16,35,95,28,Global,0.478345363686841,1723,3602,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,ead55a4713f53beab63f95b419f5b82de77c72a4,test/org/apache/tomcat/util/http/TestParameters.java,Review comments from kkolinko for parameter parsing improvements,https://github.com/apache/tomcat/commit/ead55a4713f53beab63f95b419f5b82de77c72a4,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-10-29,561,69,76,95,28,Global,1,589,589,Mark Emlyn David Thomas
CVE-2014-0119,264,NA,,2014-5-31,2017-11-8,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat before 6.0.40, 7.x before 7.0.54, and 8.x before 8.0.6 does not properly constrain the class loader that accesses the XML parser used with an XSLT stylesheet, which allows remote attackers to (1) read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, or (2) read files associated with different web applications on a single Tomcat instance via a crafted web application.",https://www.cvedetails.com/cve/CVE-2014-0119/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.54, 8.0.8:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Information Disclosure CVE-2014-0119
In limited circumstances it was possible for a malicious web application to replace the XML parsers used by Tomcat to process XSLTs for the default servlet, JSP documents, tag library descriptors (TLDs) and tag plugin configuration files. The injected XML parser(s) could then bypass the limits imposed on XML external entities and/or have visibility of the XML files processed for other web applications deployed on the same Tomcat instance.
This was fixed in revisions 1589640, 1593815 and 1593821.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revisions 1588199, 1589997, 1590028 and 1590036.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.53
This was fixed in revisions 1588193, 1589837, 1589980, 1589983, 1589985, 1589990 and 1589992.
This issue was identified by the Tomcat security team on 12 April 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.5",No,2014-4-12,2014-5-27,2014-5-23,ebe5c16f18ce1559e8462a94b3876a98525980d2,java/org/apache/jasper/compiler/TagPluginManager.java,Parser uses lazy init so move creation of parser inside the block that uses the container class loader.,https://github.com/apache/tomcat/commit/ebe5c16f18ce1559e8462a94b3876a98525980d2,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-4-25,9,7,17,7,10,Local,0.389891696750903,540,1385,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,ece65c1a428094b1c6c17de3d7593f64e1bb1286,java/org/apache/catalina/authenticator/AuthenticatorBase.java,"CVE-2011-1088
@ServletSecurity
Servlets added via addServlet() should not be processed unless created via craeteServlet. Need to delay scanning until urlPatterns are known",https://github.com/apache/tomcat/commit/ece65c1a428094b1c6c17de3d7593f64e1bb1286,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-4,7,1,4,139,15,Global,0.164533250078052,527,3203,Mladen Turk
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,ece65c1a428094b1c6c17de3d7593f64e1bb1286,java/org/apache/catalina/core/StandardContext.java,"CVE-2011-1088
@ServletSecurity
Servlets added via addServlet() should not be processed unless created via craeteServlet. Need to delay scanning until urlPatterns are known",https://github.com/apache/tomcat/commit/ece65c1a428094b1c6c17de3d7593f64e1bb1286,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-4,7,14,15,139,15,Global,0.155659707427922,3288,21123,Mladen Turk
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,ece65c1a428094b1c6c17de3d7593f64e1bb1286,java/org/apache/catalina/core/StandardWrapper.java,"CVE-2011-1088
@ServletSecurity
Servlets added via addServlet() should not be processed unless created via craeteServlet. Need to delay scanning until urlPatterns are known",https://github.com/apache/tomcat/commit/ece65c1a428094b1c6c17de3d7593f64e1bb1286,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-4,7,42,53,139,15,Global,0.142936441854011,1030,7206,Mladen Turk
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,ece65c1a428094b1c6c17de3d7593f64e1bb1286,java/org/apache/catalina/Wrapper.java,"CVE-2011-1088
@ServletSecurity
Servlets added via addServlet() should not be processed unless created via craeteServlet. Need to delay scanning until urlPatterns are known",https://github.com/apache/tomcat/commit/ece65c1a428094b1c6c17de3d7593f64e1bb1286,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-4,7,15,15,139,15,Global,0.100090171325518,111,1109,Mladen Turk
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,ece65c1a428094b1c6c17de3d7593f64e1bb1286,test/org/apache/catalina/core/TestStandardWrapper.java,"CVE-2011-1088
@ServletSecurity
Servlets added via addServlet() should not be processed unless created via craeteServlet. Need to delay scanning until urlPatterns are known",https://github.com/apache/tomcat/commit/ece65c1a428094b1c6c17de3d7593f64e1bb1286,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-4,7,67,67,139,15,Global,1,379,379,Mark Emlyn David Thomas
CVE-2014-0050,264,NA,DoS Bypass,2014-4-1,2017-12-15,7.5,None,Remote,Low,Not required,Partial,Partial,Partial,"MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.",https://www.cvedetails.com/cve/CVE-2014-0050/,20131203,"Yes. Fixed in Apache Tomcat 7.0.52, 8.0.3:
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of Service CVE-2014-0050
It was possible to craft a malformed Content-Type header for a multipart request that caused Apache Tomcat to enter an infinite loop. A malicious user could, therefore, craft a malformed request that triggered a denial of service.
The root cause of this error was a bug in Apache Commons FileUpload. Tomcat 7 uses a packaged renamed copy of Apache Commons FileUpload to implement the requirement of the Servlet 3.0 specification to support the processing of mime-multipart requests. Tomcat 7 was therefore affected by this issue.
This was fixed in revision 1565169.
This issue was reported to the Apache Software Foundation on 04 Feb 2014 and accidently made public on 06 Feb 2014.
Affects: 7.0.0-7.0.50
This was fixed in revision 1565163.
This issue was reported to the Apache Software Foundation on 04 Feb 2014 and accidently made public on 06 Feb 2014.
Affects: 8.0.0-RC1 to 8.0.1",No,2014-2-4,2014-2-6,2014-2-17,edc0704eee9be132bfef8a347633ef9777eb50f7,java/org/apache/catalina/manager/HTMLManagerServlet.java,"Followup to r1565163
Catch exceptions thrown by getParts() and report them as other upload errors (in the message box on the HTML page).
Without this an uncaught exception resulted in Error 500.
I am removing warPart cleanup code, because Tomcat already does such cleanup when Request is recycled (Tomcat code deletes all parts in a request, and part.delete() could throw an IOException).",https://github.com/apache/tomcat/commit/edc0704eee9be132bfef8a347633ef9777eb50f7,Konstatin Kolinko,,,,2014-2-6,1,6,18,6,12,Local,0.01152,36,3125,Mark Emlyn David Thomas
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/cal/cal1.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,94,94,9846,0,Global,1,94,94,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/cal/cal2.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,44,44,9846,0,Global,1,44,44,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/cal/calendar.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,42,42,9846,0,Global,1,42,42,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/cal/login.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,46,46,9846,0,Global,1,46,46,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/chat/chat.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,32,32,9846,0,Global,1,32,32,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/chat/login.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,30,30,9846,0,Global,1,30,30,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/chat/post.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,35,35,9846,0,Global,1,35,35,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/checkbox/check.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,37,37,9846,0,Global,1,37,37,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/checkbox/checkresult.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,63,63,9846,0,Global,1,63,63,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/checkbox/CheckTest.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,55,55,9846,0,Global,1,55,55,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/checkbox/cresult.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,33,33,9846,0,Global,1,33,33,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/colors/clr.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,33,33,9846,0,Global,1,33,33,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/colors/ColorGameBean.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,115,115,9846,0,Global,1,115,115,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/colors/colors.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,46,46,9846,0,Global,1,46,46,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/colors/colrs.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,69,69,9846,0,Global,1,69,69,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/error/er.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,30,30,9846,0,Global,1,30,30,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/error/err.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,43,43,9846,0,Global,1,43,43,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/error/error.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,36,36,9846,0,Global,1,36,36,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/error/errorpge.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,24,24,9846,0,Global,1,24,24,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/forward/forward.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,22,22,9846,0,Global,1,22,22,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/forward/fwd.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,18,18,9846,0,Global,1,18,18,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/forward/one.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,11,11,9846,0,Global,1,11,11,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/forward/two.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,11,11,9846,0,Global,1,11,11,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/images/code.gif,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,NA,Bin,9846,0,Global,NA,0,0,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/images/execute.gif,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,NA,Bin,9846,0,Global,NA,0,0,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/images/read.gif,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,NA,Bin,9846,0,Global,NA,0,0,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/images/return.gif,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,NA,Bin,9846,0,Global,NA,0,0,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/include/foo.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,16,16,9846,0,Global,1,16,16,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/include/foo.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,20,20,9846,0,Global,1,20,20,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/include/inc.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,29,29,9846,0,Global,1,29,29,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/include/include.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,34,34,9846,0,Global,1,34,34,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/index.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,373,373,9846,0,Global,1,373,373,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/el/basic-arithmetic.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,29,29,9846,0,Global,1,29,29,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/el/basic-arithmetic.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,87,87,9846,0,Global,1,87,87,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/el/basic-comparisons.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,29,29,9846,0,Global,1,29,29,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/el/basic-comparisons.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,115,115,9846,0,Global,1,115,115,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/el/functions.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,31,31,9846,0,Global,1,31,31,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/el/functions.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,65,65,9846,0,Global,1,65,65,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/el/implicit-objects.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,19,19,9846,0,Global,1,19,19,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/el/implicit-objects.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,88,88,9846,0,Global,1,88,88,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/jspattribute/jspattribute.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,36,36,9846,0,Global,1,36,36,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/jspattribute/jspattribute.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,45,45,9846,0,Global,1,45,45,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/jspattribute/shuffle.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,36,36,9846,0,Global,1,36,36,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/jspattribute/shuffle.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,89,89,9846,0,Global,1,89,89,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/jspx/basic.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,30,30,9846,0,Global,1,30,30,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/jspx/basic.jspx,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,30,30,9846,0,Global,1,30,30,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/jspx/svgexample.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,51,51,9846,0,Global,1,51,51,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/jspx/textRotate.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,31,31,9846,0,Global,1,31,31,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/jspx/textRotate.jpg,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,NA,Bin,9846,0,Global,NA,0,0,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/jspx/textRotate.jspx,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,36,36,9846,0,Global,1,36,36,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/misc/coda.jspf,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,5,5,9846,0,Global,1,5,5,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/misc/config.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,34,34,9846,0,Global,1,34,34,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/misc/config.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,31,31,9846,0,Global,1,31,31,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/misc/dynamicattrs.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,32,32,9846,0,Global,1,32,32,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/misc/dynamicattrs.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,43,43,9846,0,Global,1,43,43,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/misc/prelude.jspf,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,5,5,9846,0,Global,1,5,5,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/simpletag/book.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,36,36,9846,0,Global,1,36,36,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/simpletag/book.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,54,54,9846,0,Global,1,54,54,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/simpletag/hello.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,32,32,9846,0,Global,1,32,32,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/simpletag/hello.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,30,30,9846,0,Global,1,30,30,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/simpletag/repeat.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,32,32,9846,0,Global,1,32,32,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/simpletag/repeat.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,38,38,9846,0,Global,1,38,38,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/tagfiles/hello.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,32,32,9846,0,Global,1,32,32,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/tagfiles/hello.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,34,34,9846,0,Global,1,34,34,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/tagfiles/panel.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,32,32,9846,0,Global,1,32,32,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/tagfiles/panel.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,57,57,9846,0,Global,1,57,57,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/tagfiles/products.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,21,21,9846,0,Global,1,21,21,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsp2/tagfiles/products.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,53,53,9846,0,Global,1,53,53,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsptoserv/hello.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,25,25,9846,0,Global,1,25,25,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsptoserv/jsptoservlet.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,22,22,9846,0,Global,1,22,22,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/jsptoserv/jts.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,33,33,9846,0,Global,1,33,33,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/num/numguess.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,33,33,9846,0,Global,1,33,33,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/num/numguess.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,68,68,9846,0,Global,1,68,68,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/plugin/applet/Clock2.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,212,212,9846,0,Global,1,212,212,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/plugin/applet/Clock2.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,212,212,9846,0,Global,1,212,212,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/plugin/plugin.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,29,29,9846,0,Global,1,29,29,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/plugin/plugin.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,33,33,9846,0,Global,1,33,33,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/security/protected/error.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,24,24,9846,0,Global,1,24,24,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/security/protected/index.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,78,78,9846,0,Global,1,78,78,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/security/protected/login.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,37,37,9846,0,Global,1,37,37,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/sessions/carts.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,52,52,9846,0,Global,1,52,52,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/sessions/carts.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,43,43,9846,0,Global,1,43,43,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/sessions/crt.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,33,33,9846,0,Global,1,33,33,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/sessions/DummyCart.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,55,55,9846,0,Global,1,55,55,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/simpletag/foo.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,29,29,9846,0,Global,1,29,29,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/simpletag/foo.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,37,37,9846,0,Global,1,37,37,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/snp/snoop.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,30,30,9846,0,Global,1,30,30,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/snp/snoop.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,55,55,9846,0,Global,1,55,55,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/source.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,19,19,9846,0,Global,1,19,19,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/tagplugin/choose.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,35,35,9846,0,Global,1,35,35,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/tagplugin/choose.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,57,57,9846,0,Global,1,57,57,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/tagplugin/foreach.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,35,35,9846,0,Global,1,35,35,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/tagplugin/foreach.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,56,56,9846,0,Global,1,56,56,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/tagplugin/howto.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,42,42,9846,0,Global,1,42,42,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/tagplugin/if.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,35,35,9846,0,Global,1,35,35,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/tagplugin/if.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,44,44,9846,0,Global,1,44,44,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/tagplugin/notes.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,38,38,9846,0,Global,1,38,38,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/xml/xml.html,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,30,30,9846,0,Global,1,30,30,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/jsp/xml/xml.jsp,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,69,69,9846,0,Global,1,69,69,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/servlets/images/code.gif,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,NA,Bin,9846,0,Global,NA,0,0,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/servlets/images/execute.gif,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,NA,Bin,9846,0,Global,NA,0,0,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/servlets/images/return.gif,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,NA,Bin,9846,0,Global,NA,0,0,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/cal/Entries.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,72,72,9846,0,Global,1,72,72,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/cal/Entry.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,54,54,9846,0,Global,1,54,54,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/cal/JspCalendar.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,154,154,9846,0,Global,1,154,154,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/cal/TableBean.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,101,101,9846,0,Global,1,101,101,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/chat/ChatServlet.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,212,212,9846,0,Global,1,212,212,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/checkbox/CheckTest.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,30,30,9846,0,Global,1,30,30,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/colors/ColorGameBean.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,114,114,9846,0,Global,1,114,114,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilter.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,218,218,9846,0,Global,1,218,218,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilterTestServlet.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,57,57,9846,0,Global,1,57,57,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/compressionFilters/CompressionResponseStream.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,317,317,9846,0,Global,1,317,317,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/compressionFilters/CompressionServletResponseWrapper.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,276,276,9846,0,Global,1,276,276,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/CookieExample.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,121,121,9846,0,Global,1,121,121,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/dates/JspCalendar.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,152,152,9846,0,Global,1,152,152,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/error/Smart.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,34,34,9846,0,Global,1,34,34,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/examples/ExampleTagBase.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,66,66,9846,0,Global,1,66,66,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/examples/FooTag.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,82,82,9846,0,Global,1,82,82,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/examples/FooTagExtraInfo.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,32,32,9846,0,Global,1,32,32,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/examples/LogTag.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,60,60,9846,0,Global,1,60,60,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/examples/ShowSource.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,72,72,9846,0,Global,1,72,72,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/filters/ExampleFilter.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,139,139,9846,0,Global,1,139,139,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/filters/RequestDumperFilter.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,200,200,9846,0,Global,1,200,200,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/filters/SetCharacterEncodingFilter.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,171,171,9846,0,Global,1,171,171,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/HelloWorldExample.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,75,75,9846,0,Global,1,75,75,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/jsp2/examples/BookBean.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,43,43,9846,0,Global,1,43,43,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/jsp2/examples/el/Functions.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,44,44,9846,0,Global,1,44,44,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/jsp2/examples/FooBean.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,35,35,9846,0,Global,1,35,35,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/EchoAttributesTag.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,54,54,9846,0,Global,1,54,54,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/FindBookSimpleTag.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,44,44,9846,0,Global,1,44,44,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/HelloWorldSimpleTag.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,31,31,9846,0,Global,1,31,31,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/RepeatSimpleTag.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,42,42,9846,0,Global,1,42,42,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/ShuffleSimpleTag.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,81,81,9846,0,Global,1,81,81,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/TileSimpleTag.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,46,46,9846,0,Global,1,46,46,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/listeners/ContextListener.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,155,155,9846,0,Global,1,155,155,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/listeners/SessionListener.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,182,182,9846,0,Global,1,182,182,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/LocalStrings_en.properties,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,52,52,9846,0,Global,1,52,52,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/LocalStrings_es.properties,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,52,52,9846,0,Global,1,52,52,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/LocalStrings_fr.properties,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,52,52,9846,0,Global,1,52,52,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/LocalStrings_pt.properties,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,52,52,9846,0,Global,1,52,52,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/LocalStrings.properties,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,52,52,9846,0,Global,1,52,52,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/num/NumberGuessBean.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,78,78,9846,0,Global,1,78,78,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/RequestHeaderExample.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,90,90,9846,0,Global,1,90,90,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/RequestInfoExample.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,114,114,9846,0,Global,1,114,114,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/RequestParamExample.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,106,106,9846,0,Global,1,106,106,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/servletToJsp.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,32,32,9846,0,Global,1,32,32,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/SessionExample.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,140,140,9846,0,Global,1,140,140,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/sessions/DummyCart.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,69,69,9846,0,Global,1,69,69,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/util/HTMLFilter.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,68,68,9846,0,Global,1,68,68,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/classes/validators/DebugValidator.java,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,83,83,9846,0,Global,1,83,83,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/jsp2/jsp2-example-taglib.tld,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,123,123,9846,0,Global,1,123,123,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/lib/jstl.jar,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,NA,Bin,9846,0,Global,NA,0,0,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/lib/standard.jar,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,NA,Bin,9846,0,Global,NA,0,0,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/tags/displayProducts.tag,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,54,54,9846,0,Global,1,54,54,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/tags/helloWorld.tag,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,16,16,9846,0,Global,1,16,16,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/tags/panel.tag,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,28,28,9846,0,Global,1,28,28,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/tags/xhtmlbasic.tag,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,20,20,9846,0,Global,1,20,20,Remy Maucherat
CVE-2006-7196,79,NA,XSS,2007-5-9,2009-2-5,4.3,None,Remote,Medium,Not required,None,Partial,None,"Cross-site scripting (XSS) vulnerability in the calendar application example in Apache Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.31, 5.0.0 through 5.0.30, and 5.5.0 through 5.5.15 allows remote attackers to inject arbitrary web script or HTML via the time parameter to cal2.jsp and possibly unspecified other vectors. NOTE: this may be related to CVE-2006-0254.1.",https://www.cvedetails.com/cve/CVE-2006-7196/,20070422,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.16, 5.0.SVN:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html",The calendar application included as part of the JSP examples is susceptible to a cross-site scripting attack as it does not escape user provided data before including it in the returned page.,No,,,2006-3-15,f20cfff33f04e97c307398e93354ffb5a8d496a4,webapps/examples/WEB-INF/web.xml,"- Add examples webapp.
- New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.",https://github.com/apache/tomcat/commit/f20cfff33f04e97c307398e93354ffb5a8d496a4,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-5-29,1,306,306,9846,0,Global,1,306,306,Remy Maucherat
CVE-2006-3835,NA,NA,,2006-7-25,2017-7-19,5,None,Remote,Low,Not required,Partial,None,None,"Apache Tomcat 5 before 5.5.17 allows remote attackers to list directories via a semicolon (,) preceding a filename with a mapped extension, as demonstrated by URLs ending with /;index.jsp and /;help.do.",https://www.cvedetails.com/cve/CVE-2006-3835/,20060724,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.13, 5.0.SVN: http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html","This is expected behaviour when directory listings are enabled. The semicolon (;) is the separator for path parameters so inserting one before a file name changes the request into a request for a directory with a path parameter. If directory listings are enabled, a diretcory listing will be shown. In response to this and other directory listing issues, directory listings were changed to be disabled by default.",No,,,,f34f2f526ba73b1b23f832e64d47d9825d1a6770,java/org/apache/catalina/connector/CoyoteAdapter.java,"- Changes to session id parsing so that it is done (as well as "";"" path parameter stripping) before decoding, making it possible to %xx encode "";"" in the URL.
- This can probably be backported to 5.5.x.",https://github.com/apache/tomcat/commit/f34f2f526ba73b1b23f832e64d47d9825d1a6770,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2006-7-20,1,35,80,35,45,Local,0.375717439293598,851,2265,Mladen Turk
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,f4cb4b0faaafa941c00c62705aa6573009b6fcd9,webapps/docs/changelog.xml,This was only a partial fix.,https://github.com/apache/tomcat/commit/f4cb4b0faaafa941c00c62705aa6573009b6fcd9,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-9,7,2,3,2,1,Local,0.342383107088989,4086,11934,Mark Emlyn David Thomas
CVE-2007-1355,NA,NA,XSS,2007-5-21,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the appdev/sample/web/hello.jsp example application in Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.36, 5.0.0 through 5.0.30, 5.5.0 through 5.5.23, and 6.0.0 through 6.0.10 allow remote attackers to inject arbitrary web script or HTML via the test parameter and unspecified vectors.",https://www.cvedetails.com/cve/CVE-2007-1355/,20070308,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.24, 5.0.SVN, 6.0.11:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html
http://tomcat.apache.org/security-6.html",The JSP and Servlet included in the sample application within the Tomcat documentation webapp did not escape user provided data before including it in the output. This enabled a XSS attack. These pages have been simplified not to use any user provided data in the output.,No,,,Not released,f601846fffeca4cc6b7e07fd813b5648ef46d979,webapps/docs/appdev/build.xml.txt,"- Simplify the test hello webapp.
- Fix its build script.",https://github.com/apache/tomcat/commit/f601846fffeca4cc6b7e07fd813b5648ef46d979,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2007-4-5,2,57,120,61,101,Global,0.9968,623,625,Remy Maucherat
CVE-2007-1355,NA,NA,XSS,2007-5-21,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the appdev/sample/web/hello.jsp example application in Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.36, 5.0.0 through 5.0.30, 5.5.0 through 5.5.23, and 6.0.0 through 6.0.10 allow remote attackers to inject arbitrary web script or HTML via the test parameter and unspecified vectors.",https://www.cvedetails.com/cve/CVE-2007-1355/,20070308,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.24, 5.0.SVN, 6.0.11:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html
http://tomcat.apache.org/security-6.html",The JSP and Servlet included in the sample application within the Tomcat documentation webapp did not escape user provided data before including it in the output. This enabled a XSS attack. These pages have been simplified not to use any user provided data in the output.,No,,,Not released,f601846fffeca4cc6b7e07fd813b5648ef46d979,webapps/docs/appdev/sample/sample.war,"- Simplify the test hello webapp.
- Fix its build script.",https://github.com/apache/tomcat/commit/f601846fffeca4cc6b7e07fd813b5648ef46d979,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2007-4-5,2,NA,Bin,61,101,Global,NA,0,0,Remy Maucherat
CVE-2007-1355,NA,NA,XSS,2007-5-21,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the appdev/sample/web/hello.jsp example application in Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.36, 5.0.0 through 5.0.30, 5.5.0 through 5.5.23, and 6.0.0 through 6.0.10 allow remote attackers to inject arbitrary web script or HTML via the test parameter and unspecified vectors.",https://www.cvedetails.com/cve/CVE-2007-1355/,20070308,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.24, 5.0.SVN, 6.0.11:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html
http://tomcat.apache.org/security-6.html",The JSP and Servlet included in the sample application within the Tomcat documentation webapp did not escape user provided data before including it in the output. This enabled a XSS attack. These pages have been simplified not to use any user provided data in the output.,No,,,Not released,f601846fffeca4cc6b7e07fd813b5648ef46d979,webapps/docs/appdev/sample/src/mypackage/Hello.java,"- Simplify the test hello webapp.
- Fix its build script.",https://github.com/apache/tomcat/commit/f601846fffeca4cc6b7e07fd813b5648ef46d979,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2007-4-5,2,1,15,61,101,Global,0.909090909090909,110,121,Remy Maucherat
CVE-2007-1355,NA,NA,XSS,2007-5-21,2017-10-10,4.3,None,Remote,Medium,Not required,None,Partial,None,"Multiple cross-site scripting (XSS) vulnerabilities in the appdev/sample/web/hello.jsp example application in Tomcat 4.0.0 through 4.0.6, 4.1.0 through 4.1.36, 5.0.0 through 5.0.30, 5.5.0 through 5.5.23, and 6.0.0 through 6.0.10 allow remote attackers to inject arbitrary web script or HTML via the test parameter and unspecified vectors.",https://www.cvedetails.com/cve/CVE-2007-1355/,20070308,"Yes. Fixed in Apache Tomcat 4.1.37, 5.5.24, 5.0.SVN, 6.0.11:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html
http://tomcat.apache.org/security-6.html",The JSP and Servlet included in the sample application within the Tomcat documentation webapp did not escape user provided data before including it in the output. This enabled a XSS attack. These pages have been simplified not to use any user provided data in the output.,No,,,Not released,f601846fffeca4cc6b7e07fd813b5648ef46d979,webapps/docs/appdev/sample/web/hello.jsp,"- Simplify the test hello webapp.
- Fix its build script.",https://github.com/apache/tomcat/commit/f601846fffeca4cc6b7e07fd813b5648ef46d979,Rémy Maucherat,rmaucher,https://github.com/rmaucher,Apache,2007-4-5,2,3,27,61,101,Global,1,71,71,Remy Maucherat
CVE-2016-6796,254,NA,Bypass,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,None,Partial,None,"A malicious web application running on Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.",https://www.cvedetails.com/cve/CVE-2016-6796/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager Bypass CVE-2016-6796
A malicious web application was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.
This was fixed in revisions 1758496 and 1763237.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revisions 1758495 and 1763236.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revisions 1758493 and 1763233 for 8.5.x and revisions 1758494 and 1763234for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revisions 1758487 and 1763232.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2015-12-27,2016-10-27,2016-10-16,f603f2f4595073f9490e01699d2083112a7c09a7,conf/web.xml,Ignore some JSP options when running under a SecurityManager,https://github.com/apache/tomcat/commit/f603f2f4595073f9490e01699d2083112a7c09a7,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-31,36,4,4,22,4,Global,0.02752445697231,166,6031,Rainer Jung
CVE-2016-6796,254,NA,Bypass,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,None,Partial,None,"A malicious web application running on Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.",https://www.cvedetails.com/cve/CVE-2016-6796/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager Bypass CVE-2016-6796
A malicious web application was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.
This was fixed in revisions 1758496 and 1763237.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revisions 1758495 and 1763236.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revisions 1758493 and 1763233 for 8.5.x and revisions 1758494 and 1763234for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revisions 1758487 and 1763232.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2015-12-27,2016-10-27,2016-10-16,f603f2f4595073f9490e01699d2083112a7c09a7,java/org/apache/jasper/EmbeddedServletOptions.java,Ignore some JSP options when running under a SecurityManager,https://github.com/apache/tomcat/commit/f603f2f4595073f9490e01699d2083112a7c09a7,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-31,36,4,4,22,4,Global,0.03309243058197,87,2629,Mladen Turk
CVE-2016-6796,254,NA,Bypass,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,None,Partial,None,"A malicious web application running on Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.",https://www.cvedetails.com/cve/CVE-2016-6796/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager Bypass CVE-2016-6796
A malicious web application was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.
This was fixed in revisions 1758496 and 1763237.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revisions 1758495 and 1763236.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revisions 1758493 and 1763233 for 8.5.x and revisions 1758494 and 1763234for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revisions 1758487 and 1763232.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2015-12-27,2016-10-27,2016-10-16,f603f2f4595073f9490e01699d2083112a7c09a7,java/org/apache/jasper/servlet/JspServlet.java,Ignore some JSP options when running under a SecurityManager,https://github.com/apache/tomcat/commit/f603f2f4595073f9490e01699d2083112a7c09a7,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-31,36,7,9,22,4,Global,0.044075144508671,61,1384,Mladen Turk
CVE-2016-6796,254,NA,Bypass,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,None,Partial,None,"A malicious web application running on Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.",https://www.cvedetails.com/cve/CVE-2016-6796/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager Bypass CVE-2016-6796
A malicious web application was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.
This was fixed in revisions 1758496 and 1763237.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revisions 1758495 and 1763236.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revisions 1758493 and 1763233 for 8.5.x and revisions 1758494 and 1763234for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revisions 1758487 and 1763232.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2015-12-27,2016-10-27,2016-10-16,f603f2f4595073f9490e01699d2083112a7c09a7,webapps/docs/changelog.xml,Ignore some JSP options when running under a SecurityManager,https://github.com/apache/tomcat/commit/f603f2f4595073f9490e01699d2083112a7c09a7,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-31,36,4,4,22,4,Global,0.060717892937612,1563,25742,Mark Emlyn David Thomas
CVE-2016-6796,254,NA,Bypass,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,None,Partial,None,"A malicious web application running on Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.",https://www.cvedetails.com/cve/CVE-2016-6796/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager Bypass CVE-2016-6796
A malicious web application was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.
This was fixed in revisions 1758496 and 1763237.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revisions 1758495 and 1763236.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revisions 1758493 and 1763233 for 8.5.x and revisions 1758494 and 1763234for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revisions 1758487 and 1763232.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2015-12-27,2016-10-27,2016-10-16,f603f2f4595073f9490e01699d2083112a7c09a7,webapps/docs/jasper-howto.xml,Ignore some JSP options when running under a SecurityManager,https://github.com/apache/tomcat/commit/f603f2f4595073f9490e01699d2083112a7c09a7,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-8-31,36,2,4,22,4,Global,0.03287380699894,31,943,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,f626da75fd59da82b14dee7b8cc46ad51eefdbe5,java/org/apache/catalina/session/ManagerBase.java,"When using the new sessionAttributeValueClassNameFilter, apply the filter earlier rather than loading the class and then deciding to filter it out.
When a SecurityManager is used, enable filtering by default.",https://github.com/apache/tomcat/commit/f626da75fd59da82b14dee7b8cc46ad51eefdbe5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-21,6,15,16,146,15,Global,0.044688943221951,329,7362,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,f626da75fd59da82b14dee7b8cc46ad51eefdbe5,java/org/apache/catalina/session/StandardManager.java,"When using the new sessionAttributeValueClassNameFilter, apply the filter earlier rather than loading the class and then deciding to filter it out.
When a SecurityManager is used, enable filtering by default.",https://github.com/apache/tomcat/commit/f626da75fd59da82b14dee7b8cc46ad51eefdbe5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-21,6,6,8,146,15,Global,0.09219440353461,313,3395,Mladen Turk
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,f626da75fd59da82b14dee7b8cc46ad51eefdbe5,java/org/apache/catalina/session/StoreBase.java,"When using the new sessionAttributeValueClassNameFilter, apply the filter earlier rather than loading the class and then deciding to filter it out.
When a SecurityManager is used, enable filtering by default.",https://github.com/apache/tomcat/commit/f626da75fd59da82b14dee7b8cc46ad51eefdbe5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-21,6,14,15,146,15,Global,0.037070524412297,41,1106,Mladen Turk
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,f626da75fd59da82b14dee7b8cc46ad51eefdbe5,java/org/apache/catalina/util/CustomObjectInputStream.java,"When using the new sessionAttributeValueClassNameFilter, apply the filter earlier rather than loading the class and then deciding to filter it out.
When a SecurityManager is used, enable filtering by default.",https://github.com/apache/tomcat/commit/f626da75fd59da82b14dee7b8cc46ad51eefdbe5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-21,6,87,89,146,15,Global,0.232815964523282,105,451,Mladen Turk
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,f626da75fd59da82b14dee7b8cc46ad51eefdbe5,java/org/apache/catalina/util/LocalStrings.properties,"When using the new sessionAttributeValueClassNameFilter, apply the filter earlier rather than loading the class and then deciding to filter it out.
When a SecurityManager is used, enable filtering by default.",https://github.com/apache/tomcat/commit/f626da75fd59da82b14dee7b8cc46ad51eefdbe5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-21,6,2,2,146,15,Global,0.048543689320388,5,103,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,f626da75fd59da82b14dee7b8cc46ad51eefdbe5,webapps/docs/changelog.xml,"When using the new sessionAttributeValueClassNameFilter, apply the filter earlier rather than loading the class and then deciding to filter it out.
When a SecurityManager is used, enable filtering by default.",https://github.com/apache/tomcat/commit/f626da75fd59da82b14dee7b8cc46ad51eefdbe5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-21,6,2,3,146,15,Global,0.012505731793739,300,23989,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,f626da75fd59da82b14dee7b8cc46ad51eefdbe5,webapps/docs/config/cluster-manager.xml,"When using the new sessionAttributeValueClassNameFilter, apply the filter earlier rather than loading the class and then deciding to filter it out.
When a SecurityManager is used, enable filtering by default.",https://github.com/apache/tomcat/commit/f626da75fd59da82b14dee7b8cc46ad51eefdbe5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-21,6,10,14,146,15,Global,0.175757575757576,116,660,Mark Emlyn David Thomas
CVE-2016-0714,264,NA,Exec Code Bypass,2016-2-24,2018-7-18,6.5,None,Remote,Low,Single system,Partial,Partial,Partial,"The session-persistence implementation in Apache Tomcat 6.x before 6.0.45, 7.x before 7.0.68, 8.x before 8.0.31, and 9.x before 9.0.0.M2 mishandles session attributes, which allows remote authenticated users to bypass intended SecurityManager restrictions and execute arbitrary code in a privileged context via a web application that places a crafted object in a session.",https://www.cvedetails.com/cve/CVE-2016-0714/,20151216,"Yes. Fixed in Apache Tomcat 6.0.45, 7.0.68, 8.0.32, 9.0.0.M3:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Moderate: Security Manager bypass CVE-2016-0714
This issue only affects users running untrusted web applications under a security manager.
Tomcat provides several session persistence mechanisms. The StandardManager persists session over a restart. The PersistentManager is able to persist sessions to files, a database or a custom Store. The cluster implementation persists sessions to one or more additional nodes in the cluster. All of these mechanisms could be exploited to bypass a security manager. Session persistence is performed by Tomcat code with the permissions assigned to Tomcat internal code. By placing a carefully crafted object into a session, a malicious web application could trigger the execution of arbitrary code.
This was fixed in revisions 1727166 and 1727182.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 6.0.0 to 6.0.44
This was fixed in revisions 1726923 and 1727034.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 7.0.0 to 7.0.67
This was fixed in revisions 1726196 and 1726203.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 8.0.0.RC1 to 8.0.30
This was fixed in revisions 1725263 and 1725914.
This issue was identified by the Tomcat security team on 12 November 2015 and made public on 22 February 2016.
Affects: 9.0.0.M1",No,2015-11-12,2016-2-22,2016-2-16,f626da75fd59da82b14dee7b8cc46ad51eefdbe5,webapps/docs/config/manager.xml,"When using the new sessionAttributeValueClassNameFilter, apply the filter earlier rather than loading the class and then deciding to filter it out.
When a SecurityManager is used, enable filtering by default.",https://github.com/apache/tomcat/commit/f626da75fd59da82b14dee7b8cc46ad51eefdbe5,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-21,6,10,14,146,15,Global,0.138059701492537,148,1072,Remy Maucherat
CVE-2014-0075,189,NA,DoS Overflow,2014-5-31,2017-11-14,5,None,Remote,Low,Not required,None,None,Partial,"Integer overflow in the parseChunkHeader function in java/org/apache/coyote/http11/filters/ChunkedInputFilter.java in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 allows remote attackers to cause a denial of service (resource consumption) via a malformed chunk size in chunked transfer coding of a request during the streaming of data.",https://www.cvedetails.com/cve/CVE-2014-0075/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Denial of Service CVE-2014-0075
It was possible to craft a malformed chunk size as part of a chucked request that enabled an unlimited amount of data to be streamed to the server, bypassing the various size limits enforced on a request. This enabled a denial of service attack.
This was fixed in revision 1579262.
This issue was reported to the Tomcat security team by David Jorm of the Red Hat Security Response Team on 28 February 2014 and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revision 1578341.
This issue was reported to the Tomcat security team by David Jorm of the Red Hat Security Response Team on 28 February 2014 and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revision 1578337.
This issue was reported to the Tomcat security team by David Jorm of the Red Hat Security Response Team on 28 February 2014 and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-2-28,2014-5-27,2014-5-23,f646a5acd5e32d6f5a2d9bf1d94ca66b65477675,webapps/docs/changelog.xml,Improve processing of chuck size from chunked headers. Avoid overflow and use a bit shift instead of a multiplication as it is marginally faster.,https://github.com/apache/tomcat/commit/f646a5acd5e32d6f5a2d9bf1d94ca66b65477675,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-17,1,5,5,191,10,Global,0.530661278872932,9718,18313,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/ant/AbstractCatalinaTask.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,3,4,183,149,Global,0.060606060606061,56,924,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/authenticator/DigestAuthenticator.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,6,9,183,149,Global,0.301257517769273,551,1829,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/connector/CoyoteAdapter.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,14,32,183,149,Global,0.338340807174888,1509,4460,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/ha/backend/MultiCastSender.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,3,9,183,149,Global,0.217391304347826,25,115,Jean-Frederic Clere
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/loader/WebappClassLoader.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,3,4,183,149,Global,0.248222046621889,2513,10124,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/realm/JNDIRealm.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,5,8,183,149,Global,0.106472727272727,732,6875,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/realm/RealmBase.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,25,52,183,149,Global,0.134124271063744,667,4973,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/servlets/WebdavServlet.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,3,5,NA,NA,,0.091281503250512,1025,11229,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/tribes/membership/Constants.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,6,8,183,149,Global,0.802884615384615,167,208,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,9,20,183,149,Global,0.741994272324915,5700,7682,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/tribes/util/Arrays.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,4,16,183,149,Global,0.799152542372881,943,1180,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/util/RequestUtil.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,12,20,183,149,Global,0.158484525080043,297,1874,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/catalina/valves/SSLValve.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,3,4,183,149,Global,0.433035714285714,97,224,Jean-Frederic Clere
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/coyote/http11/filters/BufferedInputFilter.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,3,4,183,149,Global,0.093078758949881,39,419,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/coyote/http11/filters/IdentityInputFilter.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,3,4,183,149,Global,0.039308176100629,25,636,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/coyote/http11/filters/VoidInputFilter.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,3,4,183,149,Global,0.076726342710997,30,391,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/coyote/http11/InternalNioInputBuffer.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,5,6,183,149,Global,0.026530612244898,117,4410,Filip Hanik
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/jasper/compiler/PageDataImpl.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,3,11,183,149,Global,0.371613663133098,1262,3396,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/jasper/compiler/SmapUtil.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,3,4,183,149,Global,0.051082251082251,118,2310,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/naming/resources/ProxyDirContext.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,4,7,183,149,Global,0.077475434618292,410,5292,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/tomcat/util/buf/B2CConverter.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,33,38,183,149,Global,0.305574673090158,444,1453,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/tomcat/util/buf/ByteChunk.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,5,7,183,149,Global,0.274670571010249,938,3415,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/tomcat/util/buf/MessageBytes.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,2,3,183,149,Global,0.20697089471793,576,2783,Mladen Turk
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/tomcat/util/http/fileupload/FileUploadBase.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,4,10,183,149,Global,0.718681318681319,1635,2275,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,java/org/apache/tomcat/util/http/Parameters.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,11,34,183,149,Global,0.405191516302627,1280,3159,Mark Emlyn David Thomas
CVE-2012-0022,189,NA,DoS,2012-1-18,2018-1-17,5,None,Remote,Low,Not required,None,None,Partial,"Apache Tomcat 5.5.x before 5.5.35, 6.x before 6.0.34, and 7.x before 7.0.23 uses an inefficient approach for handling parameters, which allows remote attackers to cause a denial of service (CPU consumption) via a request that contains many parameters and parameter values, a different vulnerability than CVE-2011-4858.",https://www.cvedetails.com/cve/CVE-2012-0022/,20111207,"Yes. Fixed in Apache Tomcat 5.5.35, 6.0.35, 7.0.23:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-0022
Analysis of the recent hash collision vulnerability identified unrelated inefficiencies with Apache Tomcat's handling of large numbers of parameters and parameter values. These inefficiencies could allow an attacker, via a specially crafted request, to cause large amounts of CPU to be used which in turn could create a denial of service. The issue was addressed by modifying the Tomcat parameter handling code to efficiently process large numbers of parameters and parameter values.
This was fixed in revisions 1221282, 1224640 and 1228191.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 5.5.0-5.5.34
This was fixed in revisions 1200601, 1206324 and 1229027.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 6.0.0-6.0.33
This was fixed in revisions 1189899, 1190372, 1190482, 1194917, 1195225, 1195226, 1195537, 1195909, 1195944, 1195951, 1195977 and 1198641.
This was identified by the Tomcat security team on 21 October 2011 and made public on 17 January 2012.
Affects: 7.0.0-7.0.22",No,2011-10-21,2012-1-17,2012-1-16,f647e1f9569ef6a79d29f15a5bd8a5c39c419786,webapps/docs/changelog.xml,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51400
Avoid known bottleneck in JVM when converting between Strings and bytes by always providing a Charset rather than an encoding name. Based on a patch by Dave Engberg.
Note: There are some Charsets that the JVM must support and in those cases Charset.forName(String) should not throw an exception.",https://github.com/apache/tomcat/commit/f647e1f9569ef6a79d29f15a5bd8a5c39c419786,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-6-21,561,5,5,183,149,Global,0.378991207774179,4914,12966,Mark Emlyn David Thomas
CVE-2009-0783,200,NA,+Info,2009-6-5,2017-9-28,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, and 6.0.0 through 6.0.18 permits web applications to replace an XML parser used for other web applications, which allows local users to read or modify the (1) web.xml, (2) context.xml, or (3) tld files of arbitrary web applications via a crafted application that is loaded earlier than the target application.",https://www.cvedetails.com/cve/CVE-2009-0783/,20090304,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Information disclosure CVE-2009-0783
Bugs 29936 and 45933 allowed a web application to replace the XML parser used by Tomcat to process web.xml, context.xml and tld files. In limited circumstances these bugs may allow a rogue web application to view and/or alter the web.xml, context.xml and tld files of other web applications deployed on the Tomcat instance.
This was fixed in revision 781708.
Affects: 4.1.0-4.1.39
This was fixed in revisions 681156 and 781542.
This was first reported to the Tomcat security team on 2 Mar 2009 and made public on 4 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revisions 652592 and 739522.
This was first reported to the Tomcat security team on 2 Mar 2009 and made public on 4 Jun 2009.
Affects: 6.0.0-6.0.18",Yes,2009-3-2,2009-6-4,2009-6-4,f69637fee018570aa8803842283e9239ef68175d,java/org/apache/catalina/core/StandardContext.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=45933
Don't use parser from web-app for tld files",https://github.com/apache/tomcat/commit/f69637fee018570aa8803842283e9239ef68175d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-10-3,194,4,42,60,59,Global,0.020336685120325,360,17702,Mladen Turk
CVE-2009-0783,200,NA,+Info,2009-6-5,2017-9-28,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, and 6.0.0 through 6.0.18 permits web applications to replace an XML parser used for other web applications, which allows local users to read or modify the (1) web.xml, (2) context.xml, or (3) tld files of arbitrary web applications via a crafted application that is loaded earlier than the target application.",https://www.cvedetails.com/cve/CVE-2009-0783/,20090304,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Information disclosure CVE-2009-0783
Bugs 29936 and 45933 allowed a web application to replace the XML parser used by Tomcat to process web.xml, context.xml and tld files. In limited circumstances these bugs may allow a rogue web application to view and/or alter the web.xml, context.xml and tld files of other web applications deployed on the Tomcat instance.
This was fixed in revision 781708.
Affects: 4.1.0-4.1.39
This was fixed in revisions 681156 and 781542.
This was first reported to the Tomcat security team on 2 Mar 2009 and made public on 4 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revisions 652592 and 739522.
This was first reported to the Tomcat security team on 2 Mar 2009 and made public on 4 Jun 2009.
Affects: 6.0.0-6.0.18",Yes,2009-3-2,2009-6-4,2009-6-4,f69637fee018570aa8803842283e9239ef68175d,java/org/apache/catalina/startup/LocalStrings.properties,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=45933
Don't use parser from web-app for tld files",https://github.com/apache/tomcat/commit/f69637fee018570aa8803842283e9239ef68175d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-10-3,194,2,2,60,59,Global,0.079681274900398,20,251,Mladen Turk
CVE-2009-0783,200,NA,+Info,2009-6-5,2017-9-28,4.6,None,Local,Low,Not required,Partial,Partial,Partial,"Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, and 6.0.0 through 6.0.18 permits web applications to replace an XML parser used for other web applications, which allows local users to read or modify the (1) web.xml, (2) context.xml, or (3) tld files of arbitrary web applications via a crafted application that is loaded earlier than the target application.",https://www.cvedetails.com/cve/CVE-2009-0783/,20090304,"Yes. Fixed in Apache Tomcat 4.1.40, 5.5.28, 6.0.20:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html","Low: Information disclosure CVE-2009-0783
Bugs 29936 and 45933 allowed a web application to replace the XML parser used by Tomcat to process web.xml, context.xml and tld files. In limited circumstances these bugs may allow a rogue web application to view and/or alter the web.xml, context.xml and tld files of other web applications deployed on the Tomcat instance.
This was fixed in revision 781708.
Affects: 4.1.0-4.1.39
This was fixed in revisions 681156 and 781542.
This was first reported to the Tomcat security team on 2 Mar 2009 and made public on 4 Jun 2009.
Affects: 5.5.0-5.5.27
This was fixed in revisions 652592 and 739522.
This was first reported to the Tomcat security team on 2 Mar 2009 and made public on 4 Jun 2009.
Affects: 6.0.0-6.0.18",Yes,2009-3-2,2009-6-4,2009-6-4,f69637fee018570aa8803842283e9239ef68175d,java/org/apache/catalina/startup/TldConfig.java,"Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=45933
Don't use parser from web-app for tld files",https://github.com/apache/tomcat/commit/f69637fee018570aa8803842283e9239ef68175d,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-10-3,194,54,75,60,59,Global,0.062344139650873,150,2406,Mladen Turk
CVE-2012-2733,20,NA,DoS,2012-11-16,2017-9-18,5,None,Remote,Low,Not required,None,None,Partial,"java/org/apache/coyote/http11/InternalNioInputBuffer.java in the HTTP NIO connector in Apache Tomcat 6.x before 6.0.36 and 7.x before 7.0.28 does not properly restrict the request-header size, which allows remote attackers to cause a denial of service (memory consumption) via a large amount of header data.",https://www.cvedetails.com/cve/CVE-2012-2733/,20120514,"Yes. Fixed in Apache Tomcat 6.0.36, 7.0.28: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-2733
The checks that limited the permitted size of request headers were implemented too late in the request parsing process for the HTTP NIO connector. This enabled a malicious user to trigger an OutOfMemoryError by sending a single request with very large headers.
This was fixed in revision 1356208.
This was reported by Josh Spiewak to the Tomcat security team on 4 June 2012 and made public on 5 November 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1350301.
This was reported by Josh Spiewak to the Tomcat security team on 4 June 2012 and made public on 5 November 2012.
Affects: 7.0.0-7.0.27",No,,,,f7a1b83b179f855ffee8465e328f7bbbc6175e85,java/org/apache/coyote/http11/InternalNioInputBuffer.java,"Improve InternalNioInputBuffer#parseHeaders()
Move the code and s/end/pos/",https://github.com/apache/tomcat/commit/f7a1b83b179f855ffee8465e328f7bbbc6175e85,Konstatin Kolinko,,,,2012-6-14,1,6,12,6,6,Local,0.062912541254125,305,4848,Filip Hanik
CVE-2012-4534,399,NA,DoS,2012-12-19,2017-9-18,2.6,None,Remote,High,Not required,None,None,Partial,"org/apache/tomcat/util/net/NioEndpoint.java in Apache Tomcat 6.x before 6.0.36 and 7.x before 7.0.28, when the NIO connector is used in conjunction with sendfile and HTTPS, allows remote attackers to cause a denial of service (infinite loop) by terminating the connection during the reading of a response.",https://www.cvedetails.com/cve/CVE-2012-4534/,20120821,"Yes. Fixed in Apache Tomcat 6.0.36, 7.0.28: 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Important: Denial of service CVE-2012-4534
When using the NIO connector with sendfile and HTTPS enabled, if a client breaks the connection while reading the response an infinite loop is entered leading to a denial of service. This was originally reported as bug 52858.
This was fixed in revision 1372035.
The security implications of this bug were reported to the Tomcat security team by Arun Neelicattu of the Red Hat Security Response Team on 3 October 2012 and made public on 4 December 2012.
Affects: 6.0.0-6.0.35
This was fixed in revision 1340218.
The security implications of this bug were reported to the Tomcat security team by Arun Neelicattu of the Red Hat Security Response Team on 3 October 2012 and made public on 4 December 2012.
Affects: 7.0.0-7.0.27",No,2012-10-3,2012-12-4,2012-10-19,f7fcd24eb4451756ca45e2a2ae829f441a7eac6a,java/org/apache/tomcat/util/net/NioEndpoint.java,"https://issues.apache.org/bugzilla/show_bug.cgi?id=52858
https://issues.apache.org/bugzilla/show_bug.cgi?id=53138
Fix broken NIO sendfile download
Fix high CPU usage due to registered OP_READ for sendfile processes",https://github.com/apache/tomcat/commit/f7fcd24eb4451756ca45e2a2ae829f441a7eac6a,Filip Hanik,,,,2012-5-18,65,9,12,9,3,Local,0.803349634309949,18563,23107,Filip Hanik
CVE-2008-3271,264,NA,Bypass +Info,2008-10-13,2017-8-7,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 5.5.0 and 4.1.0 through 4.1.31 allows remote attackers to bypass an IP address restriction and obtain sensitive information via a request that is processed concurrently with another request but in a different thread, leading to an instance-variable overwrite associated with a ""synchronization problem"" and lack of thread safety, and related to RemoteFilterValve, RemoteAddrValve, and RemoteHostValve.",https://www.cvedetails.com/cve/CVE-2008-3271/,20080724,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.1:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html ","Bug 25835 can, in rare circumstances - this has only been reproduced using a debugger to force a particular processing sequence for two threads - allow a user from a non-permitted IP address to gain access to a context that is protected with a valve that extends RequestFilterValve. This includes the standard RemoteAddrValve and RemoteHostValve implementations.",No,,,,f84da3c2eb997d13bc430dd1c009da321e69273f,java/org/apache/catalina/valves/ExtendedAccessLogValve.java,"Generics for o.a.c.valves
Fix a couple of other Eclipse warnings as well",https://github.com/apache/tomcat/commit/f84da3c2eb997d13bc430dd1c009da321e69273f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-12-2,1,1,2,13,29,Global,0.002444190972788,15,6137,Remy Maucherat
CVE-2008-3271,264,NA,Bypass +Info,2008-10-13,2017-8-7,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 5.5.0 and 4.1.0 through 4.1.31 allows remote attackers to bypass an IP address restriction and obtain sensitive information via a request that is processed concurrently with another request but in a different thread, leading to an instance-variable overwrite associated with a ""synchronization problem"" and lack of thread safety, and related to RemoteFilterValve, RemoteAddrValve, and RemoteHostValve.",https://www.cvedetails.com/cve/CVE-2008-3271/,20080724,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.1:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html ","Bug 25835 can, in rare circumstances - this has only been reproduced using a debugger to force a particular processing sequence for two threads - allow a user from a non-permitted IP address to gain access to a context that is protected with a valve that extends RequestFilterValve. This includes the standard RemoteAddrValve and RemoteHostValve implementations.",No,,,,f84da3c2eb997d13bc430dd1c009da321e69273f,java/org/apache/catalina/valves/JDBCAccessLogValve.java,"Generics for o.a.c.valves
Fix a couple of other Eclipse warnings as well",https://github.com/apache/tomcat/commit/f84da3c2eb997d13bc430dd1c009da321e69273f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-12-2,1,2,4,13,29,Global,0.008196721311475,18,2196,Mladen Turk
CVE-2008-3271,264,NA,Bypass +Info,2008-10-13,2017-8-7,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 5.5.0 and 4.1.0 through 4.1.31 allows remote attackers to bypass an IP address restriction and obtain sensitive information via a request that is processed concurrently with another request but in a different thread, leading to an instance-variable overwrite associated with a ""synchronization problem"" and lack of thread safety, and related to RemoteFilterValve, RemoteAddrValve, and RemoteHostValve.",https://www.cvedetails.com/cve/CVE-2008-3271/,20080724,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.1:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html ","Bug 25835 can, in rare circumstances - this has only been reproduced using a debugger to force a particular processing sequence for two threads - allow a user from a non-permitted IP address to gain access to a context that is protected with a valve that extends RequestFilterValve. This includes the standard RemoteAddrValve and RemoteHostValve implementations.",No,,,,f84da3c2eb997d13bc430dd1c009da321e69273f,java/org/apache/catalina/valves/RequestDumperValve.java,"Generics for o.a.c.valves
Fix a couple of other Eclipse warnings as well",https://github.com/apache/tomcat/commit/f84da3c2eb997d13bc430dd1c009da321e69273f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-12-2,1,6,12,13,29,Global,0.041666666666667,25,600,Mladen Turk
CVE-2008-3271,264,NA,Bypass +Info,2008-10-13,2017-8-7,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 5.5.0 and 4.1.0 through 4.1.31 allows remote attackers to bypass an IP address restriction and obtain sensitive information via a request that is processed concurrently with another request but in a different thread, leading to an instance-variable overwrite associated with a ""synchronization problem"" and lack of thread safety, and related to RemoteFilterValve, RemoteAddrValve, and RemoteHostValve.",https://www.cvedetails.com/cve/CVE-2008-3271/,20080724,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.1:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html ","Bug 25835 can, in rare circumstances - this has only been reproduced using a debugger to force a particular processing sequence for two threads - allow a user from a non-permitted IP address to gain access to a context that is protected with a valve that extends RequestFilterValve. This includes the standard RemoteAddrValve and RemoteHostValve implementations.",No,,,,f84da3c2eb997d13bc430dd1c009da321e69273f,java/org/apache/catalina/valves/RequestFilterValve.java,"Generics for o.a.c.valves
Fix a couple of other Eclipse warnings as well",https://github.com/apache/tomcat/commit/f84da3c2eb997d13bc430dd1c009da321e69273f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-12-2,1,2,4,13,29,Global,0.019144144144144,17,888,Mladen Turk
CVE-2008-3271,264,NA,Bypass +Info,2008-10-13,2017-8-7,4.3,None,Remote,Medium,Not required,Partial,None,None,"Apache Tomcat 5.5.0 and 4.1.0 through 4.1.31 allows remote attackers to bypass an IP address restriction and obtain sensitive information via a request that is processed concurrently with another request but in a different thread, leading to an instance-variable overwrite associated with a ""synchronization problem"" and lack of thread safety, and related to RemoteFilterValve, RemoteAddrValve, and RemoteHostValve.",https://www.cvedetails.com/cve/CVE-2008-3271/,20080724,"Yes. Fixed in Apache Tomcat 4.1.32, 5.5.1:
http://tomcat.apache.org/security-4.html
http://tomcat.apache.org/security-5.html ","Bug 25835 can, in rare circumstances - this has only been reproduced using a debugger to force a particular processing sequence for two threads - allow a user from a non-permitted IP address to gain access to a context that is protected with a valve that extends RequestFilterValve. This includes the standard RemoteAddrValve and RemoteHostValve implementations.",No,,,,f84da3c2eb997d13bc430dd1c009da321e69273f,java/org/apache/catalina/valves/SSLValve.java,"Generics for o.a.c.valves
Fix a couple of other Eclipse warnings as well",https://github.com/apache/tomcat/commit/f84da3c2eb997d13bc430dd1c009da321e69273f,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2008-12-2,1,1,18,13,29,Global,0.135338345864662,18,133,Jean-Frederic Clere
CVE-2016-5388,284,NA,,2016-7-18,2018-8-15,5.1,None,Remote,High,Not required,Partial,Partial,Partial,"Apache Tomcat 7.x through 7.0.70 and 8.x through 8.5.4, when the CGI Servlet is enabled, follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an ""httpoxy"" issue. NOTE: the vendor states ""A mitigation is planned for future releases of Tomcat, tracked as CVE-2016-5388""; in other words, this is not a CVE ID for a vulnerability.",https://www.cvedetails.com/cve/CVE-2016-5388/,20160610,"Yes. Fixed in Apache Tomcat 7.0.71:
https://tomcat.apache.org/tomcat-7.0-doc/changelog.html","Add a new initialisation parameter, envHttpHeaders, to the CGI Servlet to mitigate httpoxy (CVE-2016-5388) by default and to provide a mechanism that can be used to mitigate any future, similar issues. (markt)
",No,,,,fb3569fbb9a2f55459aa8e1e22bc35a737e66329,conf/web.xml,"Add a new initialisation parameter, envHttpHeaders, to the CGI Servlet to mitigate httpoxy (CVE-2016-5388) by default and to provide a mechanism that can be used to mitigate any future, similar issues.",https://github.com/apache/tomcat/commit/fb3569fbb9a2f55459aa8e1e22bc35a737e66329,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-19,1,10,11,40,7,Global,0.026879044300647,162,6027,Rainer Jung
CVE-2016-5388,284,NA,,2016-7-18,2018-8-15,5.1,None,Remote,High,Not required,Partial,Partial,Partial,"Apache Tomcat 7.x through 7.0.70 and 8.x through 8.5.4, when the CGI Servlet is enabled, follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an ""httpoxy"" issue. NOTE: the vendor states ""A mitigation is planned for future releases of Tomcat, tracked as CVE-2016-5388""; in other words, this is not a CVE ID for a vulnerability.",https://www.cvedetails.com/cve/CVE-2016-5388/,20160610,"Yes. Fixed in Apache Tomcat 7.0.71:
https://tomcat.apache.org/tomcat-7.0-doc/changelog.html","Add a new initialisation parameter, envHttpHeaders, to the CGI Servlet to mitigate httpoxy (CVE-2016-5388) by default and to provide a mechanism that can be used to mitigate any future, similar issues. (markt)
",No,,,,fb3569fbb9a2f55459aa8e1e22bc35a737e66329,java/org/apache/catalina/servlets/CGIServlet.java,"Add a new initialisation parameter, envHttpHeaders, to the CGI Servlet to mitigate httpoxy (CVE-2016-5388) by default and to provide a mechanism that can be used to mitigate any future, similar issues.",https://github.com/apache/tomcat/commit/fb3569fbb9a2f55459aa8e1e22bc35a737e66329,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-19,1,17,23,40,7,Global,0.084775967413442,666,7856,Mladen Turk
CVE-2016-5388,284,NA,,2016-7-18,2018-8-15,5.1,None,Remote,High,Not required,Partial,Partial,Partial,"Apache Tomcat 7.x through 7.0.70 and 8.x through 8.5.4, when the CGI Servlet is enabled, follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an ""httpoxy"" issue. NOTE: the vendor states ""A mitigation is planned for future releases of Tomcat, tracked as CVE-2016-5388""; in other words, this is not a CVE ID for a vulnerability.",https://www.cvedetails.com/cve/CVE-2016-5388/,20160610,"Yes. Fixed in Apache Tomcat 7.0.71:
https://tomcat.apache.org/tomcat-7.0-doc/changelog.html","Add a new initialisation parameter, envHttpHeaders, to the CGI Servlet to mitigate httpoxy (CVE-2016-5388) by default and to provide a mechanism that can be used to mitigate any future, similar issues. (markt)
",No,,,,fb3569fbb9a2f55459aa8e1e22bc35a737e66329,webapps/docs/cgi-howto.xml,"Add a new initialisation parameter, envHttpHeaders, to the CGI Servlet to mitigate httpoxy (CVE-2016-5388) by default and to provide a mechanism that can be used to mitigate any future, similar issues.",https://github.com/apache/tomcat/commit/fb3569fbb9a2f55459aa8e1e22bc35a737e66329,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-19,1,6,6,40,7,Global,0.149253731343284,30,201,Remy Maucherat
CVE-2016-5388,284,NA,,2016-7-18,2018-8-15,5.1,None,Remote,High,Not required,Partial,Partial,Partial,"Apache Tomcat 7.x through 7.0.70 and 8.x through 8.5.4, when the CGI Servlet is enabled, follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an ""httpoxy"" issue. NOTE: the vendor states ""A mitigation is planned for future releases of Tomcat, tracked as CVE-2016-5388""; in other words, this is not a CVE ID for a vulnerability.",https://www.cvedetails.com/cve/CVE-2016-5388/,20160610,"Yes. Fixed in Apache Tomcat 7.0.71:
https://tomcat.apache.org/tomcat-7.0-doc/changelog.html","Add a new initialisation parameter, envHttpHeaders, to the CGI Servlet to mitigate httpoxy (CVE-2016-5388) by default and to provide a mechanism that can be used to mitigate any future, similar issues. (markt)
",No,,,,fb3569fbb9a2f55459aa8e1e22bc35a737e66329,webapps/docs/changelog.xml,"Add a new initialisation parameter, envHttpHeaders, to the CGI Servlet to mitigate httpoxy (CVE-2016-5388) by default and to provide a mechanism that can be used to mitigate any future, similar issues.",https://github.com/apache/tomcat/commit/fb3569fbb9a2f55459aa8e1e22bc35a737e66329,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-1-19,1,7,7,40,7,Global,0.056633230553062,1451,25621,Mark Emlyn David Thomas
CVE-2016-6796,254,NA,Bypass,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,None,Partial,None,"A malicious web application running on Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.",https://www.cvedetails.com/cve/CVE-2016-6796/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager Bypass CVE-2016-6796
A malicious web application was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.
This was fixed in revisions 1758496 and 1763237.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revisions 1758495 and 1763236.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revisions 1758493 and 1763233 for 8.5.x and revisions 1758494 and 1763234for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revisions 1758487 and 1763232.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2015-12-27,2016-10-27,2016-10-16,fb65c5fe6d298195beee11324416a975bea6d701,java/org/apache/naming/factory/ResourceLinkFactory.java,Improve the access checks for linked global resources to handle the case where the current class loader is a child of the web application class loader.,https://github.com/apache/tomcat/commit/fb65c5fe6d298195beee11324416a975bea6d701,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-4,36,6,9,11,3,Global,0.254582484725051,125,491,Mladen Turk
CVE-2016-6796,254,NA,Bypass,2017-8-10,2018-6-5,5,None,Remote,Low,Not required,None,Partial,None,"A malicious web application running on Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.",https://www.cvedetails.com/cve/CVE-2016-6796/,20160812,"Yes. Fixed in Apache Tomcat 6.0.47, 7.0.72, 8.0.37, 8.5.5, 9.0.0.M10:
http://tomcat.apache.org/security-6.html
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Low: Security Manager Bypass CVE-2016-6796
A malicious web application was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.
This was fixed in revisions 1758496 and 1763237.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 6.0.0 to 6.0.45
This was fixed in revisions 1758495 and 1763236.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 7.0.0 to 7.0.70
This was fixed in revisions 1758493 and 1763233 for 8.5.x and revisions 1758494 and 1763234for 8.0.x.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36
This was fixed in revisions 1758487 and 1763232.
This issue was identified by the Apache Tomcat Security Team on 27 December 2015 and made public on 27 October 2016.
Affects: 9.0.0.M1 to 9.0.0.M9",No,2015-12-27,2016-10-27,2016-10-16,fb65c5fe6d298195beee11324416a975bea6d701,webapps/docs/changelog.xml,Improve the access checks for linked global resources to handle the case where the current class loader is a child of the web application class loader.,https://github.com/apache/tomcat/commit/fb65c5fe6d298195beee11324416a975bea6d701,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2016-10-4,36,5,5,11,3,Global,0.064986123959297,1686,25944,Mark Emlyn David Thomas
CVE-2017-12617,434,NA,Exec Code,2017-10-3,2018-7-18,6.8,None,Remote,Medium,Not required,Partial,Partial,Partial,"When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",https://www.cvedetails.com/cve/CVE-2017-12617/,20170807,"Yes. Fixed in Apache Tomcat 7.0.82, 8.0.47, 8.5.23, 9.0.1:
https://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html
http://tomcat.apache.org/security-9.html","Important: Remote Code Execution CVE-2017-12617
When running with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
This was fixed in revisions 1809978, 1809992, 1810014 and 1810026.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 7.0.0 to 7.0.81
This was fixed in revision 1809921.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.0.0.RC1 to 8.0.46
This was fixed in revisions 1809673, 1809675 and 1809896.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 8.5.0 to 8.5.22
This was fixed in revisions 1809669, 1809674, 1809684 and 1809711.
This issue was first reported publicly followed by multiple reports to the Apache Tomcat Security Team on 20 September 2017.
Affects: 9.0.0.M1 to 9.0.0",No,2017-9-20,,2017-10-4,fbd42a0cd6aaababd6c0c6023af3219be9ab604c,java/org/apache/catalina/webresources/AbstractFileResourceSet.java,Correct regression in r1809146 that caused problems on Windows,https://github.com/apache/tomcat/commit/fbd42a0cd6aaababd6c0c6023af3219be9ab604c,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2017-9-21,7,6,6,6,0,Local,0.445454545454545,147,330,Mark Emlyn David Thomas
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,fc049912464f0dcf9dede3761f38049369057e16,java/org/apache/catalina/connector/mbeans-descriptors.xml,Allow to configure maxSwallowSize attribute of an HTTP connector via JMX. This makes sense when configuring a new connector via JMX.,https://github.com/apache/tomcat/commit/fc049912464f0dcf9dede3761f38049369057e16,Konstatin Kolinko,,,,2014-7-9,239,4,4,8,0,Global,0.008724100327154,8,917,Mladen Turk
CVE-2014-0230,399,NA,DoS,2015-6-7,2018-7-18,7.8,None,Remote,Low,Not required,None,None,Complete,"Apache Tomcat 6.x before 6.0.44, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle cases where an HTTP response occurs before finishing the reading of an entire request body, which allows remote attackers to cause a denial of service (thread consumption) via a series of aborted upload attempts.",https://www.cvedetails.com/cve/CVE-2014-0230/,20131203,"Yes. Fixed in Apache Tomcat 6.0.44, 7.0.55, 8.0.9:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Low: Denial of Service CVE-2014-0230
When a response for a request with a request body is returned to the user agent before the request body is fully read, by default Tomcat swallows the remaining request body so that the next request on the connection may be processed. There was no limit to the size of request body that Tomcat would swallow. This permitted a limited Denial of Service as Tomcat would never close the connection and a processing thread would remain allocated to the connection.
This was fixed in revision 1659537.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 6.0.0 to 6.0.43
This was fixed in revision 1603781 and improved in revisions 1603811, 1609176 and 1659295.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 7.0.0 to 7.0.54
This was fixed in revision 1603770 and improved in revisions 1603775, 1603779, 1609175 and 1659294.
This issue was disclosed to the Tomcat security team by AntBean@secdig from the Baidu Security Team on 4 June 2014 and made public on 9 April 2015.
Affects: 8.0.0-RC1 to 8.0.8",No,2014-6-4,2015-4-9,2014-7-27,fc049912464f0dcf9dede3761f38049369057e16,webapps/docs/changelog.xml,Allow to configure maxSwallowSize attribute of an HTTP connector via JMX. This makes sense when configuring a new connector via JMX.,https://github.com/apache/tomcat/commit/fc049912464f0dcf9dede3761f38049369057e16,Konstatin Kolinko,,,,2014-7-9,239,4,4,8,0,Global,0.049725721251524,979,19688,Mark Emlyn David Thomas
CVE-2011-1088,NA,NA,Bypass,2011-3-14,2017-8-16,5.8,None,Remote,Medium,Not required,Partial,Partial,None,"Apache Tomcat 7.x before 7.0.10 does not follow ServletSecurity annotations, which allows remote attackers to bypass intended access restrictions via HTTP requests to a web application.",https://www.cvedetails.com/cve/CVE-2011-1088/,20110224,"Yes. Fixed in Apache Tomcat 7.0.11:
http://tomcat.apache.org/security-7.html","Important: Security constraint bypass CVE-2011-1088
When a web application was started, ServletSecurity annotations were ignored. This meant that some areas of the application may not have been protected as expected. This was partially fixed in Apache Tomcat 7.0.10 and fully fixed in 7.0.11.
This was fixed in revisions 1076586, 1076587, 1077995 and 1079752.
This was reported publicly on the Tomcat users mailing list on 2 Mar 2011.
Affects: 7.0.0-7.0.10",Yes,2011-3-2,2011-3-2,2011-3-11,fc17fb2dd803f948db3da6c9c72431b25d622002,test/org/apache/catalina/core/TestStandardWrapper.java,"@ServletSecurity
Refactor to reduce duplication in test code
Add tests for method constraints",https://github.com/apache/tomcat/commit/fc17fb2dd803f948db3da6c9c72431b25d622002,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-3,7,50,83,53,34,Global,1,208,208,Mark Emlyn David Thomas
CVE-2011-1475,20,NA,,2011-4-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP BIO connector in Apache Tomcat 7.0.x before 7.0.12 does not properly handle HTTP pipelining, which allows remote attackers to read responses intended for other clients in opportunistic circumstances by examining the application data in HTTP packets, related to ""a mix-up of responses for requests from different users.""",https://www.cvedetails.com/cve/CVE-2011-1475/,20110321,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-1475
Changes introduced to the HTTP BIO connector to support Servlet 3.0 asynchronous requests did not fully account for HTTP pipelining. As a result, when using HTTP pipelining a range of unexpected behaviours occurred including the mixing up of responses between requests. While the mix-up in responses was only observed between requests from the same user, a mix-up of responses for requests from different users may also be possible.
This was fixed in revisions 1086349 and 1086352. (Note: HTTP pipelined requests are still likely to fail with the HTTP BIO connector but will do so in a secure manner.)
This was reported publicly on the Tomcat Bugzilla issue tracker on 22 Mar 2011.
Affects: 7.0.0-7.0.11",No,2011-3-22,2011-3-22,2011-4-6,fd8a579e0e2379a84826b11700adf396e4ed2041,java/org/apache/catalina/connector/CoyoteAdapter.java,"Protect against things going wrong during access logging. An un-handled exception here could trigger some unexpected code paths.
Possible contributing factor to https://issues.apache.org/bugzilla/show_bug.cgi?id=50957 ? This is part of the fix for CVE-2011-1475",https://github.com/apache/tomcat/commit/fd8a579e0e2379a84826b11700adf396e4ed2041,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-28,1,7,9,8,2,Global,0.331142339075249,1461,4412,Mark Emlyn David Thomas
CVE-2011-1475,20,NA,,2011-4-8,2017-9-18,5,None,Remote,Low,Not required,Partial,None,None,"The HTTP BIO connector in Apache Tomcat 7.0.x before 7.0.12 does not properly handle HTTP pipelining, which allows remote attackers to read responses intended for other clients in opportunistic circumstances by examining the application data in HTTP packets, related to ""a mix-up of responses for requests from different users.""",https://www.cvedetails.com/cve/CVE-2011-1475/,20110321,"Yes. Fixed in Apache Tomcat 7.0.12:
http://tomcat.apache.org/security-7.html","Important: Information disclosure CVE-2011-1475
Changes introduced to the HTTP BIO connector to support Servlet 3.0 asynchronous requests did not fully account for HTTP pipelining. As a result, when using HTTP pipelining a range of unexpected behaviours occurred including the mixing up of responses between requests. While the mix-up in responses was only observed between requests from the same user, a mix-up of responses for requests from different users may also be possible.
This was fixed in revisions 1086349 and 1086352. (Note: HTTP pipelined requests are still likely to fail with the HTTP BIO connector but will do so in a secure manner.)
This was reported publicly on the Tomcat Bugzilla issue tracker on 22 Mar 2011.
Affects: 7.0.0-7.0.11",No,2011-3-22,2011-3-22,2011-4-6,fd8a579e0e2379a84826b11700adf396e4ed2041,java/org/apache/catalina/connector/LocalStrings.properties,"Protect against things going wrong during access logging. An un-handled exception here could trigger some unexpected code paths.
Possible contributing factor to https://issues.apache.org/bugzilla/show_bug.cgi?id=50957 ? This is part of the fix for CVE-2011-1475",https://github.com/apache/tomcat/commit/fd8a579e0e2379a84826b11700adf396e4ed2041,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-3-28,1,1,1,8,2,Global,0.278985507246377,77,276,Mladen Turk
CVE-2011-2526,20,NA,DoS Bypass,2011-7-14,2018-1-5,4.4,None,Local,Medium,Not required,Partial,Partial,Partial,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.19, when sendfile is enabled for the HTTP APR or HTTP NIO connector, does not validate certain request attributes, which allows local users to bypass intended file access restrictions or cause a denial of service (infinite loop or JVM crash) by leveraging an untrusted web application.",https://www.cvedetails.com/cve/CVE-2011-2526/,20110615,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2526
Tomcat provides support for sendfile with the HTTP APR connector. sendfile is used automatically for content served via the DefaultServlet and deployed web applications may use it directly via setting request attributes. These request attributes were not validated. When running under a security manager, this lack of validation allowed a malicious web application to do one or more of the following that would normally be prevented by a security manager:
return files to users that the security manager should make inaccessible
terminate (via a crash) the JVM
Additionally, these vulnerabilities only occur when all of the following are true:
untrusted web applications are being used
the SecurityManager is used to limit the untrusted web applications
the HTTP APR connector is used
sendfile is enabled for the connector (this is the default)
This was fixed in revision 1158244.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1146703.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 6.0.0-6.0.32
This was fixed in revisions 1145383, 1145489, 1145571, 1145694 and 1146005.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 7.0.0-7.0.18
Note: The issues below were fixed in Apache Tomcat 7.0.17 but the release votes for the 7.0.17 and 7.0.18 release candidates did not pass. Therefore, although users must download 7.0.19 to obtain a version that includes a fix for these issues, versions 7.0.17 and 7.0.18 are not included in the list of affected versions.",No,2011-7-7,2011-7-13,2011-9-22,ff8789737a0a64c12d68929497f16d8021052048,java/org/apache/tomcat/util/net/NioEndpoint.java,"Protect against infinite loops in the HTTP NIO connector if sendfile is configured to send more data than is available in the file. (markt)
Part of the fix for CVE-2011-2526",https://github.com/apache/tomcat/commit/ff8789737a0a64c12d68929497f16d8021052048,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-7-12,2,7,7,11,0,Global,0.040203449800973,909,22610,Filip Hanik
CVE-2011-2526,20,NA,DoS Bypass,2011-7-14,2018-1-5,4.4,None,Local,Medium,Not required,Partial,Partial,Partial,"Apache Tomcat 5.5.x before 5.5.34, 6.x before 6.0.33, and 7.x before 7.0.19, when sendfile is enabled for the HTTP APR or HTTP NIO connector, does not validate certain request attributes, which allows local users to bypass intended file access restrictions or cause a denial of service (infinite loop or JVM crash) by leveraging an untrusted web application.",https://www.cvedetails.com/cve/CVE-2011-2526/,20110615,"Yes. Fixed in Apache Tomcat 5.5.34, 6.0.33, 7.0.19:
http://tomcat.apache.org/security-5.html 
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html","Low: Information disclosure CVE-2011-2526
Tomcat provides support for sendfile with the HTTP APR connector. sendfile is used automatically for content served via the DefaultServlet and deployed web applications may use it directly via setting request attributes. These request attributes were not validated. When running under a security manager, this lack of validation allowed a malicious web application to do one or more of the following that would normally be prevented by a security manager:
return files to users that the security manager should make inaccessible
terminate (via a crash) the JVM
Additionally, these vulnerabilities only occur when all of the following are true:
untrusted web applications are being used
the SecurityManager is used to limit the untrusted web applications
the HTTP APR connector is used
sendfile is enabled for the connector (this is the default)
This was fixed in revision 1158244.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 5.5.0-5.5.33
This was fixed in revision 1146703.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 6.0.0-6.0.32
This was fixed in revisions 1145383, 1145489, 1145571, 1145694 and 1146005.
This was identified by the Tomcat security team on 7 July 2011 and made public on 13 July 2011.
Affects: 7.0.0-7.0.18
Note: The issues below were fixed in Apache Tomcat 7.0.17 but the release votes for the 7.0.17 and 7.0.18 release candidates did not pass. Therefore, although users must download 7.0.19 to obtain a version that includes a fix for these issues, versions 7.0.17 and 7.0.18 are not included in the list of affected versions.",No,2011-7-7,2011-7-13,2011-9-22,ff8789737a0a64c12d68929497f16d8021052048,webapps/docs/changelog.xml,"Protect against infinite loops in the HTTP NIO connector if sendfile is configured to send more data than is available in the file. (markt)
Part of the fix for CVE-2011-2526",https://github.com/apache/tomcat/commit/ff8789737a0a64c12d68929497f16d8021052048,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2011-7-12,2,4,4,11,0,Global,0.387599221207129,5176,13354,Mark Emlyn David Thomas
CVE-2014-0099,289,NA,Overflow,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,None,Partial,None,"Integer overflow in java/org/apache/tomcat/util/buf/Ascii.java in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4, when operated behind a reverse proxy, allows remote attackers to conduct HTTP request smuggling attacks via a crafted Content-Length HTTP header.",https://www.cvedetails.com/cve/CVE-2014-0099/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0099
The code used to parse the request content length header did not check for overflow in the result. This exposed a request smuggling vulnerability when Tomcat was located behind a reverse proxy that correctly processed the content length header.
This was fixed in revision 1580473.
A test case that demonstrated the parsing bug was sent to the Tomcat security team on 13 March 2014 but no context was provided. The security implications were identified by the Tomcat security team the day the report was received and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revision 1578814.
A test case that demonstrated the parsing bug was sent to the Tomcat security team on 13 March 2014 but no context was provided. The security implications were identified by the Tomcat security team the day the report was received and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revision 1578812.
A test case that demonstrated the parsing bug was sent to the Tomcat security team on 13 March 2014 but no context was provided. The security implications were identified by the Tomcat security team the day the report was received and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-5-27,2014-5-27,2014-5-23,fffd63a3bd3a5475379b7c074820a5463b7663b3,java/org/apache/tomcat/util/buf/Ascii.java,Fix possible overflow when parsing long values from a byte array.,https://github.com/apache/tomcat/commit/fffd63a3bd3a5475379b7c074820a5463b7663b3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-18,1,6,18,75,12,Global,0.221638655462185,211,952,Mladen Turk
CVE-2014-0099,289,NA,Overflow,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,None,Partial,None,"Integer overflow in java/org/apache/tomcat/util/buf/Ascii.java in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4, when operated behind a reverse proxy, allows remote attackers to conduct HTTP request smuggling attacks via a crafted Content-Length HTTP header.",https://www.cvedetails.com/cve/CVE-2014-0099/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0099
The code used to parse the request content length header did not check for overflow in the result. This exposed a request smuggling vulnerability when Tomcat was located behind a reverse proxy that correctly processed the content length header.
This was fixed in revision 1580473.
A test case that demonstrated the parsing bug was sent to the Tomcat security team on 13 March 2014 but no context was provided. The security implications were identified by the Tomcat security team the day the report was received and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revision 1578814.
A test case that demonstrated the parsing bug was sent to the Tomcat security team on 13 March 2014 but no context was provided. The security implications were identified by the Tomcat security team the day the report was received and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revision 1578812.
A test case that demonstrated the parsing bug was sent to the Tomcat security team on 13 March 2014 but no context was provided. The security implications were identified by the Tomcat security team the day the report was received and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-5-27,2014-5-27,2014-5-23,fffd63a3bd3a5475379b7c074820a5463b7663b3,test/org/apache/tomcat/util/buf/TestAscii.java,Fix possible overflow when parsing long values from a byte array.,https://github.com/apache/tomcat/commit/fffd63a3bd3a5475379b7c074820a5463b7663b3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-18,1,65,65,75,12,Global,1,65,65,Mark Emlyn David Thomas
CVE-2014-0099,289,NA,Overflow,2014-5-31,2017-11-14,4.3,None,Remote,Medium,Not required,None,Partial,None,"Integer overflow in java/org/apache/tomcat/util/buf/Ascii.java in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4, when operated behind a reverse proxy, allows remote attackers to conduct HTTP request smuggling attacks via a crafted Content-Length HTTP header.",https://www.cvedetails.com/cve/CVE-2014-0099/,20131203,"Yes. Fixed in Apache Tomcat 6.0.41, 7.0.53, 8.0.5:
http://tomcat.apache.org/security-6.html
http://tomcat.apache.org/security-7.html
http://tomcat.apache.org/security-8.html","Important: Information disclosure CVE-2014-0099
The code used to parse the request content length header did not check for overflow in the result. This exposed a request smuggling vulnerability when Tomcat was located behind a reverse proxy that correctly processed the content length header.
This was fixed in revision 1580473.
A test case that demonstrated the parsing bug was sent to the Tomcat security team on 13 March 2014 but no context was provided. The security implications were identified by the Tomcat security team the day the report was received and made public on 27 May 2014.
Affects: 6.0.0-6.0.39
This was fixed in revision 1578814.
A test case that demonstrated the parsing bug was sent to the Tomcat security team on 13 March 2014 but no context was provided. The security implications were identified by the Tomcat security team the day the report was received and made public on 27 May 2014.
Affects: 7.0.0-7.0.52
This was fixed in revision 1578812.
A test case that demonstrated the parsing bug was sent to the Tomcat security team on 13 March 2014 but no context was provided. The security implications were identified by the Tomcat security team the day the report was received and made public on 27 May 2014.
Affects: 8.0.0-RC1 to 8.0.3",No,2014-5-27,2014-5-27,2014-5-23,fffd63a3bd3a5475379b7c074820a5463b7663b3,webapps/docs/changelog.xml,Fix possible overflow when parsing long values from a byte array.,https://github.com/apache/tomcat/commit/fffd63a3bd3a5475379b7c074820a5463b7663b3,Mark Thomas,markt-asf,https://github.com/markt-asf,Apache - OpenPGP,2014-3-18,1,4,4,75,12,Global,0.531096563011457,9735,18330,Mark Emlyn David Thomas
